// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinix.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.Object;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionPortArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionPortArgs Empty = new ConnectionPortArgs();

    @Import(name="id")
    private @Nullable Output<String> id;

    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    @Import(name="linkStatus")
    private @Nullable Output<String> linkStatus;

    public Optional<Output<String>> linkStatus() {
        return Optional.ofNullable(this.linkStatus);
    }

    /**
     * Name of the connection resource
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of the connection resource
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="role")
    private @Nullable Output<String> role;

    public Optional<Output<String>> role() {
        return Optional.ofNullable(this.role);
    }

    /**
     * Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
     * 
     */
    @Import(name="speed")
    private @Nullable Output<Integer> speed;

    /**
     * @return Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
     * 
     */
    public Optional<Output<Integer>> speed() {
        return Optional.ofNullable(this.speed);
    }

    /**
     * Status of the connection resource.
     * 
     */
    @Import(name="status")
    private @Nullable Output<String> status;

    /**
     * @return Status of the connection resource.
     * 
     */
    public Optional<Output<String>> status() {
        return Optional.ofNullable(this.status);
    }

    @Import(name="virtualCircuitIds")
    private @Nullable Output<List<Object>> virtualCircuitIds;

    public Optional<Output<List<Object>>> virtualCircuitIds() {
        return Optional.ofNullable(this.virtualCircuitIds);
    }

    private ConnectionPortArgs() {}

    private ConnectionPortArgs(ConnectionPortArgs $) {
        this.id = $.id;
        this.linkStatus = $.linkStatus;
        this.name = $.name;
        this.role = $.role;
        this.speed = $.speed;
        this.status = $.status;
        this.virtualCircuitIds = $.virtualCircuitIds;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionPortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionPortArgs $;

        public Builder() {
            $ = new ConnectionPortArgs();
        }

        public Builder(ConnectionPortArgs defaults) {
            $ = new ConnectionPortArgs(Objects.requireNonNull(defaults));
        }

        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        public Builder id(String id) {
            return id(Output.of(id));
        }

        public Builder linkStatus(@Nullable Output<String> linkStatus) {
            $.linkStatus = linkStatus;
            return this;
        }

        public Builder linkStatus(String linkStatus) {
            return linkStatus(Output.of(linkStatus));
        }

        /**
         * @param name Name of the connection resource
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of the connection resource
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public Builder role(@Nullable Output<String> role) {
            $.role = role;
            return this;
        }

        public Builder role(String role) {
            return role(Output.of(role));
        }

        /**
         * @param speed Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
         * 
         * @return builder
         * 
         */
        public Builder speed(@Nullable Output<Integer> speed) {
            $.speed = speed;
            return this;
        }

        /**
         * @param speed Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
         * 
         * @return builder
         * 
         */
        public Builder speed(Integer speed) {
            return speed(Output.of(speed));
        }

        /**
         * @param status Status of the connection resource.
         * 
         * @return builder
         * 
         */
        public Builder status(@Nullable Output<String> status) {
            $.status = status;
            return this;
        }

        /**
         * @param status Status of the connection resource.
         * 
         * @return builder
         * 
         */
        public Builder status(String status) {
            return status(Output.of(status));
        }

        public Builder virtualCircuitIds(@Nullable Output<List<Object>> virtualCircuitIds) {
            $.virtualCircuitIds = virtualCircuitIds;
            return this;
        }

        public Builder virtualCircuitIds(List<Object> virtualCircuitIds) {
            return virtualCircuitIds(Output.of(virtualCircuitIds));
        }

        public Builder virtualCircuitIds(Object... virtualCircuitIds) {
            return virtualCircuitIds(List.of(virtualCircuitIds));
        }

        public ConnectionPortArgs build() {
            return $;
        }
    }

}
