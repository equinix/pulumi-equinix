// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinix.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceProfileAccessPointTypeConfigApiConfigArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceProfileAccessPointTypeConfigApiConfigArgs Empty = new ServiceProfileAccessPointTypeConfigApiConfigArgs();

    @Import(name="allowOverSubscription")
    private @Nullable Output<Boolean> allowOverSubscription;

    public Optional<Output<Boolean>> allowOverSubscription() {
        return Optional.ofNullable(this.allowOverSubscription);
    }

    @Import(name="apiAvailable")
    private @Nullable Output<Boolean> apiAvailable;

    public Optional<Output<Boolean>> apiAvailable() {
        return Optional.ofNullable(this.apiAvailable);
    }

    @Import(name="bandwidthFromApi")
    private @Nullable Output<Boolean> bandwidthFromApi;

    public Optional<Output<Boolean>> bandwidthFromApi() {
        return Optional.ofNullable(this.bandwidthFromApi);
    }

    @Import(name="equinixManagedPort")
    private @Nullable Output<Boolean> equinixManagedPort;

    public Optional<Output<Boolean>> equinixManagedPort() {
        return Optional.ofNullable(this.equinixManagedPort);
    }

    @Import(name="equinixManagedVlan")
    private @Nullable Output<Boolean> equinixManagedVlan;

    public Optional<Output<Boolean>> equinixManagedVlan() {
        return Optional.ofNullable(this.equinixManagedVlan);
    }

    @Import(name="integrationId")
    private @Nullable Output<String> integrationId;

    public Optional<Output<String>> integrationId() {
        return Optional.ofNullable(this.integrationId);
    }

    @Import(name="overSubscriptionLimit")
    private @Nullable Output<Integer> overSubscriptionLimit;

    public Optional<Output<Integer>> overSubscriptionLimit() {
        return Optional.ofNullable(this.overSubscriptionLimit);
    }

    private ServiceProfileAccessPointTypeConfigApiConfigArgs() {}

    private ServiceProfileAccessPointTypeConfigApiConfigArgs(ServiceProfileAccessPointTypeConfigApiConfigArgs $) {
        this.allowOverSubscription = $.allowOverSubscription;
        this.apiAvailable = $.apiAvailable;
        this.bandwidthFromApi = $.bandwidthFromApi;
        this.equinixManagedPort = $.equinixManagedPort;
        this.equinixManagedVlan = $.equinixManagedVlan;
        this.integrationId = $.integrationId;
        this.overSubscriptionLimit = $.overSubscriptionLimit;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceProfileAccessPointTypeConfigApiConfigArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceProfileAccessPointTypeConfigApiConfigArgs $;

        public Builder() {
            $ = new ServiceProfileAccessPointTypeConfigApiConfigArgs();
        }

        public Builder(ServiceProfileAccessPointTypeConfigApiConfigArgs defaults) {
            $ = new ServiceProfileAccessPointTypeConfigApiConfigArgs(Objects.requireNonNull(defaults));
        }

        public Builder allowOverSubscription(@Nullable Output<Boolean> allowOverSubscription) {
            $.allowOverSubscription = allowOverSubscription;
            return this;
        }

        public Builder allowOverSubscription(Boolean allowOverSubscription) {
            return allowOverSubscription(Output.of(allowOverSubscription));
        }

        public Builder apiAvailable(@Nullable Output<Boolean> apiAvailable) {
            $.apiAvailable = apiAvailable;
            return this;
        }

        public Builder apiAvailable(Boolean apiAvailable) {
            return apiAvailable(Output.of(apiAvailable));
        }

        public Builder bandwidthFromApi(@Nullable Output<Boolean> bandwidthFromApi) {
            $.bandwidthFromApi = bandwidthFromApi;
            return this;
        }

        public Builder bandwidthFromApi(Boolean bandwidthFromApi) {
            return bandwidthFromApi(Output.of(bandwidthFromApi));
        }

        public Builder equinixManagedPort(@Nullable Output<Boolean> equinixManagedPort) {
            $.equinixManagedPort = equinixManagedPort;
            return this;
        }

        public Builder equinixManagedPort(Boolean equinixManagedPort) {
            return equinixManagedPort(Output.of(equinixManagedPort));
        }

        public Builder equinixManagedVlan(@Nullable Output<Boolean> equinixManagedVlan) {
            $.equinixManagedVlan = equinixManagedVlan;
            return this;
        }

        public Builder equinixManagedVlan(Boolean equinixManagedVlan) {
            return equinixManagedVlan(Output.of(equinixManagedVlan));
        }

        public Builder integrationId(@Nullable Output<String> integrationId) {
            $.integrationId = integrationId;
            return this;
        }

        public Builder integrationId(String integrationId) {
            return integrationId(Output.of(integrationId));
        }

        public Builder overSubscriptionLimit(@Nullable Output<Integer> overSubscriptionLimit) {
            $.overSubscriptionLimit = overSubscriptionLimit;
            return this;
        }

        public Builder overSubscriptionLimit(Integer overSubscriptionLimit) {
            return overSubscriptionLimit(Output.of(overSubscriptionLimit));
        }

        public ServiceProfileAccessPointTypeConfigApiConfigArgs build() {
            return $;
        }
    }

}
