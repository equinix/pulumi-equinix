// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinix.metal.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFacilityCapacity extends com.pulumi.resources.InvokeArgs {

    public static final GetFacilityCapacity Empty = new GetFacilityCapacity();

    /**
     * Device plan that must be available in selected location.
     * 
     */
    @Import(name="plan", required=true)
    private String plan;

    /**
     * @return Device plan that must be available in selected location.
     * 
     */
    public String plan() {
        return this.plan;
    }

    /**
     * Minimun number of devices that must be available in selected location.
     * Default is `1`.
     * 
     */
    @Import(name="quantity")
    private @Nullable Integer quantity;

    /**
     * @return Minimun number of devices that must be available in selected location.
     * Default is `1`.
     * 
     */
    public Optional<Integer> quantity() {
        return Optional.ofNullable(this.quantity);
    }

    private GetFacilityCapacity() {}

    private GetFacilityCapacity(GetFacilityCapacity $) {
        this.plan = $.plan;
        this.quantity = $.quantity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFacilityCapacity defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFacilityCapacity $;

        public Builder() {
            $ = new GetFacilityCapacity();
        }

        public Builder(GetFacilityCapacity defaults) {
            $ = new GetFacilityCapacity(Objects.requireNonNull(defaults));
        }

        /**
         * @param plan Device plan that must be available in selected location.
         * 
         * @return builder
         * 
         */
        public Builder plan(String plan) {
            $.plan = plan;
            return this;
        }

        /**
         * @param quantity Minimun number of devices that must be available in selected location.
         * Default is `1`.
         * 
         * @return builder
         * 
         */
        public Builder quantity(@Nullable Integer quantity) {
            $.quantity = quantity;
            return this;
        }

        public GetFacilityCapacity build() {
            $.plan = Objects.requireNonNull($.plan, "expected parameter 'plan' to be non-null");
            return $;
        }
    }

}
