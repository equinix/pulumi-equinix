// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinix.metal.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.equinix.metal.inputs.GetPlansFilter;
import com.pulumi.equinix.metal.inputs.GetPlansSort;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPlansPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPlansPlainArgs Empty = new GetPlansPlainArgs();

    /**
     * One or more attribute/values pairs to filter off of
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetPlansFilter> filters;

    /**
     * @return One or more attribute/values pairs to filter off of
     * 
     */
    public Optional<List<GetPlansFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * One or more attribute/direction pairs on which to sort results. If multiple
     * sorts are provided, they will be applied in order
     * 
     */
    @Import(name="sorts")
    private @Nullable List<GetPlansSort> sorts;

    /**
     * @return One or more attribute/direction pairs on which to sort results. If multiple
     * sorts are provided, they will be applied in order
     * 
     */
    public Optional<List<GetPlansSort>> sorts() {
        return Optional.ofNullable(this.sorts);
    }

    private GetPlansPlainArgs() {}

    private GetPlansPlainArgs(GetPlansPlainArgs $) {
        this.filters = $.filters;
        this.sorts = $.sorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPlansPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPlansPlainArgs $;

        public Builder() {
            $ = new GetPlansPlainArgs();
        }

        public Builder(GetPlansPlainArgs defaults) {
            $ = new GetPlansPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more attribute/values pairs to filter off of
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetPlansFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more attribute/values pairs to filter off of
         * 
         * @return builder
         * 
         */
        public Builder filters(GetPlansFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param sorts One or more attribute/direction pairs on which to sort results. If multiple
         * sorts are provided, they will be applied in order
         * 
         * @return builder
         * 
         */
        public Builder sorts(@Nullable List<GetPlansSort> sorts) {
            $.sorts = sorts;
            return this;
        }

        /**
         * @param sorts One or more attribute/direction pairs on which to sort results. If multiple
         * sorts are provided, they will be applied in order
         * 
         * @return builder
         * 
         */
        public Builder sorts(GetPlansSort... sorts) {
            return sorts(List.of(sorts));
        }

        public GetPlansPlainArgs build() {
            return $;
        }
    }

}
