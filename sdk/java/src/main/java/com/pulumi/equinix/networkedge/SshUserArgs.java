// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.equinix.networkedge;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class SshUserArgs extends com.pulumi.resources.ResourceArgs {

    public static final SshUserArgs Empty = new SshUserArgs();

    /**
     * list of device identifiers to which user will have access.
     * 
     */
    @Import(name="deviceIds", required=true)
    private Output<List<String>> deviceIds;

    /**
     * @return list of device identifiers to which user will have access.
     * 
     */
    public Output<List<String>> deviceIds() {
        return this.deviceIds;
    }

    /**
     * SSH user password.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return SSH user password.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * SSH user login name.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return SSH user login name.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private SshUserArgs() {}

    private SshUserArgs(SshUserArgs $) {
        this.deviceIds = $.deviceIds;
        this.password = $.password;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SshUserArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SshUserArgs $;

        public Builder() {
            $ = new SshUserArgs();
        }

        public Builder(SshUserArgs defaults) {
            $ = new SshUserArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceIds list of device identifiers to which user will have access.
         * 
         * @return builder
         * 
         */
        public Builder deviceIds(Output<List<String>> deviceIds) {
            $.deviceIds = deviceIds;
            return this;
        }

        /**
         * @param deviceIds list of device identifiers to which user will have access.
         * 
         * @return builder
         * 
         */
        public Builder deviceIds(List<String> deviceIds) {
            return deviceIds(Output.of(deviceIds));
        }

        /**
         * @param deviceIds list of device identifiers to which user will have access.
         * 
         * @return builder
         * 
         */
        public Builder deviceIds(String... deviceIds) {
            return deviceIds(List.of(deviceIds));
        }

        /**
         * @param password SSH user password.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password SSH user password.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param username SSH user login name.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username SSH user login name.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public SshUserArgs build() {
            $.deviceIds = Objects.requireNonNull($.deviceIds, "expected parameter 'deviceIds' to be non-null");
            $.password = Objects.requireNonNull($.password, "expected parameter 'password' to be non-null");
            $.username = Objects.requireNonNull($.username, "expected parameter 'username' to be non-null");
            return $;
        }
    }

}
