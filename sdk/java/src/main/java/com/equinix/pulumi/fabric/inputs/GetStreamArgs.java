// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStreamArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamArgs Empty = new GetStreamArgs();

    /**
     * The uuid of the stream this data source should retrieve
     * 
     */
    @Import(name="streamId", required=true)
    private Output<String> streamId;

    /**
     * @return The uuid of the stream this data source should retrieve
     * 
     */
    public Output<String> streamId() {
        return this.streamId;
    }

    private GetStreamArgs() {}

    private GetStreamArgs(GetStreamArgs $) {
        this.streamId = $.streamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamArgs $;

        public Builder() {
            $ = new GetStreamArgs();
        }

        public Builder(GetStreamArgs defaults) {
            $ = new GetStreamArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param streamId The uuid of the stream this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder streamId(Output<String> streamId) {
            $.streamId = streamId;
            return this;
        }

        /**
         * @param streamId The uuid of the stream this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder streamId(String streamId) {
            return streamId(Output.of(streamId));
        }

        public GetStreamArgs build() {
            if ($.streamId == null) {
                throw new MissingRequiredPropertyException("GetStreamArgs", "streamId");
            }
            return $;
        }
    }

}
