// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.metal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class DeviceNetworkTypeArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceNetworkTypeArgs Empty = new DeviceNetworkTypeArgs();

    /**
     * The ID of the device on which the network type should be set.
     * 
     */
    @Import(name="deviceId", required=true)
    private Output<String> deviceId;

    /**
     * @return The ID of the device on which the network type should be set.
     * 
     */
    public Output<String> deviceId() {
        return this.deviceId;
    }

    /**
     * Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual`
     * and `layer2-bonded`.
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual`
     * and `layer2-bonded`.
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private DeviceNetworkTypeArgs() {}

    private DeviceNetworkTypeArgs(DeviceNetworkTypeArgs $) {
        this.deviceId = $.deviceId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceNetworkTypeArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceNetworkTypeArgs $;

        public Builder() {
            $ = new DeviceNetworkTypeArgs();
        }

        public Builder(DeviceNetworkTypeArgs defaults) {
            $ = new DeviceNetworkTypeArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceId The ID of the device on which the network type should be set.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId The ID of the device on which the network type should be set.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        /**
         * @param type Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual`
         * and `layer2-bonded`.
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual`
         * and `layer2-bonded`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DeviceNetworkTypeArgs build() {
            $.deviceId = Objects.requireNonNull($.deviceId, "expected parameter 'deviceId' to be non-null");
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            return $;
        }
    }

}
