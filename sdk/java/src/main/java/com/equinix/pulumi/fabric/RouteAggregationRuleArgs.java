// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric;

import com.equinix.pulumi.fabric.inputs.RouteAggregationRuleTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteAggregationRuleArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteAggregationRuleArgs Empty = new RouteAggregationRuleArgs();

    /**
     * Customer-provided route aggregation rule description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Customer-provided route aggregation rule description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Customer provided name of the route aggregation rule
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Customer provided name of the route aggregation rule
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Customer-provided route aggregation rule prefix
     * 
     */
    @Import(name="prefix", required=true)
    private Output<String> prefix;

    /**
     * @return Customer-provided route aggregation rule prefix
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }

    /**
     * UUID of the Route Aggregation to apply this Rule to
     * 
     */
    @Import(name="routeAggregationId", required=true)
    private Output<String> routeAggregationId;

    /**
     * @return UUID of the Route Aggregation to apply this Rule to
     * 
     */
    public Output<String> routeAggregationId() {
        return this.routeAggregationId;
    }

    @Import(name="timeouts")
    private @Nullable Output<RouteAggregationRuleTimeoutsArgs> timeouts;

    public Optional<Output<RouteAggregationRuleTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    private RouteAggregationRuleArgs() {}

    private RouteAggregationRuleArgs(RouteAggregationRuleArgs $) {
        this.description = $.description;
        this.name = $.name;
        this.prefix = $.prefix;
        this.routeAggregationId = $.routeAggregationId;
        this.timeouts = $.timeouts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteAggregationRuleArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteAggregationRuleArgs $;

        public Builder() {
            $ = new RouteAggregationRuleArgs();
        }

        public Builder(RouteAggregationRuleArgs defaults) {
            $ = new RouteAggregationRuleArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Customer-provided route aggregation rule description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Customer-provided route aggregation rule description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param name Customer provided name of the route aggregation rule
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Customer provided name of the route aggregation rule
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param prefix Customer-provided route aggregation rule prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(Output<String> prefix) {
            $.prefix = prefix;
            return this;
        }

        /**
         * @param prefix Customer-provided route aggregation rule prefix
         * 
         * @return builder
         * 
         */
        public Builder prefix(String prefix) {
            return prefix(Output.of(prefix));
        }

        /**
         * @param routeAggregationId UUID of the Route Aggregation to apply this Rule to
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(Output<String> routeAggregationId) {
            $.routeAggregationId = routeAggregationId;
            return this;
        }

        /**
         * @param routeAggregationId UUID of the Route Aggregation to apply this Rule to
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(String routeAggregationId) {
            return routeAggregationId(Output.of(routeAggregationId));
        }

        public Builder timeouts(@Nullable Output<RouteAggregationRuleTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(RouteAggregationRuleTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        public RouteAggregationRuleArgs build() {
            if ($.prefix == null) {
                throw new MissingRequiredPropertyException("RouteAggregationRuleArgs", "prefix");
            }
            if ($.routeAggregationId == null) {
                throw new MissingRequiredPropertyException("RouteAggregationRuleArgs", "routeAggregationId");
            }
            return $;
        }
    }

}
