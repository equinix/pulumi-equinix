// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


public final class IpAttachmentArgs extends com.pulumi.resources.ResourceArgs {

    public static final IpAttachmentArgs Empty = new IpAttachmentArgs();

    /**
     * CIDR notation of subnet from block reserved in the same project
     * and facility as the device.
     * 
     */
    @Import(name="cidrNotation", required=true)
    private Output<String> cidrNotation;

    /**
     * @return CIDR notation of subnet from block reserved in the same project
     * and facility as the device.
     * 
     */
    public Output<String> cidrNotation() {
        return this.cidrNotation;
    }

    /**
     * ID of device to which to assign the subnet.
     * 
     */
    @Import(name="deviceId", required=true)
    private Output<String> deviceId;

    /**
     * @return ID of device to which to assign the subnet.
     * 
     */
    public Output<String> deviceId() {
        return this.deviceId;
    }

    private IpAttachmentArgs() {}

    private IpAttachmentArgs(IpAttachmentArgs $) {
        this.cidrNotation = $.cidrNotation;
        this.deviceId = $.deviceId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IpAttachmentArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IpAttachmentArgs $;

        public Builder() {
            $ = new IpAttachmentArgs();
        }

        public Builder(IpAttachmentArgs defaults) {
            $ = new IpAttachmentArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cidrNotation CIDR notation of subnet from block reserved in the same project
         * and facility as the device.
         * 
         * @return builder
         * 
         */
        public Builder cidrNotation(Output<String> cidrNotation) {
            $.cidrNotation = cidrNotation;
            return this;
        }

        /**
         * @param cidrNotation CIDR notation of subnet from block reserved in the same project
         * and facility as the device.
         * 
         * @return builder
         * 
         */
        public Builder cidrNotation(String cidrNotation) {
            return cidrNotation(Output.of(cidrNotation));
        }

        /**
         * @param deviceId ID of device to which to assign the subnet.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId ID of device to which to assign the subnet.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        public IpAttachmentArgs build() {
            $.cidrNotation = Objects.requireNonNull($.cidrNotation, "expected parameter 'cidrNotation' to be non-null");
            $.deviceId = Objects.requireNonNull($.deviceId, "expected parameter 'deviceId' to be non-null");
            return $;
        }
    }

}
