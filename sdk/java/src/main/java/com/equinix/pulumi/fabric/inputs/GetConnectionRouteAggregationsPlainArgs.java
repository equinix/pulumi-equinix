// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetConnectionRouteAggregationsPagination;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetConnectionRouteAggregationsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetConnectionRouteAggregationsPlainArgs Empty = new GetConnectionRouteAggregationsPlainArgs();

    /**
     * The uuid of the connection this data source should retrieve
     * 
     */
    @Import(name="connectionId", required=true)
    private String connectionId;

    /**
     * @return The uuid of the connection this data source should retrieve
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }

    /**
     * Pagination details for the returned connection route aggregations list
     * 
     */
    @Import(name="pagination")
    private @Nullable GetConnectionRouteAggregationsPagination pagination;

    /**
     * @return Pagination details for the returned connection route aggregations list
     * 
     */
    public Optional<GetConnectionRouteAggregationsPagination> pagination() {
        return Optional.ofNullable(this.pagination);
    }

    private GetConnectionRouteAggregationsPlainArgs() {}

    private GetConnectionRouteAggregationsPlainArgs(GetConnectionRouteAggregationsPlainArgs $) {
        this.connectionId = $.connectionId;
        this.pagination = $.pagination;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetConnectionRouteAggregationsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetConnectionRouteAggregationsPlainArgs $;

        public Builder() {
            $ = new GetConnectionRouteAggregationsPlainArgs();
        }

        public Builder(GetConnectionRouteAggregationsPlainArgs defaults) {
            $ = new GetConnectionRouteAggregationsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionId The uuid of the connection this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder connectionId(String connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        /**
         * @param pagination Pagination details for the returned connection route aggregations list
         * 
         * @return builder
         * 
         */
        public Builder pagination(@Nullable GetConnectionRouteAggregationsPagination pagination) {
            $.pagination = pagination;
            return this;
        }

        public GetConnectionRouteAggregationsPlainArgs build() {
            if ($.connectionId == null) {
                throw new MissingRequiredPropertyException("GetConnectionRouteAggregationsPlainArgs", "connectionId");
            }
            return $;
        }
    }

}
