// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamSubscriptionSinkCredential {
    /**
     * @return Passed as Authorization header value
     * 
     */
    private String accessToken;
    /**
     * @return Passed as Authorization header value
     * 
     */
    private String apiKey;
    /**
     * @return Passed as Authorization header value
     * 
     */
    private String integrationKey;
    /**
     * @return Passed as Authorization header value
     * 
     */
    private String password;
    /**
     * @return Type of the credential being passed
     * 
     */
    private String type;
    /**
     * @return Passed as Authorization header value
     * 
     */
    private String username;

    private GetStreamSubscriptionSinkCredential() {}
    /**
     * @return Passed as Authorization header value
     * 
     */
    public String accessToken() {
        return this.accessToken;
    }
    /**
     * @return Passed as Authorization header value
     * 
     */
    public String apiKey() {
        return this.apiKey;
    }
    /**
     * @return Passed as Authorization header value
     * 
     */
    public String integrationKey() {
        return this.integrationKey;
    }
    /**
     * @return Passed as Authorization header value
     * 
     */
    public String password() {
        return this.password;
    }
    /**
     * @return Type of the credential being passed
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Passed as Authorization header value
     * 
     */
    public String username() {
        return this.username;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamSubscriptionSinkCredential defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String accessToken;
        private String apiKey;
        private String integrationKey;
        private String password;
        private String type;
        private String username;
        public Builder() {}
        public Builder(GetStreamSubscriptionSinkCredential defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessToken = defaults.accessToken;
    	      this.apiKey = defaults.apiKey;
    	      this.integrationKey = defaults.integrationKey;
    	      this.password = defaults.password;
    	      this.type = defaults.type;
    	      this.username = defaults.username;
        }

        @CustomType.Setter
        public Builder accessToken(String accessToken) {
            if (accessToken == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "accessToken");
            }
            this.accessToken = accessToken;
            return this;
        }
        @CustomType.Setter
        public Builder apiKey(String apiKey) {
            if (apiKey == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "apiKey");
            }
            this.apiKey = apiKey;
            return this;
        }
        @CustomType.Setter
        public Builder integrationKey(String integrationKey) {
            if (integrationKey == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "integrationKey");
            }
            this.integrationKey = integrationKey;
            return this;
        }
        @CustomType.Setter
        public Builder password(String password) {
            if (password == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "password");
            }
            this.password = password;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder username(String username) {
            if (username == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkCredential", "username");
            }
            this.username = username;
            return this;
        }
        public GetStreamSubscriptionSinkCredential build() {
            final var _resultValue = new GetStreamSubscriptionSinkCredential();
            _resultValue.accessToken = accessToken;
            _resultValue.apiKey = apiKey;
            _resultValue.integrationKey = integrationKey;
            _resultValue.password = password;
            _resultValue.type = type;
            _resultValue.username = username;
            return _resultValue;
        }
    }
}
