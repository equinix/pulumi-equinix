// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetServiceProfilesFilterArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetServiceProfilesFilterArgs Empty = new GetServiceProfilesFilterArgs();

    /**
     * Possible operator to use on filters = - equal
     * 
     */
    @Import(name="operator")
    private @Nullable Output<String> operator;

    /**
     * @return Possible operator to use on filters = - equal
     * 
     */
    public Optional<Output<String>> operator() {
        return Optional.ofNullable(this.operator);
    }

    /**
     * Search Criteria for Service Profile - /name, /uuid, /state, /metros/code, /visibility, /type
     * 
     */
    @Import(name="property")
    private @Nullable Output<String> property;

    /**
     * @return Search Criteria for Service Profile - /name, /uuid, /state, /metros/code, /visibility, /type
     * 
     */
    public Optional<Output<String>> property() {
        return Optional.ofNullable(this.property);
    }

    /**
     * Values
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<String>> values;

    /**
     * @return Values
     * 
     */
    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private GetServiceProfilesFilterArgs() {}

    private GetServiceProfilesFilterArgs(GetServiceProfilesFilterArgs $) {
        this.operator = $.operator;
        this.property = $.property;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetServiceProfilesFilterArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetServiceProfilesFilterArgs $;

        public Builder() {
            $ = new GetServiceProfilesFilterArgs();
        }

        public Builder(GetServiceProfilesFilterArgs defaults) {
            $ = new GetServiceProfilesFilterArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator Possible operator to use on filters = - equal
         * 
         * @return builder
         * 
         */
        public Builder operator(@Nullable Output<String> operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param operator Possible operator to use on filters = - equal
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            return operator(Output.of(operator));
        }

        /**
         * @param property Search Criteria for Service Profile - /name, /uuid, /state, /metros/code, /visibility, /type
         * 
         * @return builder
         * 
         */
        public Builder property(@Nullable Output<String> property) {
            $.property = property;
            return this;
        }

        /**
         * @param property Search Criteria for Service Profile - /name, /uuid, /state, /metros/code, /visibility, /type
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            return property(Output.of(property));
        }

        /**
         * @param values Values
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values Values
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values Values
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetServiceProfilesFilterArgs build() {
            return $;
        }
    }

}
