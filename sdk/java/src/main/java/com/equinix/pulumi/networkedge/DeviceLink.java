// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge;

import com.equinix.pulumi.Utilities;
import com.equinix.pulumi.networkedge.DeviceLinkArgs;
import com.equinix.pulumi.networkedge.inputs.DeviceLinkState;
import com.equinix.pulumi.networkedge.outputs.DeviceLinkDevice;
import com.equinix.pulumi.networkedge.outputs.DeviceLinkLink;
import com.equinix.pulumi.networkedge.outputs.DeviceLinkMetroLink;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Resource `equinix.networkedge.DeviceLink` allows creation and management of Equinix Network Edge virtual network device links.
 * 
 * ## Example Usage
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.equinix.networkedge.DeviceLink;
 * import com.pulumi.equinix.networkedge.DeviceLinkArgs;
 * import com.pulumi.equinix.networkedge.inputs.DeviceLinkDeviceArgs;
 * import com.pulumi.equinix.networkedge.inputs.DeviceLinkLinkArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var test = new DeviceLink("test", DeviceLinkArgs.builder()
 *             .name("test-link")
 *             .subnet("192.168.40.64/27")
 *             .projectId("a86d7112-d740-4758-9c9c-31e66373746b")
 *             .devices(            
 *                 DeviceLinkDeviceArgs.builder()
 *                     .id(testEquinixNetworkDevice.uuid())
 *                     .asn(22111)
 *                     .interfaceId(6)
 *                     .build(),
 *                 DeviceLinkDeviceArgs.builder()
 *                     .id(testEquinixNetworkDevice.secondaryDevice()[0].uuid())
 *                     .asn(22333)
 *                     .interfaceId(7)
 *                     .build())
 *             .links(DeviceLinkLinkArgs.builder()
 *                 .accountNumber(testEquinixNetworkDevice.accountNumber())
 *                 .srcMetroCode(testEquinixNetworkDevice.metroCode())
 *                 .dstMetroCode(testEquinixNetworkDevice.secondaryDevice()[0].metroCode())
 *                 .throughput("50")
 *                 .throughputUnit("Mbps")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * This resource can be imported using an existing ID:
 * 
 * ```sh
 * $ pulumi import equinix:networkedge/deviceLink:DeviceLink example {existing_id}
 * ```
 * 
 */
@ResourceType(type="equinix:networkedge/deviceLink:DeviceLink")
public class DeviceLink extends com.pulumi.resources.CustomResource {
    /**
     * definition of one or more devices belonging to the device link. See Device section below for more details.
     * 
     */
    @Export(name="devices", refs={List.class,DeviceLinkDevice.class}, tree="[0,1]")
    private Output<List<DeviceLinkDevice>> devices;

    /**
     * @return definition of one or more devices belonging to the device link. See Device section below for more details.
     * 
     */
    public Output<List<DeviceLinkDevice>> devices() {
        return this.devices;
    }
    /**
     * definition of one or more, inter metro, connections belonging to the device link. See Link section below for more details.
     * 
     * @deprecated
     * Links is deprecated. Please use metro links instead.
     * 
     */
    @Deprecated /* Links is deprecated. Please use metro links instead. */
    @Export(name="links", refs={List.class,DeviceLinkLink.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DeviceLinkLink>> links;

    /**
     * @return definition of one or more, inter metro, connections belonging to the device link. See Link section below for more details.
     * 
     */
    public Output<Optional<List<DeviceLinkLink>>> links() {
        return Codegen.optional(this.links);
    }
    /**
     * definition of one or more, inter metro, connections belonging to the device link. See Metro Link section below for more details.
     * 
     */
    @Export(name="metroLinks", refs={List.class,DeviceLinkMetroLink.class}, tree="[0,1]")
    private Output</* @Nullable */ List<DeviceLinkMetroLink>> metroLinks;

    /**
     * @return definition of one or more, inter metro, connections belonging to the device link. See Metro Link section below for more details.
     * 
     */
    public Output<Optional<List<DeviceLinkMetroLink>>> metroLinks() {
        return Codegen.optional(this.metroLinks);
    }
    /**
     * device link name.
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return device link name.
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Unique Identifier for the project resource where the device link is scoped to.If you leave it out, the device link will be created under the default project id of your organization.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Unique Identifier for the project resource where the device link is scoped to.If you leave it out, the device link will be created under the default project id of your organization.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Whether the connection should be created through Fabric&#39;s primary or secondary port. Supported values: `PRIMARY` (Default), `SECONDARY`, `HYBRID`
     * 
     */
    @Export(name="redundancyType", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> redundancyType;

    /**
     * @return Whether the connection should be created through Fabric&#39;s primary or secondary port. Supported values: `PRIMARY` (Default), `SECONDARY`, `HYBRID`
     * 
     */
    public Output<Optional<String>> redundancyType() {
        return Codegen.optional(this.redundancyType);
    }
    /**
     * device link provisioning status on a given device. One of `PROVISIONING`, `PROVISIONED`, `DEPROVISIONING`, `DEPROVISIONED`, `FAILED`.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return device link provisioning status on a given device. One of `PROVISIONING`, `PROVISIONED`, `DEPROVISIONING`, `DEPROVISIONED`, `FAILED`.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * device link subnet in CIDR format. Not required for link between self configured devices.
     * 
     */
    @Export(name="subnet", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> subnet;

    /**
     * @return device link subnet in CIDR format. Not required for link between self configured devices.
     * 
     */
    public Output<Optional<String>> subnet() {
        return Codegen.optional(this.subnet);
    }
    /**
     * Device link unique identifier.
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return Device link unique identifier.
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public DeviceLink(java.lang.String name) {
        this(name, DeviceLinkArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public DeviceLink(java.lang.String name, DeviceLinkArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public DeviceLink(java.lang.String name, DeviceLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:networkedge/deviceLink:DeviceLink", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private DeviceLink(java.lang.String name, Output<java.lang.String> id, @Nullable DeviceLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:networkedge/deviceLink:DeviceLink", name, state, makeResourceOptions(options, id), false);
    }

    private static DeviceLinkArgs makeArgs(DeviceLinkArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? DeviceLinkArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static DeviceLink get(java.lang.String name, Output<java.lang.String> id, @Nullable DeviceLinkState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new DeviceLink(name, id, state, options);
    }
}
