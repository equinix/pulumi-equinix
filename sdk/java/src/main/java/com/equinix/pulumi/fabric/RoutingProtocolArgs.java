// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric;

import com.equinix.pulumi.fabric.inputs.RoutingProtocolBfdArgs;
import com.equinix.pulumi.fabric.inputs.RoutingProtocolBgpIpv4Args;
import com.equinix.pulumi.fabric.inputs.RoutingProtocolBgpIpv6Args;
import com.equinix.pulumi.fabric.inputs.RoutingProtocolDirectIpv4Args;
import com.equinix.pulumi.fabric.inputs.RoutingProtocolDirectIpv6Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RoutingProtocolArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoutingProtocolArgs Empty = new RoutingProtocolArgs();

    /**
     * Bidirectional Forwarding Detection
     * 
     */
    @Import(name="bfd")
    private @Nullable Output<RoutingProtocolBfdArgs> bfd;

    /**
     * @return Bidirectional Forwarding Detection
     * 
     */
    public Optional<Output<RoutingProtocolBfdArgs>> bfd() {
        return Optional.ofNullable(this.bfd);
    }

    /**
     * BGP authorization key
     * 
     */
    @Import(name="bgpAuthKey")
    private @Nullable Output<String> bgpAuthKey;

    /**
     * @return BGP authorization key
     * 
     */
    public Optional<Output<String>> bgpAuthKey() {
        return Optional.ofNullable(this.bgpAuthKey);
    }

    /**
     * Routing Protocol BGP IPv4
     * 
     */
    @Import(name="bgpIpv4")
    private @Nullable Output<RoutingProtocolBgpIpv4Args> bgpIpv4;

    /**
     * @return Routing Protocol BGP IPv4
     * 
     */
    public Optional<Output<RoutingProtocolBgpIpv4Args>> bgpIpv4() {
        return Optional.ofNullable(this.bgpIpv4);
    }

    /**
     * Routing Protocol BGP IPv6
     * 
     */
    @Import(name="bgpIpv6")
    private @Nullable Output<RoutingProtocolBgpIpv6Args> bgpIpv6;

    /**
     * @return Routing Protocol BGP IPv6
     * 
     */
    public Optional<Output<RoutingProtocolBgpIpv6Args>> bgpIpv6() {
        return Optional.ofNullable(this.bgpIpv6);
    }

    /**
     * Connection URI associated with Routing Protocol
     * 
     */
    @Import(name="connectionUuid", required=true)
    private Output<String> connectionUuid;

    /**
     * @return Connection URI associated with Routing Protocol
     * 
     */
    public Output<String> connectionUuid() {
        return this.connectionUuid;
    }

    /**
     * Customer-provided ASN
     * 
     */
    @Import(name="customerAsn")
    private @Nullable Output<Integer> customerAsn;

    /**
     * @return Customer-provided ASN
     * 
     */
    public Optional<Output<Integer>> customerAsn() {
        return Optional.ofNullable(this.customerAsn);
    }

    /**
     * Customer-provided Fabric Routing Protocol description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Customer-provided Fabric Routing Protocol description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Routing Protocol Direct IPv4
     * 
     */
    @Import(name="directIpv4")
    private @Nullable Output<RoutingProtocolDirectIpv4Args> directIpv4;

    /**
     * @return Routing Protocol Direct IPv4
     * 
     */
    public Optional<Output<RoutingProtocolDirectIpv4Args>> directIpv4() {
        return Optional.ofNullable(this.directIpv4);
    }

    /**
     * Routing Protocol Direct IPv6
     * 
     */
    @Import(name="directIpv6")
    private @Nullable Output<RoutingProtocolDirectIpv6Args> directIpv6;

    /**
     * @return Routing Protocol Direct IPv6
     * 
     */
    public Optional<Output<RoutingProtocolDirectIpv6Args>> directIpv6() {
        return Optional.ofNullable(this.directIpv6);
    }

    /**
     * Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Defines the routing protocol type like BGP or DIRECT
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Defines the routing protocol type like BGP or DIRECT
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Equinix-assigned routing protocol identifier
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return Equinix-assigned routing protocol identifier
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private RoutingProtocolArgs() {}

    private RoutingProtocolArgs(RoutingProtocolArgs $) {
        this.bfd = $.bfd;
        this.bgpAuthKey = $.bgpAuthKey;
        this.bgpIpv4 = $.bgpIpv4;
        this.bgpIpv6 = $.bgpIpv6;
        this.connectionUuid = $.connectionUuid;
        this.customerAsn = $.customerAsn;
        this.description = $.description;
        this.directIpv4 = $.directIpv4;
        this.directIpv6 = $.directIpv6;
        this.name = $.name;
        this.type = $.type;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoutingProtocolArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoutingProtocolArgs $;

        public Builder() {
            $ = new RoutingProtocolArgs();
        }

        public Builder(RoutingProtocolArgs defaults) {
            $ = new RoutingProtocolArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bfd Bidirectional Forwarding Detection
         * 
         * @return builder
         * 
         */
        public Builder bfd(@Nullable Output<RoutingProtocolBfdArgs> bfd) {
            $.bfd = bfd;
            return this;
        }

        /**
         * @param bfd Bidirectional Forwarding Detection
         * 
         * @return builder
         * 
         */
        public Builder bfd(RoutingProtocolBfdArgs bfd) {
            return bfd(Output.of(bfd));
        }

        /**
         * @param bgpAuthKey BGP authorization key
         * 
         * @return builder
         * 
         */
        public Builder bgpAuthKey(@Nullable Output<String> bgpAuthKey) {
            $.bgpAuthKey = bgpAuthKey;
            return this;
        }

        /**
         * @param bgpAuthKey BGP authorization key
         * 
         * @return builder
         * 
         */
        public Builder bgpAuthKey(String bgpAuthKey) {
            return bgpAuthKey(Output.of(bgpAuthKey));
        }

        /**
         * @param bgpIpv4 Routing Protocol BGP IPv4
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv4(@Nullable Output<RoutingProtocolBgpIpv4Args> bgpIpv4) {
            $.bgpIpv4 = bgpIpv4;
            return this;
        }

        /**
         * @param bgpIpv4 Routing Protocol BGP IPv4
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv4(RoutingProtocolBgpIpv4Args bgpIpv4) {
            return bgpIpv4(Output.of(bgpIpv4));
        }

        /**
         * @param bgpIpv6 Routing Protocol BGP IPv6
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv6(@Nullable Output<RoutingProtocolBgpIpv6Args> bgpIpv6) {
            $.bgpIpv6 = bgpIpv6;
            return this;
        }

        /**
         * @param bgpIpv6 Routing Protocol BGP IPv6
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv6(RoutingProtocolBgpIpv6Args bgpIpv6) {
            return bgpIpv6(Output.of(bgpIpv6));
        }

        /**
         * @param connectionUuid Connection URI associated with Routing Protocol
         * 
         * @return builder
         * 
         */
        public Builder connectionUuid(Output<String> connectionUuid) {
            $.connectionUuid = connectionUuid;
            return this;
        }

        /**
         * @param connectionUuid Connection URI associated with Routing Protocol
         * 
         * @return builder
         * 
         */
        public Builder connectionUuid(String connectionUuid) {
            return connectionUuid(Output.of(connectionUuid));
        }

        /**
         * @param customerAsn Customer-provided ASN
         * 
         * @return builder
         * 
         */
        public Builder customerAsn(@Nullable Output<Integer> customerAsn) {
            $.customerAsn = customerAsn;
            return this;
        }

        /**
         * @param customerAsn Customer-provided ASN
         * 
         * @return builder
         * 
         */
        public Builder customerAsn(Integer customerAsn) {
            return customerAsn(Output.of(customerAsn));
        }

        /**
         * @param description Customer-provided Fabric Routing Protocol description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Customer-provided Fabric Routing Protocol description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param directIpv4 Routing Protocol Direct IPv4
         * 
         * @return builder
         * 
         */
        public Builder directIpv4(@Nullable Output<RoutingProtocolDirectIpv4Args> directIpv4) {
            $.directIpv4 = directIpv4;
            return this;
        }

        /**
         * @param directIpv4 Routing Protocol Direct IPv4
         * 
         * @return builder
         * 
         */
        public Builder directIpv4(RoutingProtocolDirectIpv4Args directIpv4) {
            return directIpv4(Output.of(directIpv4));
        }

        /**
         * @param directIpv6 Routing Protocol Direct IPv6
         * 
         * @return builder
         * 
         */
        public Builder directIpv6(@Nullable Output<RoutingProtocolDirectIpv6Args> directIpv6) {
            $.directIpv6 = directIpv6;
            return this;
        }

        /**
         * @param directIpv6 Routing Protocol Direct IPv6
         * 
         * @return builder
         * 
         */
        public Builder directIpv6(RoutingProtocolDirectIpv6Args directIpv6) {
            return directIpv6(Output.of(directIpv6));
        }

        /**
         * @param name Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param type Defines the routing protocol type like BGP or DIRECT
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Defines the routing protocol type like BGP or DIRECT
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uuid Equinix-assigned routing protocol identifier
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid Equinix-assigned routing protocol identifier
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public RoutingProtocolArgs build() {
            if ($.connectionUuid == null) {
                throw new MissingRequiredPropertyException("RoutingProtocolArgs", "connectionUuid");
            }
            return $;
        }
    }

}
