// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetPrecisionTimeServicesDataPtpAdvancedConfiguration {
    /**
     * @return The PTP domain value
     * 
     */
    private @Nullable Integer domain;
    /**
     * @return Unicast Grant Time in seconds. For Multicast and Hybrid transport modes, grant time defaults to 300 seconds. For Unicast mode, grant time can be between 30 to 7200
     * 
     */
    private @Nullable Integer grantTime;
    /**
     * @return Logarithmic value that controls the rate of PTP Announce packets from the PTP time server. Default is 1 (1 packet every 2 seconds), Unit packets/second
     * 
     */
    private @Nullable Integer logAnnounceInterval;
    /**
     * @return Logarithmic value that controls the rate of PTP DelayReq packets. Default is -4 (16 packets per second), Unit packets/second..
     * 
     */
    private @Nullable Integer logDelayReqInterval;
    /**
     * @return Logarithmic value that controls the rate of PTP Sync packets. Default is -4 (16 packets per second), Unit packets/second..
     * 
     */
    private @Nullable Integer logSyncInterval;
    /**
     * @return The priority1 value determines the best primary clock, Lower value indicates higher priority
     * 
     */
    private @Nullable Integer priority1;
    /**
     * @return The priority2 value differentiates and prioritizes the primary clock to avoid confusion when priority1-value is the same for different primary clocks in a network
     * 
     */
    private @Nullable Integer priority2;
    /**
     * @return Time Scale value, ARB denotes Arbitrary and PTP denotes Precision Time Protocol
     * 
     */
    private @Nullable String timeScale;
    /**
     * @return ptp transport mode
     * 
     */
    private @Nullable String transportMode;

    private GetPrecisionTimeServicesDataPtpAdvancedConfiguration() {}
    /**
     * @return The PTP domain value
     * 
     */
    public Optional<Integer> domain() {
        return Optional.ofNullable(this.domain);
    }
    /**
     * @return Unicast Grant Time in seconds. For Multicast and Hybrid transport modes, grant time defaults to 300 seconds. For Unicast mode, grant time can be between 30 to 7200
     * 
     */
    public Optional<Integer> grantTime() {
        return Optional.ofNullable(this.grantTime);
    }
    /**
     * @return Logarithmic value that controls the rate of PTP Announce packets from the PTP time server. Default is 1 (1 packet every 2 seconds), Unit packets/second
     * 
     */
    public Optional<Integer> logAnnounceInterval() {
        return Optional.ofNullable(this.logAnnounceInterval);
    }
    /**
     * @return Logarithmic value that controls the rate of PTP DelayReq packets. Default is -4 (16 packets per second), Unit packets/second..
     * 
     */
    public Optional<Integer> logDelayReqInterval() {
        return Optional.ofNullable(this.logDelayReqInterval);
    }
    /**
     * @return Logarithmic value that controls the rate of PTP Sync packets. Default is -4 (16 packets per second), Unit packets/second..
     * 
     */
    public Optional<Integer> logSyncInterval() {
        return Optional.ofNullable(this.logSyncInterval);
    }
    /**
     * @return The priority1 value determines the best primary clock, Lower value indicates higher priority
     * 
     */
    public Optional<Integer> priority1() {
        return Optional.ofNullable(this.priority1);
    }
    /**
     * @return The priority2 value differentiates and prioritizes the primary clock to avoid confusion when priority1-value is the same for different primary clocks in a network
     * 
     */
    public Optional<Integer> priority2() {
        return Optional.ofNullable(this.priority2);
    }
    /**
     * @return Time Scale value, ARB denotes Arbitrary and PTP denotes Precision Time Protocol
     * 
     */
    public Optional<String> timeScale() {
        return Optional.ofNullable(this.timeScale);
    }
    /**
     * @return ptp transport mode
     * 
     */
    public Optional<String> transportMode() {
        return Optional.ofNullable(this.transportMode);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrecisionTimeServicesDataPtpAdvancedConfiguration defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer domain;
        private @Nullable Integer grantTime;
        private @Nullable Integer logAnnounceInterval;
        private @Nullable Integer logDelayReqInterval;
        private @Nullable Integer logSyncInterval;
        private @Nullable Integer priority1;
        private @Nullable Integer priority2;
        private @Nullable String timeScale;
        private @Nullable String transportMode;
        public Builder() {}
        public Builder(GetPrecisionTimeServicesDataPtpAdvancedConfiguration defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.domain = defaults.domain;
    	      this.grantTime = defaults.grantTime;
    	      this.logAnnounceInterval = defaults.logAnnounceInterval;
    	      this.logDelayReqInterval = defaults.logDelayReqInterval;
    	      this.logSyncInterval = defaults.logSyncInterval;
    	      this.priority1 = defaults.priority1;
    	      this.priority2 = defaults.priority2;
    	      this.timeScale = defaults.timeScale;
    	      this.transportMode = defaults.transportMode;
        }

        @CustomType.Setter
        public Builder domain(@Nullable Integer domain) {

            this.domain = domain;
            return this;
        }
        @CustomType.Setter
        public Builder grantTime(@Nullable Integer grantTime) {

            this.grantTime = grantTime;
            return this;
        }
        @CustomType.Setter
        public Builder logAnnounceInterval(@Nullable Integer logAnnounceInterval) {

            this.logAnnounceInterval = logAnnounceInterval;
            return this;
        }
        @CustomType.Setter
        public Builder logDelayReqInterval(@Nullable Integer logDelayReqInterval) {

            this.logDelayReqInterval = logDelayReqInterval;
            return this;
        }
        @CustomType.Setter
        public Builder logSyncInterval(@Nullable Integer logSyncInterval) {

            this.logSyncInterval = logSyncInterval;
            return this;
        }
        @CustomType.Setter
        public Builder priority1(@Nullable Integer priority1) {

            this.priority1 = priority1;
            return this;
        }
        @CustomType.Setter
        public Builder priority2(@Nullable Integer priority2) {

            this.priority2 = priority2;
            return this;
        }
        @CustomType.Setter
        public Builder timeScale(@Nullable String timeScale) {

            this.timeScale = timeScale;
            return this;
        }
        @CustomType.Setter
        public Builder transportMode(@Nullable String transportMode) {

            this.transportMode = transportMode;
            return this;
        }
        public GetPrecisionTimeServicesDataPtpAdvancedConfiguration build() {
            final var _resultValue = new GetPrecisionTimeServicesDataPtpAdvancedConfiguration();
            _resultValue.domain = domain;
            _resultValue.grantTime = grantTime;
            _resultValue.logAnnounceInterval = logAnnounceInterval;
            _resultValue.logDelayReqInterval = logDelayReqInterval;
            _resultValue.logSyncInterval = logSyncInterval;
            _resultValue.priority1 = priority1;
            _resultValue.priority2 = priority2;
            _resultValue.timeScale = timeScale;
            _resultValue.transportMode = transportMode;
            return _resultValue;
        }
    }
}
