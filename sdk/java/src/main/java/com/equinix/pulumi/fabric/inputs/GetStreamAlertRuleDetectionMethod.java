// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStreamAlertRuleDetectionMethod extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamAlertRuleDetectionMethod Empty = new GetStreamAlertRuleDetectionMethod();

    /**
     * Stream alert rule metric critical threshold
     * 
     */
    @Import(name="criticalThreshold", required=true)
    private String criticalThreshold;

    /**
     * @return Stream alert rule metric critical threshold
     * 
     */
    public String criticalThreshold() {
        return this.criticalThreshold;
    }

    /**
     * Stream alert rule metric operand
     * 
     */
    @Import(name="operand", required=true)
    private String operand;

    /**
     * @return Stream alert rule metric operand
     * 
     */
    public String operand() {
        return this.operand;
    }

    /**
     * Stream Alert Rule detection method type
     * 
     */
    @Import(name="type", required=true)
    private String type;

    /**
     * @return Stream Alert Rule detection method type
     * 
     */
    public String type() {
        return this.type;
    }

    /**
     * Stream alert rule metric warning threshold
     * 
     */
    @Import(name="warningThreshold", required=true)
    private String warningThreshold;

    /**
     * @return Stream alert rule metric warning threshold
     * 
     */
    public String warningThreshold() {
        return this.warningThreshold;
    }

    /**
     * Stream alert rule metric window size
     * 
     */
    @Import(name="windowSize", required=true)
    private String windowSize;

    /**
     * @return Stream alert rule metric window size
     * 
     */
    public String windowSize() {
        return this.windowSize;
    }

    private GetStreamAlertRuleDetectionMethod() {}

    private GetStreamAlertRuleDetectionMethod(GetStreamAlertRuleDetectionMethod $) {
        this.criticalThreshold = $.criticalThreshold;
        this.operand = $.operand;
        this.type = $.type;
        this.warningThreshold = $.warningThreshold;
        this.windowSize = $.windowSize;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamAlertRuleDetectionMethod defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamAlertRuleDetectionMethod $;

        public Builder() {
            $ = new GetStreamAlertRuleDetectionMethod();
        }

        public Builder(GetStreamAlertRuleDetectionMethod defaults) {
            $ = new GetStreamAlertRuleDetectionMethod(Objects.requireNonNull(defaults));
        }

        /**
         * @param criticalThreshold Stream alert rule metric critical threshold
         * 
         * @return builder
         * 
         */
        public Builder criticalThreshold(String criticalThreshold) {
            $.criticalThreshold = criticalThreshold;
            return this;
        }

        /**
         * @param operand Stream alert rule metric operand
         * 
         * @return builder
         * 
         */
        public Builder operand(String operand) {
            $.operand = operand;
            return this;
        }

        /**
         * @param type Stream Alert Rule detection method type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            $.type = type;
            return this;
        }

        /**
         * @param warningThreshold Stream alert rule metric warning threshold
         * 
         * @return builder
         * 
         */
        public Builder warningThreshold(String warningThreshold) {
            $.warningThreshold = warningThreshold;
            return this;
        }

        /**
         * @param windowSize Stream alert rule metric window size
         * 
         * @return builder
         * 
         */
        public Builder windowSize(String windowSize) {
            $.windowSize = windowSize;
            return this;
        }

        public GetStreamAlertRuleDetectionMethod build() {
            if ($.criticalThreshold == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRuleDetectionMethod", "criticalThreshold");
            }
            if ($.operand == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRuleDetectionMethod", "operand");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRuleDetectionMethod", "type");
            }
            if ($.warningThreshold == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRuleDetectionMethod", "warningThreshold");
            }
            if ($.windowSize == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRuleDetectionMethod", "windowSize");
            }
            return $;
        }
    }

}
