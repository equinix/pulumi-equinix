// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.fabric.inputs;

import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileVirtualDeviceLocationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceProfileVirtualDeviceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceProfileVirtualDeviceArgs Empty = new ServiceProfileVirtualDeviceArgs();

    /**
     * Device Interface Uuid
     * 
     */
    @Import(name="interfaceUuid")
    private @Nullable Output<String> interfaceUuid;

    /**
     * @return Device Interface Uuid
     * 
     */
    public Optional<Output<String>> interfaceUuid() {
        return Optional.ofNullable(this.interfaceUuid);
    }

    /**
     * Device Location
     * 
     */
    @Import(name="locations")
    private @Nullable Output<List<ServiceProfileVirtualDeviceLocationArgs>> locations;

    /**
     * @return Device Location
     * 
     */
    public Optional<Output<List<ServiceProfileVirtualDeviceLocationArgs>>> locations() {
        return Optional.ofNullable(this.locations);
    }

    /**
     * Virtual Device Type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Virtual Device Type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    /**
     * Virtual Device Uuid
     * 
     */
    @Import(name="uuid", required=true)
    private Output<String> uuid;

    /**
     * @return Virtual Device Uuid
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    private ServiceProfileVirtualDeviceArgs() {}

    private ServiceProfileVirtualDeviceArgs(ServiceProfileVirtualDeviceArgs $) {
        this.interfaceUuid = $.interfaceUuid;
        this.locations = $.locations;
        this.type = $.type;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceProfileVirtualDeviceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceProfileVirtualDeviceArgs $;

        public Builder() {
            $ = new ServiceProfileVirtualDeviceArgs();
        }

        public Builder(ServiceProfileVirtualDeviceArgs defaults) {
            $ = new ServiceProfileVirtualDeviceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param interfaceUuid Device Interface Uuid
         * 
         * @return builder
         * 
         */
        public Builder interfaceUuid(@Nullable Output<String> interfaceUuid) {
            $.interfaceUuid = interfaceUuid;
            return this;
        }

        /**
         * @param interfaceUuid Device Interface Uuid
         * 
         * @return builder
         * 
         */
        public Builder interfaceUuid(String interfaceUuid) {
            return interfaceUuid(Output.of(interfaceUuid));
        }

        /**
         * @param locations Device Location
         * 
         * @return builder
         * 
         */
        public Builder locations(@Nullable Output<List<ServiceProfileVirtualDeviceLocationArgs>> locations) {
            $.locations = locations;
            return this;
        }

        /**
         * @param locations Device Location
         * 
         * @return builder
         * 
         */
        public Builder locations(List<ServiceProfileVirtualDeviceLocationArgs> locations) {
            return locations(Output.of(locations));
        }

        /**
         * @param locations Device Location
         * 
         * @return builder
         * 
         */
        public Builder locations(ServiceProfileVirtualDeviceLocationArgs... locations) {
            return locations(List.of(locations));
        }

        /**
         * @param type Virtual Device Type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Virtual Device Type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        /**
         * @param uuid Virtual Device Uuid
         * 
         * @return builder
         * 
         */
        public Builder uuid(Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid Virtual Device Uuid
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        public ServiceProfileVirtualDeviceArgs build() {
            $.type = Objects.requireNonNull($.type, "expected parameter 'type' to be non-null");
            $.uuid = Objects.requireNonNull($.uuid, "expected parameter 'uuid' to be non-null");
            return $;
        }
    }

}
