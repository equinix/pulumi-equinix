// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamAlertRulesDataDetectionMethod {
    /**
     * @return Stream alert rule metric critical threshold
     * 
     */
    private String criticalThreshold;
    /**
     * @return Stream alert rule metric operand
     * 
     */
    private String operand;
    /**
     * @return Stream Alert Rule detection method type
     * 
     */
    private String type;
    /**
     * @return Stream alert rule metric warning threshold
     * 
     */
    private String warningThreshold;
    /**
     * @return Stream alert rule metric window size
     * 
     */
    private String windowSize;

    private GetStreamAlertRulesDataDetectionMethod() {}
    /**
     * @return Stream alert rule metric critical threshold
     * 
     */
    public String criticalThreshold() {
        return this.criticalThreshold;
    }
    /**
     * @return Stream alert rule metric operand
     * 
     */
    public String operand() {
        return this.operand;
    }
    /**
     * @return Stream Alert Rule detection method type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Stream alert rule metric warning threshold
     * 
     */
    public String warningThreshold() {
        return this.warningThreshold;
    }
    /**
     * @return Stream alert rule metric window size
     * 
     */
    public String windowSize() {
        return this.windowSize;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamAlertRulesDataDetectionMethod defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String criticalThreshold;
        private String operand;
        private String type;
        private String warningThreshold;
        private String windowSize;
        public Builder() {}
        public Builder(GetStreamAlertRulesDataDetectionMethod defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.criticalThreshold = defaults.criticalThreshold;
    	      this.operand = defaults.operand;
    	      this.type = defaults.type;
    	      this.warningThreshold = defaults.warningThreshold;
    	      this.windowSize = defaults.windowSize;
        }

        @CustomType.Setter
        public Builder criticalThreshold(String criticalThreshold) {
            if (criticalThreshold == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesDataDetectionMethod", "criticalThreshold");
            }
            this.criticalThreshold = criticalThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder operand(String operand) {
            if (operand == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesDataDetectionMethod", "operand");
            }
            this.operand = operand;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesDataDetectionMethod", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder warningThreshold(String warningThreshold) {
            if (warningThreshold == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesDataDetectionMethod", "warningThreshold");
            }
            this.warningThreshold = warningThreshold;
            return this;
        }
        @CustomType.Setter
        public Builder windowSize(String windowSize) {
            if (windowSize == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesDataDetectionMethod", "windowSize");
            }
            this.windowSize = windowSize;
            return this;
        }
        public GetStreamAlertRulesDataDetectionMethod build() {
            final var _resultValue = new GetStreamAlertRulesDataDetectionMethod();
            _resultValue.criticalThreshold = criticalThreshold;
            _resultValue.operand = operand;
            _resultValue.type = type;
            _resultValue.warningThreshold = warningThreshold;
            _resultValue.windowSize = windowSize;
            return _resultValue;
        }
    }
}
