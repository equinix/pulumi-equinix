// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRouteAggregationRulePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteAggregationRulePlainArgs Empty = new GetRouteAggregationRulePlainArgs();

    /**
     * Customer-provided route aggregation rule description
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Customer-provided route aggregation rule description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The uuid of the route aggregation this data source should retrieve
     * 
     */
    @Import(name="routeAggregationId", required=true)
    private String routeAggregationId;

    /**
     * @return The uuid of the route aggregation this data source should retrieve
     * 
     */
    public String routeAggregationId() {
        return this.routeAggregationId;
    }

    /**
     * The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    @Import(name="routeAggregationRuleId", required=true)
    private String routeAggregationRuleId;

    /**
     * @return The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    public String routeAggregationRuleId() {
        return this.routeAggregationRuleId;
    }

    private GetRouteAggregationRulePlainArgs() {}

    private GetRouteAggregationRulePlainArgs(GetRouteAggregationRulePlainArgs $) {
        this.description = $.description;
        this.routeAggregationId = $.routeAggregationId;
        this.routeAggregationRuleId = $.routeAggregationRuleId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteAggregationRulePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteAggregationRulePlainArgs $;

        public Builder() {
            $ = new GetRouteAggregationRulePlainArgs();
        }

        public Builder(GetRouteAggregationRulePlainArgs defaults) {
            $ = new GetRouteAggregationRulePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Customer-provided route aggregation rule description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(String routeAggregationId) {
            $.routeAggregationId = routeAggregationId;
            return this;
        }

        /**
         * @param routeAggregationRuleId The uuid of the route aggregation rule this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationRuleId(String routeAggregationRuleId) {
            $.routeAggregationRuleId = routeAggregationRuleId;
            return this;
        }

        public GetRouteAggregationRulePlainArgs build() {
            if ($.routeAggregationId == null) {
                throw new MissingRequiredPropertyException("GetRouteAggregationRulePlainArgs", "routeAggregationId");
            }
            if ($.routeAggregationRuleId == null) {
                throw new MissingRequiredPropertyException("GetRouteAggregationRulePlainArgs", "routeAggregationRuleId");
            }
            return $;
        }
    }

}
