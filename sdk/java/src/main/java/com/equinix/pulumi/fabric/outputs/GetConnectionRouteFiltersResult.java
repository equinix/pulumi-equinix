// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetConnectionRouteFiltersData;
import com.equinix.pulumi.fabric.outputs.GetConnectionRouteFiltersPagination;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetConnectionRouteFiltersResult {
    /**
     * @return Equinix Assigned UUID of the Equinix Connection to attach the Route Filter Policy to
     * 
     */
    private String connectionId;
    /**
     * @return The list of Rules attached to the given Route Filter Policy UUID
     * 
     */
    private List<GetConnectionRouteFiltersData> datas;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Pagination details for the Data Source Search Request
     * 
     */
    private List<GetConnectionRouteFiltersPagination> paginations;

    private GetConnectionRouteFiltersResult() {}
    /**
     * @return Equinix Assigned UUID of the Equinix Connection to attach the Route Filter Policy to
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }
    /**
     * @return The list of Rules attached to the given Route Filter Policy UUID
     * 
     */
    public List<GetConnectionRouteFiltersData> datas() {
        return this.datas;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Pagination details for the Data Source Search Request
     * 
     */
    public List<GetConnectionRouteFiltersPagination> paginations() {
        return this.paginations;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionRouteFiltersResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String connectionId;
        private List<GetConnectionRouteFiltersData> datas;
        private String id;
        private List<GetConnectionRouteFiltersPagination> paginations;
        public Builder() {}
        public Builder(GetConnectionRouteFiltersResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.connectionId = defaults.connectionId;
    	      this.datas = defaults.datas;
    	      this.id = defaults.id;
    	      this.paginations = defaults.paginations;
        }

        @CustomType.Setter
        public Builder connectionId(String connectionId) {
            if (connectionId == null) {
              throw new MissingRequiredPropertyException("GetConnectionRouteFiltersResult", "connectionId");
            }
            this.connectionId = connectionId;
            return this;
        }
        @CustomType.Setter
        public Builder datas(List<GetConnectionRouteFiltersData> datas) {
            if (datas == null) {
              throw new MissingRequiredPropertyException("GetConnectionRouteFiltersResult", "datas");
            }
            this.datas = datas;
            return this;
        }
        public Builder datas(GetConnectionRouteFiltersData... datas) {
            return datas(List.of(datas));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetConnectionRouteFiltersResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder paginations(List<GetConnectionRouteFiltersPagination> paginations) {
            if (paginations == null) {
              throw new MissingRequiredPropertyException("GetConnectionRouteFiltersResult", "paginations");
            }
            this.paginations = paginations;
            return this;
        }
        public Builder paginations(GetConnectionRouteFiltersPagination... paginations) {
            return paginations(List.of(paginations));
        }
        public GetConnectionRouteFiltersResult build() {
            final var _resultValue = new GetConnectionRouteFiltersResult();
            _resultValue.connectionId = connectionId;
            _resultValue.datas = datas;
            _resultValue.id = id;
            _resultValue.paginations = paginations;
            return _resultValue;
        }
    }
}
