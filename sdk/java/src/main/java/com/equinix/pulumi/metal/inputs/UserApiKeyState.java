// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class UserApiKeyState extends com.pulumi.resources.ResourceArgs {

    public static final UserApiKeyState Empty = new UserApiKeyState();

    /**
     * Description string for the User API Key resource.
     * * `read-only` - (Required) Flag indicating whether the API key shoud be read-only.
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return Description string for the User API Key resource.
     * * `read-only` - (Required) Flag indicating whether the API key shoud be read-only.
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Flag indicating whether the API key shoud be read-only
     * 
     */
    @Import(name="readOnly")
    private @Nullable Output<Boolean> readOnly;

    /**
     * @return Flag indicating whether the API key shoud be read-only
     * 
     */
    public Optional<Output<Boolean>> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }

    /**
     * API token which can be used in Equinix Metal API clients.
     * 
     */
    @Import(name="token")
    private @Nullable Output<String> token;

    /**
     * @return API token which can be used in Equinix Metal API clients.
     * 
     */
    public Optional<Output<String>> token() {
        return Optional.ofNullable(this.token);
    }

    /**
     * UUID of the owner of the API key.
     * 
     */
    @Import(name="userId")
    private @Nullable Output<String> userId;

    /**
     * @return UUID of the owner of the API key.
     * 
     */
    public Optional<Output<String>> userId() {
        return Optional.ofNullable(this.userId);
    }

    private UserApiKeyState() {}

    private UserApiKeyState(UserApiKeyState $) {
        this.description = $.description;
        this.readOnly = $.readOnly;
        this.token = $.token;
        this.userId = $.userId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(UserApiKeyState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private UserApiKeyState $;

        public Builder() {
            $ = new UserApiKeyState();
        }

        public Builder(UserApiKeyState defaults) {
            $ = new UserApiKeyState(Objects.requireNonNull(defaults));
        }

        /**
         * @param description Description string for the User API Key resource.
         * * `read-only` - (Required) Flag indicating whether the API key shoud be read-only.
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description Description string for the User API Key resource.
         * * `read-only` - (Required) Flag indicating whether the API key shoud be read-only.
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param readOnly Flag indicating whether the API key shoud be read-only
         * 
         * @return builder
         * 
         */
        public Builder readOnly(@Nullable Output<Boolean> readOnly) {
            $.readOnly = readOnly;
            return this;
        }

        /**
         * @param readOnly Flag indicating whether the API key shoud be read-only
         * 
         * @return builder
         * 
         */
        public Builder readOnly(Boolean readOnly) {
            return readOnly(Output.of(readOnly));
        }

        /**
         * @param token API token which can be used in Equinix Metal API clients.
         * 
         * @return builder
         * 
         */
        public Builder token(@Nullable Output<String> token) {
            $.token = token;
            return this;
        }

        /**
         * @param token API token which can be used in Equinix Metal API clients.
         * 
         * @return builder
         * 
         */
        public Builder token(String token) {
            return token(Output.of(token));
        }

        /**
         * @param userId UUID of the owner of the API key.
         * 
         * @return builder
         * 
         */
        public Builder userId(@Nullable Output<String> userId) {
            $.userId = userId;
            return this;
        }

        /**
         * @param userId UUID of the owner of the API key.
         * 
         * @return builder
         * 
         */
        public Builder userId(String userId) {
            return userId(Output.of(userId));
        }

        public UserApiKeyState build() {
            return $;
        }
    }

}
