// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetRouteAggregationRulesPagination;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRouteAggregationRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteAggregationRulesPlainArgs Empty = new GetRouteAggregationRulesPlainArgs();

    /**
     * Pagination details for the returned route aggregation rules list
     * 
     */
    @Import(name="pagination")
    private @Nullable GetRouteAggregationRulesPagination pagination;

    /**
     * @return Pagination details for the returned route aggregation rules list
     * 
     */
    public Optional<GetRouteAggregationRulesPagination> pagination() {
        return Optional.ofNullable(this.pagination);
    }

    /**
     * The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    @Import(name="routeAggregationId", required=true)
    private String routeAggregationId;

    /**
     * @return The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    public String routeAggregationId() {
        return this.routeAggregationId;
    }

    private GetRouteAggregationRulesPlainArgs() {}

    private GetRouteAggregationRulesPlainArgs(GetRouteAggregationRulesPlainArgs $) {
        this.pagination = $.pagination;
        this.routeAggregationId = $.routeAggregationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteAggregationRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteAggregationRulesPlainArgs $;

        public Builder() {
            $ = new GetRouteAggregationRulesPlainArgs();
        }

        public Builder(GetRouteAggregationRulesPlainArgs defaults) {
            $ = new GetRouteAggregationRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pagination Pagination details for the returned route aggregation rules list
         * 
         * @return builder
         * 
         */
        public Builder pagination(@Nullable GetRouteAggregationRulesPagination pagination) {
            $.pagination = pagination;
            return this;
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation rule this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(String routeAggregationId) {
            $.routeAggregationId = routeAggregationId;
            return this;
        }

        public GetRouteAggregationRulesPlainArgs build() {
            if ($.routeAggregationId == null) {
                throw new MissingRequiredPropertyException("GetRouteAggregationRulesPlainArgs", "routeAggregationId");
            }
            return $;
        }
    }

}
