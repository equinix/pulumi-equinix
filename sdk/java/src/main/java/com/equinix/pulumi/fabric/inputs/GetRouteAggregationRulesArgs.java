// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetRouteAggregationRulesPaginationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRouteAggregationRulesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteAggregationRulesArgs Empty = new GetRouteAggregationRulesArgs();

    /**
     * Pagination details for the returned route aggregation rules list
     * 
     */
    @Import(name="pagination")
    private @Nullable Output<GetRouteAggregationRulesPaginationArgs> pagination;

    /**
     * @return Pagination details for the returned route aggregation rules list
     * 
     */
    public Optional<Output<GetRouteAggregationRulesPaginationArgs>> pagination() {
        return Optional.ofNullable(this.pagination);
    }

    /**
     * The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    @Import(name="routeAggregationId", required=true)
    private Output<String> routeAggregationId;

    /**
     * @return The uuid of the route aggregation rule this data source should retrieve
     * 
     */
    public Output<String> routeAggregationId() {
        return this.routeAggregationId;
    }

    private GetRouteAggregationRulesArgs() {}

    private GetRouteAggregationRulesArgs(GetRouteAggregationRulesArgs $) {
        this.pagination = $.pagination;
        this.routeAggregationId = $.routeAggregationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteAggregationRulesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteAggregationRulesArgs $;

        public Builder() {
            $ = new GetRouteAggregationRulesArgs();
        }

        public Builder(GetRouteAggregationRulesArgs defaults) {
            $ = new GetRouteAggregationRulesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pagination Pagination details for the returned route aggregation rules list
         * 
         * @return builder
         * 
         */
        public Builder pagination(@Nullable Output<GetRouteAggregationRulesPaginationArgs> pagination) {
            $.pagination = pagination;
            return this;
        }

        /**
         * @param pagination Pagination details for the returned route aggregation rules list
         * 
         * @return builder
         * 
         */
        public Builder pagination(GetRouteAggregationRulesPaginationArgs pagination) {
            return pagination(Output.of(pagination));
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation rule this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(Output<String> routeAggregationId) {
            $.routeAggregationId = routeAggregationId;
            return this;
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation rule this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(String routeAggregationId) {
            return routeAggregationId(Output.of(routeAggregationId));
        }

        public GetRouteAggregationRulesArgs build() {
            if ($.routeAggregationId == null) {
                throw new MissingRequiredPropertyException("GetRouteAggregationRulesArgs", "routeAggregationId");
            }
            return $;
        }
    }

}
