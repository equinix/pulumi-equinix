// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetRouteAggregationRulesPagination {
    /**
     * @return Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
     * 
     */
    private Integer limit;
    /**
     * @return The URL relative to the next item in the response
     * 
     */
    private String next;
    /**
     * @return Index of the first item returned in the response. The default is 0
     * 
     */
    private Integer offset;
    /**
     * @return The URL relative to the previous item in the response
     * 
     */
    private String previous;
    /**
     * @return The total number of route agrgegation rules available to the user making the request
     * 
     */
    private Integer total;

    private GetRouteAggregationRulesPagination() {}
    /**
     * @return Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
     * 
     */
    public Integer limit() {
        return this.limit;
    }
    /**
     * @return The URL relative to the next item in the response
     * 
     */
    public String next() {
        return this.next;
    }
    /**
     * @return Index of the first item returned in the response. The default is 0
     * 
     */
    public Integer offset() {
        return this.offset;
    }
    /**
     * @return The URL relative to the previous item in the response
     * 
     */
    public String previous() {
        return this.previous;
    }
    /**
     * @return The total number of route agrgegation rules available to the user making the request
     * 
     */
    public Integer total() {
        return this.total;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetRouteAggregationRulesPagination defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer limit;
        private String next;
        private Integer offset;
        private String previous;
        private Integer total;
        public Builder() {}
        public Builder(GetRouteAggregationRulesPagination defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.limit = defaults.limit;
    	      this.next = defaults.next;
    	      this.offset = defaults.offset;
    	      this.previous = defaults.previous;
    	      this.total = defaults.total;
        }

        @CustomType.Setter
        public Builder limit(Integer limit) {
            if (limit == null) {
              throw new MissingRequiredPropertyException("GetRouteAggregationRulesPagination", "limit");
            }
            this.limit = limit;
            return this;
        }
        @CustomType.Setter
        public Builder next(String next) {
            if (next == null) {
              throw new MissingRequiredPropertyException("GetRouteAggregationRulesPagination", "next");
            }
            this.next = next;
            return this;
        }
        @CustomType.Setter
        public Builder offset(Integer offset) {
            if (offset == null) {
              throw new MissingRequiredPropertyException("GetRouteAggregationRulesPagination", "offset");
            }
            this.offset = offset;
            return this;
        }
        @CustomType.Setter
        public Builder previous(String previous) {
            if (previous == null) {
              throw new MissingRequiredPropertyException("GetRouteAggregationRulesPagination", "previous");
            }
            this.previous = previous;
            return this;
        }
        @CustomType.Setter
        public Builder total(Integer total) {
            if (total == null) {
              throw new MissingRequiredPropertyException("GetRouteAggregationRulesPagination", "total");
            }
            this.total = total;
            return this;
        }
        public GetRouteAggregationRulesPagination build() {
            final var _resultValue = new GetRouteAggregationRulesPagination();
            _resultValue.limit = limit;
            _resultValue.next = next;
            _resultValue.offset = offset;
            _resultValue.previous = previous;
            _resultValue.total = total;
            return _resultValue;
        }
    }
}
