// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetStreamsDataChangeLog;
import com.equinix.pulumi.fabric.outputs.GetStreamsDataProject;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Double;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamsData {
    /**
     * @return Count of the streaming assets attached to the stream resource
     * 
     */
    private Double assetsCount;
    /**
     * @return Details of the last change on the stream resource
     * 
     */
    private GetStreamsDataChangeLog changeLog;
    /**
     * @return Customer-provided description of the stream resource
     * 
     */
    private String description;
    /**
     * @return Equinix auto generated URI to the stream resource in Equinix Portal
     * 
     */
    private String href;
    /**
     * @return Customer-provided name of the stream resource
     * 
     */
    private String name;
    /**
     * @return Equinix Project attribute object
     * 
     */
    private GetStreamsDataProject project;
    /**
     * @return Value representing provisioning status for the stream resource
     * 
     */
    private String state;
    /**
     * @return Count of the client subscriptions on the stream resource
     * 
     */
    private Double streamSubscriptionsCount;
    /**
     * @return Equinix defined Streaming Type
     * 
     */
    private String type;
    /**
     * @return Equinix-assigned unique id for the stream resource
     * 
     */
    private String uuid;

    private GetStreamsData() {}
    /**
     * @return Count of the streaming assets attached to the stream resource
     * 
     */
    public Double assetsCount() {
        return this.assetsCount;
    }
    /**
     * @return Details of the last change on the stream resource
     * 
     */
    public GetStreamsDataChangeLog changeLog() {
        return this.changeLog;
    }
    /**
     * @return Customer-provided description of the stream resource
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Equinix auto generated URI to the stream resource in Equinix Portal
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return Customer-provided name of the stream resource
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Equinix Project attribute object
     * 
     */
    public GetStreamsDataProject project() {
        return this.project;
    }
    /**
     * @return Value representing provisioning status for the stream resource
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Count of the client subscriptions on the stream resource
     * 
     */
    public Double streamSubscriptionsCount() {
        return this.streamSubscriptionsCount;
    }
    /**
     * @return Equinix defined Streaming Type
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Equinix-assigned unique id for the stream resource
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamsData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Double assetsCount;
        private GetStreamsDataChangeLog changeLog;
        private String description;
        private String href;
        private String name;
        private GetStreamsDataProject project;
        private String state;
        private Double streamSubscriptionsCount;
        private String type;
        private String uuid;
        public Builder() {}
        public Builder(GetStreamsData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.assetsCount = defaults.assetsCount;
    	      this.changeLog = defaults.changeLog;
    	      this.description = defaults.description;
    	      this.href = defaults.href;
    	      this.name = defaults.name;
    	      this.project = defaults.project;
    	      this.state = defaults.state;
    	      this.streamSubscriptionsCount = defaults.streamSubscriptionsCount;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder assetsCount(Double assetsCount) {
            if (assetsCount == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "assetsCount");
            }
            this.assetsCount = assetsCount;
            return this;
        }
        @CustomType.Setter
        public Builder changeLog(GetStreamsDataChangeLog changeLog) {
            if (changeLog == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "changeLog");
            }
            this.changeLog = changeLog;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder project(GetStreamsDataProject project) {
            if (project == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "project");
            }
            this.project = project;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder streamSubscriptionsCount(Double streamSubscriptionsCount) {
            if (streamSubscriptionsCount == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "streamSubscriptionsCount");
            }
            this.streamSubscriptionsCount = streamSubscriptionsCount;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetStreamsData", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetStreamsData build() {
            final var _resultValue = new GetStreamsData();
            _resultValue.assetsCount = assetsCount;
            _resultValue.changeLog = changeLog;
            _resultValue.description = description;
            _resultValue.href = href;
            _resultValue.name = name;
            _resultValue.project = project;
            _resultValue.state = state;
            _resultValue.streamSubscriptionsCount = streamSubscriptionsCount;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
