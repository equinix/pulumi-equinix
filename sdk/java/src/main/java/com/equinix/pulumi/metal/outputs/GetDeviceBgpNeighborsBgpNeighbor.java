// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.outputs;

import com.equinix.pulumi.metal.outputs.GetDeviceBgpNeighborsBgpNeighborRoutesIn;
import com.equinix.pulumi.metal.outputs.GetDeviceBgpNeighborsBgpNeighborRoutesOut;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class GetDeviceBgpNeighborsBgpNeighbor {
    /**
     * @return IP address version, 4 or 6.
     * 
     */
    private Integer addressFamily;
    /**
     * @return Local autonomous system number.
     * 
     */
    private Integer customerAs;
    /**
     * @return Local used peer IP address.
     * 
     */
    private String customerIp;
    /**
     * @return Whether BGP session is password enabled.
     * 
     */
    private Boolean md5Enabled;
    /**
     * @return BGP session password in plaintext (not a checksum).
     * 
     */
    private String md5Password;
    /**
     * @return Whether the neighbor is in EBGP multihop session.
     * 
     */
    private Boolean multihop;
    /**
     * @return Peer AS number (different than customer_as for EBGP).
     * 
     */
    private Integer peerAs;
    /**
     * @return Array of IP addresses of this neighbor&#39;s peers.
     * 
     */
    private @Nullable List<String> peerIps;
    /**
     * @return Array of incoming routes.
     * 
     */
    private List<GetDeviceBgpNeighborsBgpNeighborRoutesIn> routesIns;
    /**
     * @return Array of outgoing routes in the same format.
     * 
     */
    private List<GetDeviceBgpNeighborsBgpNeighborRoutesOut> routesOuts;

    private GetDeviceBgpNeighborsBgpNeighbor() {}
    /**
     * @return IP address version, 4 or 6.
     * 
     */
    public Integer addressFamily() {
        return this.addressFamily;
    }
    /**
     * @return Local autonomous system number.
     * 
     */
    public Integer customerAs() {
        return this.customerAs;
    }
    /**
     * @return Local used peer IP address.
     * 
     */
    public String customerIp() {
        return this.customerIp;
    }
    /**
     * @return Whether BGP session is password enabled.
     * 
     */
    public Boolean md5Enabled() {
        return this.md5Enabled;
    }
    /**
     * @return BGP session password in plaintext (not a checksum).
     * 
     */
    public String md5Password() {
        return this.md5Password;
    }
    /**
     * @return Whether the neighbor is in EBGP multihop session.
     * 
     */
    public Boolean multihop() {
        return this.multihop;
    }
    /**
     * @return Peer AS number (different than customer_as for EBGP).
     * 
     */
    public Integer peerAs() {
        return this.peerAs;
    }
    /**
     * @return Array of IP addresses of this neighbor&#39;s peers.
     * 
     */
    public List<String> peerIps() {
        return this.peerIps == null ? List.of() : this.peerIps;
    }
    /**
     * @return Array of incoming routes.
     * 
     */
    public List<GetDeviceBgpNeighborsBgpNeighborRoutesIn> routesIns() {
        return this.routesIns;
    }
    /**
     * @return Array of outgoing routes in the same format.
     * 
     */
    public List<GetDeviceBgpNeighborsBgpNeighborRoutesOut> routesOuts() {
        return this.routesOuts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDeviceBgpNeighborsBgpNeighbor defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer addressFamily;
        private Integer customerAs;
        private String customerIp;
        private Boolean md5Enabled;
        private String md5Password;
        private Boolean multihop;
        private Integer peerAs;
        private @Nullable List<String> peerIps;
        private List<GetDeviceBgpNeighborsBgpNeighborRoutesIn> routesIns;
        private List<GetDeviceBgpNeighborsBgpNeighborRoutesOut> routesOuts;
        public Builder() {}
        public Builder(GetDeviceBgpNeighborsBgpNeighbor defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.addressFamily = defaults.addressFamily;
    	      this.customerAs = defaults.customerAs;
    	      this.customerIp = defaults.customerIp;
    	      this.md5Enabled = defaults.md5Enabled;
    	      this.md5Password = defaults.md5Password;
    	      this.multihop = defaults.multihop;
    	      this.peerAs = defaults.peerAs;
    	      this.peerIps = defaults.peerIps;
    	      this.routesIns = defaults.routesIns;
    	      this.routesOuts = defaults.routesOuts;
        }

        @CustomType.Setter
        public Builder addressFamily(Integer addressFamily) {
            if (addressFamily == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "addressFamily");
            }
            this.addressFamily = addressFamily;
            return this;
        }
        @CustomType.Setter
        public Builder customerAs(Integer customerAs) {
            if (customerAs == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "customerAs");
            }
            this.customerAs = customerAs;
            return this;
        }
        @CustomType.Setter
        public Builder customerIp(String customerIp) {
            if (customerIp == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "customerIp");
            }
            this.customerIp = customerIp;
            return this;
        }
        @CustomType.Setter
        public Builder md5Enabled(Boolean md5Enabled) {
            if (md5Enabled == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "md5Enabled");
            }
            this.md5Enabled = md5Enabled;
            return this;
        }
        @CustomType.Setter
        public Builder md5Password(String md5Password) {
            if (md5Password == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "md5Password");
            }
            this.md5Password = md5Password;
            return this;
        }
        @CustomType.Setter
        public Builder multihop(Boolean multihop) {
            if (multihop == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "multihop");
            }
            this.multihop = multihop;
            return this;
        }
        @CustomType.Setter
        public Builder peerAs(Integer peerAs) {
            if (peerAs == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "peerAs");
            }
            this.peerAs = peerAs;
            return this;
        }
        @CustomType.Setter
        public Builder peerIps(@Nullable List<String> peerIps) {

            this.peerIps = peerIps;
            return this;
        }
        public Builder peerIps(String... peerIps) {
            return peerIps(List.of(peerIps));
        }
        @CustomType.Setter
        public Builder routesIns(List<GetDeviceBgpNeighborsBgpNeighborRoutesIn> routesIns) {
            if (routesIns == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "routesIns");
            }
            this.routesIns = routesIns;
            return this;
        }
        public Builder routesIns(GetDeviceBgpNeighborsBgpNeighborRoutesIn... routesIns) {
            return routesIns(List.of(routesIns));
        }
        @CustomType.Setter
        public Builder routesOuts(List<GetDeviceBgpNeighborsBgpNeighborRoutesOut> routesOuts) {
            if (routesOuts == null) {
              throw new MissingRequiredPropertyException("GetDeviceBgpNeighborsBgpNeighbor", "routesOuts");
            }
            this.routesOuts = routesOuts;
            return this;
        }
        public Builder routesOuts(GetDeviceBgpNeighborsBgpNeighborRoutesOut... routesOuts) {
            return routesOuts(List.of(routesOuts));
        }
        public GetDeviceBgpNeighborsBgpNeighbor build() {
            final var _resultValue = new GetDeviceBgpNeighborsBgpNeighbor();
            _resultValue.addressFamily = addressFamily;
            _resultValue.customerAs = customerAs;
            _resultValue.customerIp = customerIp;
            _resultValue.md5Enabled = md5Enabled;
            _resultValue.md5Password = md5Password;
            _resultValue.multihop = multihop;
            _resultValue.peerAs = peerAs;
            _resultValue.peerIps = peerIps;
            _resultValue.routesIns = routesIns;
            _resultValue.routesOuts = routesOuts;
            return _resultValue;
        }
    }
}
