// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PrecisionTimeServiceIpv4Args extends com.pulumi.resources.ResourceArgs {

    public static final PrecisionTimeServiceIpv4Args Empty = new PrecisionTimeServiceIpv4Args();

    /**
     * IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
     * 
     */
    @Import(name="defaultGateway", required=true)
    private Output<String> defaultGateway;

    /**
     * @return IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
     * 
     */
    public Output<String> defaultGateway() {
        return this.defaultGateway;
    }

    /**
     * IPv4 address that defines the range of consecutive subnets in the network.
     * 
     */
    @Import(name="networkMask", required=true)
    private Output<String> networkMask;

    /**
     * @return IPv4 address that defines the range of consecutive subnets in the network.
     * 
     */
    public Output<String> networkMask() {
        return this.networkMask;
    }

    /**
     * IPv4 address for the Primary Timing Master Server.
     * 
     */
    @Import(name="primary", required=true)
    private Output<String> primary;

    /**
     * @return IPv4 address for the Primary Timing Master Server.
     * 
     */
    public Output<String> primary() {
        return this.primary;
    }

    /**
     * IPv4 address for the Secondary Timing Master Server.
     * 
     */
    @Import(name="secondary", required=true)
    private Output<String> secondary;

    /**
     * @return IPv4 address for the Secondary Timing Master Server.
     * 
     */
    public Output<String> secondary() {
        return this.secondary;
    }

    private PrecisionTimeServiceIpv4Args() {}

    private PrecisionTimeServiceIpv4Args(PrecisionTimeServiceIpv4Args $) {
        this.defaultGateway = $.defaultGateway;
        this.networkMask = $.networkMask;
        this.primary = $.primary;
        this.secondary = $.secondary;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrecisionTimeServiceIpv4Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrecisionTimeServiceIpv4Args $;

        public Builder() {
            $ = new PrecisionTimeServiceIpv4Args();
        }

        public Builder(PrecisionTimeServiceIpv4Args defaults) {
            $ = new PrecisionTimeServiceIpv4Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultGateway IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
         * 
         * @return builder
         * 
         */
        public Builder defaultGateway(Output<String> defaultGateway) {
            $.defaultGateway = defaultGateway;
            return this;
        }

        /**
         * @param defaultGateway IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
         * 
         * @return builder
         * 
         */
        public Builder defaultGateway(String defaultGateway) {
            return defaultGateway(Output.of(defaultGateway));
        }

        /**
         * @param networkMask IPv4 address that defines the range of consecutive subnets in the network.
         * 
         * @return builder
         * 
         */
        public Builder networkMask(Output<String> networkMask) {
            $.networkMask = networkMask;
            return this;
        }

        /**
         * @param networkMask IPv4 address that defines the range of consecutive subnets in the network.
         * 
         * @return builder
         * 
         */
        public Builder networkMask(String networkMask) {
            return networkMask(Output.of(networkMask));
        }

        /**
         * @param primary IPv4 address for the Primary Timing Master Server.
         * 
         * @return builder
         * 
         */
        public Builder primary(Output<String> primary) {
            $.primary = primary;
            return this;
        }

        /**
         * @param primary IPv4 address for the Primary Timing Master Server.
         * 
         * @return builder
         * 
         */
        public Builder primary(String primary) {
            return primary(Output.of(primary));
        }

        /**
         * @param secondary IPv4 address for the Secondary Timing Master Server.
         * 
         * @return builder
         * 
         */
        public Builder secondary(Output<String> secondary) {
            $.secondary = secondary;
            return this;
        }

        /**
         * @param secondary IPv4 address for the Secondary Timing Master Server.
         * 
         * @return builder
         * 
         */
        public Builder secondary(String secondary) {
            return secondary(Output.of(secondary));
        }

        public PrecisionTimeServiceIpv4Args build() {
            if ($.defaultGateway == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceIpv4Args", "defaultGateway");
            }
            if ($.networkMask == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceIpv4Args", "networkMask");
            }
            if ($.primary == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceIpv4Args", "primary");
            }
            if ($.secondary == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceIpv4Args", "secondary");
            }
            return $;
        }
    }

}
