// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceReinstall {
    /**
     * @return Whether the OS disk should be filled with `00h` bytes before reinstall
     * 
     */
    private @Nullable Boolean deprovisionFast;
    /**
     * @return Whether the device should be reinstalled instead of destroyed
     * 
     */
    private @Nullable Boolean enabled;
    /**
     * @return Whether the non-OS disks should be kept or wiped during reinstall
     * 
     */
    private @Nullable Boolean preserveData;

    private DeviceReinstall() {}
    /**
     * @return Whether the OS disk should be filled with `00h` bytes before reinstall
     * 
     */
    public Optional<Boolean> deprovisionFast() {
        return Optional.ofNullable(this.deprovisionFast);
    }
    /**
     * @return Whether the device should be reinstalled instead of destroyed
     * 
     */
    public Optional<Boolean> enabled() {
        return Optional.ofNullable(this.enabled);
    }
    /**
     * @return Whether the non-OS disks should be kept or wiped during reinstall
     * 
     */
    public Optional<Boolean> preserveData() {
        return Optional.ofNullable(this.preserveData);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceReinstall defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean deprovisionFast;
        private @Nullable Boolean enabled;
        private @Nullable Boolean preserveData;
        public Builder() {}
        public Builder(DeviceReinstall defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.deprovisionFast = defaults.deprovisionFast;
    	      this.enabled = defaults.enabled;
    	      this.preserveData = defaults.preserveData;
        }

        @CustomType.Setter
        public Builder deprovisionFast(@Nullable Boolean deprovisionFast) {

            this.deprovisionFast = deprovisionFast;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(@Nullable Boolean enabled) {

            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder preserveData(@Nullable Boolean preserveData) {

            this.preserveData = preserveData;
            return this;
        }
        public DeviceReinstall build() {
            final var _resultValue = new DeviceReinstall();
            _resultValue.deprovisionFast = deprovisionFast;
            _resultValue.enabled = enabled;
            _resultValue.preserveData = preserveData;
            return _resultValue;
        }
    }
}
