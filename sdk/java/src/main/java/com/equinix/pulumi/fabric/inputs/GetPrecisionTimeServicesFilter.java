// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrecisionTimeServicesFilter extends com.pulumi.resources.InvokeArgs {

    public static final GetPrecisionTimeServicesFilter Empty = new GetPrecisionTimeServicesFilter();

    /**
     * Operation applied to the values of the filter
     * 
     */
    @Import(name="operator", required=true)
    private String operator;

    /**
     * @return Operation applied to the values of the filter
     * 
     */
    public String operator() {
        return this.operator;
    }

    /**
     * Boolean value to specify if this filter is a part of the OR group. Has a maximum of 3 and only counts for 1 of the 8 possible filters
     * 
     */
    @Import(name="or")
    private @Nullable Boolean or;

    /**
     * @return Boolean value to specify if this filter is a part of the OR group. Has a maximum of 3 and only counts for 1 of the 8 possible filters
     * 
     */
    public Optional<Boolean> or() {
        return Optional.ofNullable(this.or);
    }

    /**
     * Property to apply the filter to
     * 
     */
    @Import(name="property", required=true)
    private String property;

    /**
     * @return Property to apply the filter to
     * 
     */
    public String property() {
        return this.property;
    }

    /**
     * List of values to apply the operation to for the specified property
     * 
     */
    @Import(name="values", required=true)
    private List<String> values;

    /**
     * @return List of values to apply the operation to for the specified property
     * 
     */
    public List<String> values() {
        return this.values;
    }

    private GetPrecisionTimeServicesFilter() {}

    private GetPrecisionTimeServicesFilter(GetPrecisionTimeServicesFilter $) {
        this.operator = $.operator;
        this.or = $.or;
        this.property = $.property;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrecisionTimeServicesFilter defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrecisionTimeServicesFilter $;

        public Builder() {
            $ = new GetPrecisionTimeServicesFilter();
        }

        public Builder(GetPrecisionTimeServicesFilter defaults) {
            $ = new GetPrecisionTimeServicesFilter(Objects.requireNonNull(defaults));
        }

        /**
         * @param operator Operation applied to the values of the filter
         * 
         * @return builder
         * 
         */
        public Builder operator(String operator) {
            $.operator = operator;
            return this;
        }

        /**
         * @param or Boolean value to specify if this filter is a part of the OR group. Has a maximum of 3 and only counts for 1 of the 8 possible filters
         * 
         * @return builder
         * 
         */
        public Builder or(@Nullable Boolean or) {
            $.or = or;
            return this;
        }

        /**
         * @param property Property to apply the filter to
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            $.property = property;
            return this;
        }

        /**
         * @param values List of values to apply the operation to for the specified property
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values List of values to apply the operation to for the specified property
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public GetPrecisionTimeServicesFilter build() {
            if ($.operator == null) {
                throw new MissingRequiredPropertyException("GetPrecisionTimeServicesFilter", "operator");
            }
            if ($.property == null) {
                throw new MissingRequiredPropertyException("GetPrecisionTimeServicesFilter", "property");
            }
            if ($.values == null) {
                throw new MissingRequiredPropertyException("GetPrecisionTimeServicesFilter", "values");
            }
            return $;
        }
    }

}
