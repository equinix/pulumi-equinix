// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetPrecisionTimeServicesFilterArgs;
import com.equinix.pulumi.fabric.inputs.GetPrecisionTimeServicesPaginationArgs;
import com.equinix.pulumi.fabric.inputs.GetPrecisionTimeServicesSortArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPrecisionTimeServicesArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPrecisionTimeServicesArgs Empty = new GetPrecisionTimeServicesArgs();

    /**
     * List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
     * 
     */
    @Import(name="filters")
    private @Nullable Output<List<GetPrecisionTimeServicesFilterArgs>> filters;

    /**
     * @return List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
     * 
     */
    public Optional<Output<List<GetPrecisionTimeServicesFilterArgs>>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Pagination details for the returned route aggregations list
     * 
     */
    @Import(name="pagination")
    private @Nullable Output<GetPrecisionTimeServicesPaginationArgs> pagination;

    /**
     * @return Pagination details for the returned route aggregations list
     * 
     */
    public Optional<Output<GetPrecisionTimeServicesPaginationArgs>> pagination() {
        return Optional.ofNullable(this.pagination);
    }

    /**
     * Filters for the Data Source Search Request
     * 
     */
    @Import(name="sorts")
    private @Nullable Output<List<GetPrecisionTimeServicesSortArgs>> sorts;

    /**
     * @return Filters for the Data Source Search Request
     * 
     */
    public Optional<Output<List<GetPrecisionTimeServicesSortArgs>>> sorts() {
        return Optional.ofNullable(this.sorts);
    }

    private GetPrecisionTimeServicesArgs() {}

    private GetPrecisionTimeServicesArgs(GetPrecisionTimeServicesArgs $) {
        this.filters = $.filters;
        this.pagination = $.pagination;
        this.sorts = $.sorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPrecisionTimeServicesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPrecisionTimeServicesArgs $;

        public Builder() {
            $ = new GetPrecisionTimeServicesArgs();
        }

        public Builder(GetPrecisionTimeServicesArgs defaults) {
            $ = new GetPrecisionTimeServicesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable Output<List<GetPrecisionTimeServicesFilterArgs>> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
         * 
         * @return builder
         * 
         */
        public Builder filters(List<GetPrecisionTimeServicesFilterArgs> filters) {
            return filters(Output.of(filters));
        }

        /**
         * @param filters List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
         * 
         * @return builder
         * 
         */
        public Builder filters(GetPrecisionTimeServicesFilterArgs... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param pagination Pagination details for the returned route aggregations list
         * 
         * @return builder
         * 
         */
        public Builder pagination(@Nullable Output<GetPrecisionTimeServicesPaginationArgs> pagination) {
            $.pagination = pagination;
            return this;
        }

        /**
         * @param pagination Pagination details for the returned route aggregations list
         * 
         * @return builder
         * 
         */
        public Builder pagination(GetPrecisionTimeServicesPaginationArgs pagination) {
            return pagination(Output.of(pagination));
        }

        /**
         * @param sorts Filters for the Data Source Search Request
         * 
         * @return builder
         * 
         */
        public Builder sorts(@Nullable Output<List<GetPrecisionTimeServicesSortArgs>> sorts) {
            $.sorts = sorts;
            return this;
        }

        /**
         * @param sorts Filters for the Data Source Search Request
         * 
         * @return builder
         * 
         */
        public Builder sorts(List<GetPrecisionTimeServicesSortArgs> sorts) {
            return sorts(Output.of(sorts));
        }

        /**
         * @param sorts Filters for the Data Source Search Request
         * 
         * @return builder
         * 
         */
        public Builder sorts(GetPrecisionTimeServicesSortArgs... sorts) {
            return sorts(List.of(sorts));
        }

        public GetPrecisionTimeServicesArgs build() {
            return $;
        }
    }

}
