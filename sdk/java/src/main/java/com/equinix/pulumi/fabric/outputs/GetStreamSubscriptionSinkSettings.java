// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamSubscriptionSinkSettings {
    private String applicationKey;
    private String eventIndex;
    private String eventUri;
    private String format;
    private String metricIndex;
    private String metricUri;
    private String source;

    private GetStreamSubscriptionSinkSettings() {}
    public String applicationKey() {
        return this.applicationKey;
    }
    public String eventIndex() {
        return this.eventIndex;
    }
    public String eventUri() {
        return this.eventUri;
    }
    public String format() {
        return this.format;
    }
    public String metricIndex() {
        return this.metricIndex;
    }
    public String metricUri() {
        return this.metricUri;
    }
    public String source() {
        return this.source;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamSubscriptionSinkSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String applicationKey;
        private String eventIndex;
        private String eventUri;
        private String format;
        private String metricIndex;
        private String metricUri;
        private String source;
        public Builder() {}
        public Builder(GetStreamSubscriptionSinkSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applicationKey = defaults.applicationKey;
    	      this.eventIndex = defaults.eventIndex;
    	      this.eventUri = defaults.eventUri;
    	      this.format = defaults.format;
    	      this.metricIndex = defaults.metricIndex;
    	      this.metricUri = defaults.metricUri;
    	      this.source = defaults.source;
        }

        @CustomType.Setter
        public Builder applicationKey(String applicationKey) {
            if (applicationKey == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "applicationKey");
            }
            this.applicationKey = applicationKey;
            return this;
        }
        @CustomType.Setter
        public Builder eventIndex(String eventIndex) {
            if (eventIndex == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "eventIndex");
            }
            this.eventIndex = eventIndex;
            return this;
        }
        @CustomType.Setter
        public Builder eventUri(String eventUri) {
            if (eventUri == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "eventUri");
            }
            this.eventUri = eventUri;
            return this;
        }
        @CustomType.Setter
        public Builder format(String format) {
            if (format == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "format");
            }
            this.format = format;
            return this;
        }
        @CustomType.Setter
        public Builder metricIndex(String metricIndex) {
            if (metricIndex == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "metricIndex");
            }
            this.metricIndex = metricIndex;
            return this;
        }
        @CustomType.Setter
        public Builder metricUri(String metricUri) {
            if (metricUri == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "metricUri");
            }
            this.metricUri = metricUri;
            return this;
        }
        @CustomType.Setter
        public Builder source(String source) {
            if (source == null) {
              throw new MissingRequiredPropertyException("GetStreamSubscriptionSinkSettings", "source");
            }
            this.source = source;
            return this;
        }
        public GetStreamSubscriptionSinkSettings build() {
            final var _resultValue = new GetStreamSubscriptionSinkSettings();
            _resultValue.applicationKey = applicationKey;
            _resultValue.eventIndex = eventIndex;
            _resultValue.eventUri = eventUri;
            _resultValue.format = format;
            _resultValue.metricIndex = metricIndex;
            _resultValue.metricUri = metricUri;
            _resultValue.source = source;
            return _resultValue;
        }
    }
}
