// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.fabric.inputs;

import com.equinix.pulumi.equinix.fabric.inputs.ConnectionASideAccessPointArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ConnectionASideAdditionalInfoArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ConnectionASideServiceTokenArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ConnectionASideArgs extends com.pulumi.resources.ResourceArgs {

    public static final ConnectionASideArgs Empty = new ConnectionASideArgs();

    /**
     * Point of access details
     * 
     */
    @Import(name="accessPoint")
    private @Nullable Output<ConnectionASideAccessPointArgs> accessPoint;

    /**
     * @return Point of access details
     * 
     */
    public Optional<Output<ConnectionASideAccessPointArgs>> accessPoint() {
        return Optional.ofNullable(this.accessPoint);
    }

    /**
     * Connection side additional information
     * 
     */
    @Import(name="additionalInfo")
    private @Nullable Output<List<ConnectionASideAdditionalInfoArgs>> additionalInfo;

    /**
     * @return Connection side additional information
     * 
     */
    public Optional<Output<List<ConnectionASideAdditionalInfoArgs>>> additionalInfo() {
        return Optional.ofNullable(this.additionalInfo);
    }

    /**
     * For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
     * 
     */
    @Import(name="serviceToken")
    private @Nullable Output<ConnectionASideServiceTokenArgs> serviceToken;

    /**
     * @return For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
     * 
     */
    public Optional<Output<ConnectionASideServiceTokenArgs>> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    private ConnectionASideArgs() {}

    private ConnectionASideArgs(ConnectionASideArgs $) {
        this.accessPoint = $.accessPoint;
        this.additionalInfo = $.additionalInfo;
        this.serviceToken = $.serviceToken;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ConnectionASideArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ConnectionASideArgs $;

        public Builder() {
            $ = new ConnectionASideArgs();
        }

        public Builder(ConnectionASideArgs defaults) {
            $ = new ConnectionASideArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPoint Point of access details
         * 
         * @return builder
         * 
         */
        public Builder accessPoint(@Nullable Output<ConnectionASideAccessPointArgs> accessPoint) {
            $.accessPoint = accessPoint;
            return this;
        }

        /**
         * @param accessPoint Point of access details
         * 
         * @return builder
         * 
         */
        public Builder accessPoint(ConnectionASideAccessPointArgs accessPoint) {
            return accessPoint(Output.of(accessPoint));
        }

        /**
         * @param additionalInfo Connection side additional information
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(@Nullable Output<List<ConnectionASideAdditionalInfoArgs>> additionalInfo) {
            $.additionalInfo = additionalInfo;
            return this;
        }

        /**
         * @param additionalInfo Connection side additional information
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(List<ConnectionASideAdditionalInfoArgs> additionalInfo) {
            return additionalInfo(Output.of(additionalInfo));
        }

        /**
         * @param additionalInfo Connection side additional information
         * 
         * @return builder
         * 
         */
        public Builder additionalInfo(ConnectionASideAdditionalInfoArgs... additionalInfo) {
            return additionalInfo(List.of(additionalInfo));
        }

        /**
         * @param serviceToken For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
         * 
         * @return builder
         * 
         */
        public Builder serviceToken(@Nullable Output<ConnectionASideServiceTokenArgs> serviceToken) {
            $.serviceToken = serviceToken;
            return this;
        }

        /**
         * @param serviceToken For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
         * 
         * @return builder
         * 
         */
        public Builder serviceToken(ConnectionASideServiceTokenArgs serviceToken) {
            return serviceToken(Output.of(serviceToken));
        }

        public ConnectionASideArgs build() {
            return $;
        }
    }

}
