// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.outputs;

import com.equinix.pulumi.metal.outputs.GetDevicesDevice;
import com.equinix.pulumi.metal.outputs.GetDevicesFilter;
import com.equinix.pulumi.metal.outputs.GetDevicesSort;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetDevicesResult {
    /**
     * @return list of resources with attributes like in the equninixMetalDevice datasources.
     * 
     */
    private List<GetDevicesDevice> devices;
    private @Nullable List<GetDevicesFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private @Nullable String organizationId;
    private @Nullable String projectId;
    private @Nullable String search;
    private @Nullable List<GetDevicesSort> sorts;

    private GetDevicesResult() {}
    /**
     * @return list of resources with attributes like in the equninixMetalDevice datasources.
     * 
     */
    public List<GetDevicesDevice> devices() {
        return this.devices;
    }
    public List<GetDevicesFilter> filters() {
        return this.filters == null ? List.of() : this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }
    public List<GetDevicesSort> sorts() {
        return this.sorts == null ? List.of() : this.sorts;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetDevicesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetDevicesDevice> devices;
        private @Nullable List<GetDevicesFilter> filters;
        private String id;
        private @Nullable String organizationId;
        private @Nullable String projectId;
        private @Nullable String search;
        private @Nullable List<GetDevicesSort> sorts;
        public Builder() {}
        public Builder(GetDevicesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.devices = defaults.devices;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.organizationId = defaults.organizationId;
    	      this.projectId = defaults.projectId;
    	      this.search = defaults.search;
    	      this.sorts = defaults.sorts;
        }

        @CustomType.Setter
        public Builder devices(List<GetDevicesDevice> devices) {
            if (devices == null) {
              throw new MissingRequiredPropertyException("GetDevicesResult", "devices");
            }
            this.devices = devices;
            return this;
        }
        public Builder devices(GetDevicesDevice... devices) {
            return devices(List.of(devices));
        }
        @CustomType.Setter
        public Builder filters(@Nullable List<GetDevicesFilter> filters) {

            this.filters = filters;
            return this;
        }
        public Builder filters(GetDevicesFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetDevicesResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder organizationId(@Nullable String organizationId) {

            this.organizationId = organizationId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder search(@Nullable String search) {

            this.search = search;
            return this;
        }
        @CustomType.Setter
        public Builder sorts(@Nullable List<GetDevicesSort> sorts) {

            this.sorts = sorts;
            return this;
        }
        public Builder sorts(GetDevicesSort... sorts) {
            return sorts(List.of(sorts));
        }
        public GetDevicesResult build() {
            final var _resultValue = new GetDevicesResult();
            _resultValue.devices = devices;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.organizationId = organizationId;
            _resultValue.projectId = projectId;
            _resultValue.search = search;
            _resultValue.sorts = sorts;
            return _resultValue;
        }
    }
}
