// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetProjectSshKeyArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetProjectSshKeyArgs Empty = new GetProjectSshKeyArgs();

    /**
     * The id of the SSH Key to search for in the Equinix Metal project.
     * 
     */
    @Import(name="id")
    private @Nullable Output<String> id;

    /**
     * @return The id of the SSH Key to search for in the Equinix Metal project.
     * 
     */
    public Optional<Output<String>> id() {
        return Optional.ofNullable(this.id);
    }

    /**
     * The Equinix Metal project id of the Equinix Metal SSH Key.
     * 
     * &gt; **NOTE:** One of either `search` or `id` must be provided along with `projectId`.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The Equinix Metal project id of the Equinix Metal SSH Key.
     * 
     * &gt; **NOTE:** One of either `search` or `id` must be provided along with `projectId`.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * The name, fingerprint, or publicKey of the SSH Key to search for in the Equinix Metal project.
     * 
     */
    @Import(name="search")
    private @Nullable Output<String> search;

    /**
     * @return The name, fingerprint, or publicKey of the SSH Key to search for in the Equinix Metal project.
     * 
     */
    public Optional<Output<String>> search() {
        return Optional.ofNullable(this.search);
    }

    private GetProjectSshKeyArgs() {}

    private GetProjectSshKeyArgs(GetProjectSshKeyArgs $) {
        this.id = $.id;
        this.projectId = $.projectId;
        this.search = $.search;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetProjectSshKeyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetProjectSshKeyArgs $;

        public Builder() {
            $ = new GetProjectSshKeyArgs();
        }

        public Builder(GetProjectSshKeyArgs defaults) {
            $ = new GetProjectSshKeyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param id The id of the SSH Key to search for in the Equinix Metal project.
         * 
         * @return builder
         * 
         */
        public Builder id(@Nullable Output<String> id) {
            $.id = id;
            return this;
        }

        /**
         * @param id The id of the SSH Key to search for in the Equinix Metal project.
         * 
         * @return builder
         * 
         */
        public Builder id(String id) {
            return id(Output.of(id));
        }

        /**
         * @param projectId The Equinix Metal project id of the Equinix Metal SSH Key.
         * 
         * &gt; **NOTE:** One of either `search` or `id` must be provided along with `projectId`.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The Equinix Metal project id of the Equinix Metal SSH Key.
         * 
         * &gt; **NOTE:** One of either `search` or `id` must be provided along with `projectId`.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param search The name, fingerprint, or publicKey of the SSH Key to search for in the Equinix Metal project.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable Output<String> search) {
            $.search = search;
            return this;
        }

        /**
         * @param search The name, fingerprint, or publicKey of the SSH Key to search for in the Equinix Metal project.
         * 
         * @return builder
         * 
         */
        public Builder search(String search) {
            return search(Output.of(search));
        }

        public GetProjectSshKeyArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetProjectSshKeyArgs", "projectId");
            }
            return $;
        }
    }

}
