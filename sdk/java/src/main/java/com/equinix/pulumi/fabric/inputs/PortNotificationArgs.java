// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;


public final class PortNotificationArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortNotificationArgs Empty = new PortNotificationArgs();

    /**
     * Array of registered users that will receive this notification type on the port
     * 
     */
    @Import(name="registeredUsers", required=true)
    private Output<List<String>> registeredUsers;

    /**
     * @return Array of registered users that will receive this notification type on the port
     * 
     */
    public Output<List<String>> registeredUsers() {
        return this.registeredUsers;
    }

    /**
     * Notification Type
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Notification Type
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PortNotificationArgs() {}

    private PortNotificationArgs(PortNotificationArgs $) {
        this.registeredUsers = $.registeredUsers;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortNotificationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortNotificationArgs $;

        public Builder() {
            $ = new PortNotificationArgs();
        }

        public Builder(PortNotificationArgs defaults) {
            $ = new PortNotificationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param registeredUsers Array of registered users that will receive this notification type on the port
         * 
         * @return builder
         * 
         */
        public Builder registeredUsers(Output<List<String>> registeredUsers) {
            $.registeredUsers = registeredUsers;
            return this;
        }

        /**
         * @param registeredUsers Array of registered users that will receive this notification type on the port
         * 
         * @return builder
         * 
         */
        public Builder registeredUsers(List<String> registeredUsers) {
            return registeredUsers(Output.of(registeredUsers));
        }

        /**
         * @param registeredUsers Array of registered users that will receive this notification type on the port
         * 
         * @return builder
         * 
         */
        public Builder registeredUsers(String... registeredUsers) {
            return registeredUsers(List.of(registeredUsers));
        }

        /**
         * @param type Notification Type
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Notification Type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PortNotificationArgs build() {
            if ($.registeredUsers == null) {
                throw new MissingRequiredPropertyException("PortNotificationArgs", "registeredUsers");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("PortNotificationArgs", "type");
            }
            return $;
        }
    }

}
