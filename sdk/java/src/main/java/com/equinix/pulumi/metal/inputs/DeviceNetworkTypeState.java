// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceNetworkTypeState extends com.pulumi.resources.ResourceArgs {

    public static final DeviceNetworkTypeState Empty = new DeviceNetworkTypeState();

    /**
     * The ID of the device on which the network type should be set.
     * 
     */
    @Import(name="deviceId")
    private @Nullable Output<String> deviceId;

    /**
     * @return The ID of the device on which the network type should be set.
     * 
     */
    public Optional<Output<String>> deviceId() {
        return Optional.ofNullable(this.deviceId);
    }

    /**
     * Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual` and `layer2-bonded`.
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual` and `layer2-bonded`.
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private DeviceNetworkTypeState() {}

    private DeviceNetworkTypeState(DeviceNetworkTypeState $) {
        this.deviceId = $.deviceId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceNetworkTypeState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceNetworkTypeState $;

        public Builder() {
            $ = new DeviceNetworkTypeState();
        }

        public Builder(DeviceNetworkTypeState defaults) {
            $ = new DeviceNetworkTypeState(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceId The ID of the device on which the network type should be set.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(@Nullable Output<String> deviceId) {
            $.deviceId = deviceId;
            return this;
        }

        /**
         * @param deviceId The ID of the device on which the network type should be set.
         * 
         * @return builder
         * 
         */
        public Builder deviceId(String deviceId) {
            return deviceId(Output.of(deviceId));
        }

        /**
         * @param type Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual` and `layer2-bonded`.
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Network type to set. Must be one of `layer3`, `hybrid`, `hybrid-bonded`, `layer2-individual` and `layer2-bonded`.
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public DeviceNetworkTypeState build() {
            return $;
        }
    }

}
