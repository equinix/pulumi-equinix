// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric;

import com.equinix.pulumi.Utilities;
import com.equinix.pulumi.fabric.RouteAggregationRuleArgs;
import com.equinix.pulumi.fabric.inputs.RouteAggregationRuleState;
import com.equinix.pulumi.fabric.outputs.RouteAggregationRuleChange;
import com.equinix.pulumi.fabric.outputs.RouteAggregationRuleChangeLog;
import com.equinix.pulumi.fabric.outputs.RouteAggregationRuleTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Fabric V4 API compatible resource allows creation and management of Equinix Fabric Route Aggregation
 * 
 * Additional Documentation:
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.equinix.fabric.RouteAggregationRule;
 * import com.pulumi.equinix.fabric.RouteAggregationRuleArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var raRule = new RouteAggregationRule("raRule", RouteAggregationRuleArgs.builder()
 *             .routeAggregationId("<route_aggregation_id>")
 *             .description("Route aggregation rule")
 *             .prefix("192.168.0.0/24")
 *             .build());
 * 
 *         ctx.export("routeAggregationRuleName", raRule.name());
 *         ctx.export("routeAggregationRuleDescription", raRule.description());
 *         ctx.export("routeAggregationRuleType", raRule.type());
 *         ctx.export("routeAggregationRulePrefix", raRule.prefix());
 *         ctx.export("routeAggregationRuleState", raRule.state());
 *     }
 * }
 * }
 * </pre>
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 */
@ResourceType(type="equinix:fabric/routeAggregationRule:RouteAggregationRule")
public class RouteAggregationRule extends com.pulumi.resources.CustomResource {
    /**
     * Current state of latest route aggregation rule change
     * 
     */
    @Export(name="change", refs={RouteAggregationRuleChange.class}, tree="[0]")
    private Output<RouteAggregationRuleChange> change;

    /**
     * @return Current state of latest route aggregation rule change
     * 
     */
    public Output<RouteAggregationRuleChange> change() {
        return this.change;
    }
    /**
     * Details of the last change on the stream resource
     * 
     */
    @Export(name="changeLog", refs={RouteAggregationRuleChangeLog.class}, tree="[0]")
    private Output<RouteAggregationRuleChangeLog> changeLog;

    /**
     * @return Details of the last change on the stream resource
     * 
     */
    public Output<RouteAggregationRuleChangeLog> changeLog() {
        return this.changeLog;
    }
    /**
     * Customer-provided route aggregation rule description
     * 
     */
    @Export(name="description", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> description;

    /**
     * @return Customer-provided route aggregation rule description
     * 
     */
    public Output<Optional<String>> description() {
        return Codegen.optional(this.description);
    }
    /**
     * Equinix auto generated URI to the route aggregation rule resource
     * 
     */
    @Export(name="href", refs={String.class}, tree="[0]")
    private Output<String> href;

    /**
     * @return Equinix auto generated URI to the route aggregation rule resource
     * 
     */
    public Output<String> href() {
        return this.href;
    }
    /**
     * Customer provided name of the route aggregation rule
     * 
     */
    @Export(name="name", refs={String.class}, tree="[0]")
    private Output<String> name;

    /**
     * @return Customer provided name of the route aggregation rule
     * 
     */
    public Output<String> name() {
        return this.name;
    }
    /**
     * Customer-provided route aggregation rule prefix
     * 
     */
    @Export(name="prefix", refs={String.class}, tree="[0]")
    private Output<String> prefix;

    /**
     * @return Customer-provided route aggregation rule prefix
     * 
     */
    public Output<String> prefix() {
        return this.prefix;
    }
    /**
     * UUID of the Route Aggregation to apply this Rule to
     * 
     */
    @Export(name="routeAggregationId", refs={String.class}, tree="[0]")
    private Output<String> routeAggregationId;

    /**
     * @return UUID of the Route Aggregation to apply this Rule to
     * 
     */
    public Output<String> routeAggregationId() {
        return this.routeAggregationId;
    }
    /**
     * Value representing provisioning status for the route aggregation rule resource
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return Value representing provisioning status for the route aggregation rule resource
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    @Export(name="timeouts", refs={RouteAggregationRuleTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ RouteAggregationRuleTimeouts> timeouts;

    public Output<Optional<RouteAggregationRuleTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Equinix-assigned unique id for the route aggregation rule resource
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return Equinix-assigned unique id for the route aggregation rule resource
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public RouteAggregationRule(java.lang.String name) {
        this(name, RouteAggregationRuleArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public RouteAggregationRule(java.lang.String name, RouteAggregationRuleArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public RouteAggregationRule(java.lang.String name, RouteAggregationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:fabric/routeAggregationRule:RouteAggregationRule", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private RouteAggregationRule(java.lang.String name, Output<java.lang.String> id, @Nullable RouteAggregationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:fabric/routeAggregationRule:RouteAggregationRule", name, state, makeResourceOptions(options, id), false);
    }

    private static RouteAggregationRuleArgs makeArgs(RouteAggregationRuleArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? RouteAggregationRuleArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/equinix")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static RouteAggregationRule get(java.lang.String name, Output<java.lang.String> id, @Nullable RouteAggregationRuleState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new RouteAggregationRule(name, id, state, options);
    }
}
