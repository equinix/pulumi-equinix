// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetPlansSortArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetPlansSortArgs Empty = new GetPlansSortArgs();

    /**
     * The attribute used to sort the results. Sort attributes are case-sensitive
     * 
     */
    @Import(name="attribute", required=true)
    private Output<String> attribute;

    /**
     * @return The attribute used to sort the results. Sort attributes are case-sensitive
     * 
     */
    public Output<String> attribute() {
        return this.attribute;
    }

    /**
     * Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
     * 
     */
    @Import(name="direction")
    private @Nullable Output<String> direction;

    /**
     * @return Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
     * 
     */
    public Optional<Output<String>> direction() {
        return Optional.ofNullable(this.direction);
    }

    private GetPlansSortArgs() {}

    private GetPlansSortArgs(GetPlansSortArgs $) {
        this.attribute = $.attribute;
        this.direction = $.direction;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPlansSortArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPlansSortArgs $;

        public Builder() {
            $ = new GetPlansSortArgs();
        }

        public Builder(GetPlansSortArgs defaults) {
            $ = new GetPlansSortArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attribute The attribute used to sort the results. Sort attributes are case-sensitive
         * 
         * @return builder
         * 
         */
        public Builder attribute(Output<String> attribute) {
            $.attribute = attribute;
            return this;
        }

        /**
         * @param attribute The attribute used to sort the results. Sort attributes are case-sensitive
         * 
         * @return builder
         * 
         */
        public Builder attribute(String attribute) {
            return attribute(Output.of(attribute));
        }

        /**
         * @param direction Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
         * 
         * @return builder
         * 
         */
        public Builder direction(@Nullable Output<String> direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param direction Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            return direction(Output.of(direction));
        }

        public GetPlansSortArgs build() {
            $.attribute = Objects.requireNonNull($.attribute, "expected parameter 'attribute' to be non-null");
            return $;
        }
    }

}
