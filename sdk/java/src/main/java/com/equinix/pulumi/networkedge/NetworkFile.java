// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge;

import com.equinix.pulumi.Utilities;
import com.equinix.pulumi.networkedge.NetworkFileArgs;
import com.equinix.pulumi.networkedge.inputs.NetworkFileState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Resource `equinix.networkedge.NetworkFile` allows creation and management of Equinix Network Edge files.
 * 
 * ## Example Usage
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.equinix.pulumi.networkedge.NetworkFile;
 * import com.equinix.pulumi.networkedge.NetworkFileArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.IOException;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         final var config = ctx.config();
 *         final var metro = config.get(&#34;metro&#34;).orElse(&#34;SV&#34;);
 * 
 *         String content = null;
 *         try {
 *             content = Files.readString(Paths.get(&#34;./../assets/aviatrix-cloud-init.txt&#34;));
 *         } catch (IOException e) {
 *             e.printStackTrace();
 *         }
 * 
 *         var networkFile = new NetworkFile(&#34;networkFile&#34;, NetworkFileArgs.builder()        
 *             .fileName(&#34;Aviatrix-ZTP-file&#34;)
 *             .content(content)
 *             .metroCode(metro)
 *             .deviceTypeCode(&#34;AVIATRIX_EDGE&#34;)
 *             .processType(&#34;CLOUD_INIT&#34;)
 *             .selfManaged(true)
 *             .byol(true)
 *             .build());
 * 
 *         ctx.export(&#34;networkFileId&#34;, networkFile.id());
 *         ctx.export(&#34;networkFileStatus&#34;, networkFile.status());
 *     }
 * }
 * ```
 * 
 * ## Import
 * 
 * This resource can be imported using an existing ID:
 * 
 * ```sh
 * $ pulumi import equinix:networkedge/networkFile:NetworkFile example {existing_id}
 * ```
 * 
 * The `content`, `self_managed` and `byol` fields can not be imported.
 * 
 */
@ResourceType(type="equinix:networkedge/networkFile:NetworkFile")
public class NetworkFile extends com.pulumi.resources.CustomResource {
    /**
     * Boolean value that determines device licensing mode, i.e.,
     * `bring your own license` or `subscription`.
     * 
     */
    @Export(name="byol", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> byol;

    /**
     * @return Boolean value that determines device licensing mode, i.e.,
     * `bring your own license` or `subscription`.
     * 
     */
    public Output<Boolean> byol() {
        return this.byol;
    }
    /**
     * Uploaded file content, expected to be a UTF-8 encoded string.
     * 
     */
    @Export(name="content", refs={String.class}, tree="[0]")
    private Output<String> content;

    /**
     * @return Uploaded file content, expected to be a UTF-8 encoded string.
     * 
     */
    public Output<String> content() {
        return this.content;
    }
    /**
     * Device type code
     * 
     */
    @Export(name="deviceTypeCode", refs={String.class}, tree="[0]")
    private Output<String> deviceTypeCode;

    /**
     * @return Device type code
     * 
     */
    public Output<String> deviceTypeCode() {
        return this.deviceTypeCode;
    }
    /**
     * File name.
     * 
     */
    @Export(name="fileName", refs={String.class}, tree="[0]")
    private Output<String> fileName;

    /**
     * @return File name.
     * 
     */
    public Output<String> fileName() {
        return this.fileName;
    }
    /**
     * File upload location metro code. It should match the device location metro code.
     * 
     */
    @Export(name="metroCode", refs={String.class}, tree="[0]")
    private Output<String> metroCode;

    /**
     * @return File upload location metro code. It should match the device location metro code.
     * 
     */
    public Output<String> metroCode() {
        return this.metroCode;
    }
    /**
     * File process type (LICENSE or CLOUD_INIT).
     * 
     */
    @Export(name="processType", refs={String.class}, tree="[0]")
    private Output<String> processType;

    /**
     * @return File process type (LICENSE or CLOUD_INIT).
     * 
     */
    public Output<String> processType() {
        return this.processType;
    }
    /**
     * Boolean value that determines device management mode, i.e.,
     * `self-managed` or `Equinix-managed`.
     * 
     */
    @Export(name="selfManaged", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> selfManaged;

    /**
     * @return Boolean value that determines device management mode, i.e.,
     * `self-managed` or `Equinix-managed`.
     * 
     */
    public Output<Boolean> selfManaged() {
        return this.selfManaged;
    }
    /**
     * File upload status.
     * 
     */
    @Export(name="status", refs={String.class}, tree="[0]")
    private Output<String> status;

    /**
     * @return File upload status.
     * 
     */
    public Output<String> status() {
        return this.status;
    }
    /**
     * Unique identifier of file resource.
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return Unique identifier of file resource.
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public NetworkFile(String name) {
        this(name, NetworkFileArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public NetworkFile(String name, NetworkFileArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public NetworkFile(String name, NetworkFileArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:networkedge/networkFile:NetworkFile", name, args == null ? NetworkFileArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private NetworkFile(String name, Output<String> id, @Nullable NetworkFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:networkedge/networkFile:NetworkFile", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .additionalSecretOutputs(List.of(
                "content"
            ))
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static NetworkFile get(String name, Output<String> id, @Nullable NetworkFileState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new NetworkFile(name, id, state, options);
    }
}
