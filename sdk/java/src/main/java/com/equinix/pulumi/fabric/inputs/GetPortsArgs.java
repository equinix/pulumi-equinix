// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetPortsFilterArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.Objects;


public final class GetPortsArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetPortsArgs Empty = new GetPortsArgs();

    /**
     * name
     * 
     */
    @Import(name="filter", required=true)
    private Output<GetPortsFilterArgs> filter;

    /**
     * @return name
     * 
     */
    public Output<GetPortsFilterArgs> filter() {
        return this.filter;
    }

    private GetPortsArgs() {}

    private GetPortsArgs(GetPortsArgs $) {
        this.filter = $.filter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetPortsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetPortsArgs $;

        public Builder() {
            $ = new GetPortsArgs();
        }

        public Builder(GetPortsArgs defaults) {
            $ = new GetPortsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filter name
         * 
         * @return builder
         * 
         */
        public Builder filter(Output<GetPortsFilterArgs> filter) {
            $.filter = filter;
            return this;
        }

        /**
         * @param filter name
         * 
         * @return builder
         * 
         */
        public Builder filter(GetPortsFilterArgs filter) {
            return filter(Output.of(filter));
        }

        public GetPortsArgs build() {
            if ($.filter == null) {
                throw new MissingRequiredPropertyException("GetPortsArgs", "filter");
            }
            return $;
        }
    }

}
