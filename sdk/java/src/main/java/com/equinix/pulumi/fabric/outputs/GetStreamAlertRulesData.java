// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetStreamAlertRulesDataChangeLog;
import com.equinix.pulumi.fabric.outputs.GetStreamAlertRulesDataDetectionMethod;
import com.equinix.pulumi.fabric.outputs.GetStreamAlertRulesDataMetricSelector;
import com.equinix.pulumi.fabric.outputs.GetStreamAlertRulesDataResourceSelector;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamAlertRulesData {
    /**
     * @return Details of the last change on the stream resource
     * 
     */
    private GetStreamAlertRulesDataChangeLog changeLog;
    /**
     * @return Customer-provided stream alert rule description
     * 
     */
    private String description;
    /**
     * @return Detection method for stream alert rule
     * 
     */
    private GetStreamAlertRulesDataDetectionMethod detectionMethod;
    /**
     * @return Stream subscription enabled status
     * 
     */
    private Boolean enabled;
    /**
     * @return Equinix assigned URI of the stream alert rule resource
     * 
     */
    private String href;
    /**
     * @return Metric selector for the stream alert rule
     * 
     */
    private GetStreamAlertRulesDataMetricSelector metricSelector;
    /**
     * @return Customer-provided stream alert rule name
     * 
     */
    private String name;
    /**
     * @return Lists of metrics to be included/excluded on the stream alert rule
     * 
     */
    private GetStreamAlertRulesDataResourceSelector resourceSelector;
    /**
     * @return Value representing provisioning status for the stream resource
     * 
     */
    private String state;
    /**
     * @return Type of the stream alert rule
     * 
     */
    private String type;
    /**
     * @return Equinix assigned unique identifier of the stream subscription resource
     * 
     */
    private String uuid;

    private GetStreamAlertRulesData() {}
    /**
     * @return Details of the last change on the stream resource
     * 
     */
    public GetStreamAlertRulesDataChangeLog changeLog() {
        return this.changeLog;
    }
    /**
     * @return Customer-provided stream alert rule description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Detection method for stream alert rule
     * 
     */
    public GetStreamAlertRulesDataDetectionMethod detectionMethod() {
        return this.detectionMethod;
    }
    /**
     * @return Stream subscription enabled status
     * 
     */
    public Boolean enabled() {
        return this.enabled;
    }
    /**
     * @return Equinix assigned URI of the stream alert rule resource
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return Metric selector for the stream alert rule
     * 
     */
    public GetStreamAlertRulesDataMetricSelector metricSelector() {
        return this.metricSelector;
    }
    /**
     * @return Customer-provided stream alert rule name
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Lists of metrics to be included/excluded on the stream alert rule
     * 
     */
    public GetStreamAlertRulesDataResourceSelector resourceSelector() {
        return this.resourceSelector;
    }
    /**
     * @return Value representing provisioning status for the stream resource
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Type of the stream alert rule
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Equinix assigned unique identifier of the stream subscription resource
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamAlertRulesData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private GetStreamAlertRulesDataChangeLog changeLog;
        private String description;
        private GetStreamAlertRulesDataDetectionMethod detectionMethod;
        private Boolean enabled;
        private String href;
        private GetStreamAlertRulesDataMetricSelector metricSelector;
        private String name;
        private GetStreamAlertRulesDataResourceSelector resourceSelector;
        private String state;
        private String type;
        private String uuid;
        public Builder() {}
        public Builder(GetStreamAlertRulesData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.changeLog = defaults.changeLog;
    	      this.description = defaults.description;
    	      this.detectionMethod = defaults.detectionMethod;
    	      this.enabled = defaults.enabled;
    	      this.href = defaults.href;
    	      this.metricSelector = defaults.metricSelector;
    	      this.name = defaults.name;
    	      this.resourceSelector = defaults.resourceSelector;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder changeLog(GetStreamAlertRulesDataChangeLog changeLog) {
            if (changeLog == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "changeLog");
            }
            this.changeLog = changeLog;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder detectionMethod(GetStreamAlertRulesDataDetectionMethod detectionMethod) {
            if (detectionMethod == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "detectionMethod");
            }
            this.detectionMethod = detectionMethod;
            return this;
        }
        @CustomType.Setter
        public Builder enabled(Boolean enabled) {
            if (enabled == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "enabled");
            }
            this.enabled = enabled;
            return this;
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder metricSelector(GetStreamAlertRulesDataMetricSelector metricSelector) {
            if (metricSelector == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "metricSelector");
            }
            this.metricSelector = metricSelector;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder resourceSelector(GetStreamAlertRulesDataResourceSelector resourceSelector) {
            if (resourceSelector == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "resourceSelector");
            }
            this.resourceSelector = resourceSelector;
            return this;
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetStreamAlertRulesData", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetStreamAlertRulesData build() {
            final var _resultValue = new GetStreamAlertRulesData();
            _resultValue.changeLog = changeLog;
            _resultValue.description = description;
            _resultValue.detectionMethod = detectionMethod;
            _resultValue.enabled = enabled;
            _resultValue.href = href;
            _resultValue.metricSelector = metricSelector;
            _resultValue.name = name;
            _resultValue.resourceSelector = resourceSelector;
            _resultValue.state = state;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
