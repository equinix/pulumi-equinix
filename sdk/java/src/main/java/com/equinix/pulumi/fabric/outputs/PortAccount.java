// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PortAccount {
    /**
     * @return Legal name of the accountholder.
     * 
     */
    private @Nullable String accountName;
    /**
     * @return Account number the port will be created for
     * 
     */
    private Integer accountNumber;
    /**
     * @return Enterprise datastore id
     * 
     */
    private @Nullable String ucmId;

    private PortAccount() {}
    /**
     * @return Legal name of the accountholder.
     * 
     */
    public Optional<String> accountName() {
        return Optional.ofNullable(this.accountName);
    }
    /**
     * @return Account number the port will be created for
     * 
     */
    public Integer accountNumber() {
        return this.accountNumber;
    }
    /**
     * @return Enterprise datastore id
     * 
     */
    public Optional<String> ucmId() {
        return Optional.ofNullable(this.ucmId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortAccount defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String accountName;
        private Integer accountNumber;
        private @Nullable String ucmId;
        public Builder() {}
        public Builder(PortAccount defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accountName = defaults.accountName;
    	      this.accountNumber = defaults.accountNumber;
    	      this.ucmId = defaults.ucmId;
        }

        @CustomType.Setter
        public Builder accountName(@Nullable String accountName) {

            this.accountName = accountName;
            return this;
        }
        @CustomType.Setter
        public Builder accountNumber(Integer accountNumber) {
            if (accountNumber == null) {
              throw new MissingRequiredPropertyException("PortAccount", "accountNumber");
            }
            this.accountNumber = accountNumber;
            return this;
        }
        @CustomType.Setter
        public Builder ucmId(@Nullable String ucmId) {

            this.ucmId = ucmId;
            return this;
        }
        public PortAccount build() {
            final var _resultValue = new PortAccount();
            _resultValue.accountName = accountName;
            _resultValue.accountNumber = accountNumber;
            _resultValue.ucmId = ucmId;
            return _resultValue;
        }
    }
}
