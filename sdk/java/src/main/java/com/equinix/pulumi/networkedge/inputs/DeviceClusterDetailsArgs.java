// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge.inputs;

import com.equinix.pulumi.networkedge.inputs.DeviceClusterDetailsNode0Args;
import com.equinix.pulumi.networkedge.inputs.DeviceClusterDetailsNode1Args;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceClusterDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceClusterDetailsArgs Empty = new DeviceClusterDetailsArgs();

    /**
     * The ID of the cluster.
     * 
     */
    @Import(name="clusterId")
    private @Nullable Output<String> clusterId;

    /**
     * @return The ID of the cluster.
     * 
     */
    public Optional<Output<String>> clusterId() {
        return Optional.ofNullable(this.clusterId);
    }

    /**
     * The name of the cluster device
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the cluster device
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * An object that has `node0` configuration. See Cluster Details - Nodes below for more details.
     * 
     */
    @Import(name="node0", required=true)
    private Output<DeviceClusterDetailsNode0Args> node0;

    /**
     * @return An object that has `node0` configuration. See Cluster Details - Nodes below for more details.
     * 
     */
    public Output<DeviceClusterDetailsNode0Args> node0() {
        return this.node0;
    }

    /**
     * An object that has `node1` configuration. See Cluster Details - Nodes below for more details.
     * 
     */
    @Import(name="node1", required=true)
    private Output<DeviceClusterDetailsNode1Args> node1;

    /**
     * @return An object that has `node1` configuration. See Cluster Details - Nodes below for more details.
     * 
     */
    public Output<DeviceClusterDetailsNode1Args> node1() {
        return this.node1;
    }

    /**
     * The number of nodes in the cluster.
     * 
     */
    @Import(name="numOfNodes")
    private @Nullable Output<Integer> numOfNodes;

    /**
     * @return The number of nodes in the cluster.
     * 
     */
    public Optional<Output<Integer>> numOfNodes() {
        return Optional.ofNullable(this.numOfNodes);
    }

    private DeviceClusterDetailsArgs() {}

    private DeviceClusterDetailsArgs(DeviceClusterDetailsArgs $) {
        this.clusterId = $.clusterId;
        this.clusterName = $.clusterName;
        this.node0 = $.node0;
        this.node1 = $.node1;
        this.numOfNodes = $.numOfNodes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceClusterDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceClusterDetailsArgs $;

        public Builder() {
            $ = new DeviceClusterDetailsArgs();
        }

        public Builder(DeviceClusterDetailsArgs defaults) {
            $ = new DeviceClusterDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clusterId The ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(@Nullable Output<String> clusterId) {
            $.clusterId = clusterId;
            return this;
        }

        /**
         * @param clusterId The ID of the cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterId(String clusterId) {
            return clusterId(Output.of(clusterId));
        }

        /**
         * @param clusterName The name of the cluster device
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the cluster device
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param node0 An object that has `node0` configuration. See Cluster Details - Nodes below for more details.
         * 
         * @return builder
         * 
         */
        public Builder node0(Output<DeviceClusterDetailsNode0Args> node0) {
            $.node0 = node0;
            return this;
        }

        /**
         * @param node0 An object that has `node0` configuration. See Cluster Details - Nodes below for more details.
         * 
         * @return builder
         * 
         */
        public Builder node0(DeviceClusterDetailsNode0Args node0) {
            return node0(Output.of(node0));
        }

        /**
         * @param node1 An object that has `node1` configuration. See Cluster Details - Nodes below for more details.
         * 
         * @return builder
         * 
         */
        public Builder node1(Output<DeviceClusterDetailsNode1Args> node1) {
            $.node1 = node1;
            return this;
        }

        /**
         * @param node1 An object that has `node1` configuration. See Cluster Details - Nodes below for more details.
         * 
         * @return builder
         * 
         */
        public Builder node1(DeviceClusterDetailsNode1Args node1) {
            return node1(Output.of(node1));
        }

        /**
         * @param numOfNodes The number of nodes in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder numOfNodes(@Nullable Output<Integer> numOfNodes) {
            $.numOfNodes = numOfNodes;
            return this;
        }

        /**
         * @param numOfNodes The number of nodes in the cluster.
         * 
         * @return builder
         * 
         */
        public Builder numOfNodes(Integer numOfNodes) {
            return numOfNodes(Output.of(numOfNodes));
        }

        public DeviceClusterDetailsArgs build() {
            $.clusterName = Objects.requireNonNull($.clusterName, "expected parameter 'clusterName' to be non-null");
            $.node0 = Objects.requireNonNull($.node0, "expected parameter 'node0' to be non-null");
            $.node1 = Objects.requireNonNull($.node1, "expected parameter 'node1' to be non-null");
            return $;
        }
    }

}
