// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetCloudRouterAccount;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterChangeLog;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterLocation;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterMarketplaceSubscription;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterNotification;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterOrder;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterPackage;
import com.equinix.pulumi.fabric.outputs.GetCloudRouterProject;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudRouterResult {
    /**
     * @return Customer account information that is associated with this Fabric Cloud Router
     * 
     */
    private List<GetCloudRouterAccount> accounts;
    /**
     * @return Number of IPv4 BGP routes in use (including non-distinct prefixes)
     * 
     */
    private Integer bgpIpv4RoutesCount;
    /**
     * @return Number of IPv6 BGP routes in use (including non-distinct prefixes)
     * 
     */
    private Integer bgpIpv6RoutesCount;
    /**
     * @return Captures Fabric Cloud Router lifecycle change information
     * 
     */
    private List<GetCloudRouterChangeLog> changeLogs;
    /**
     * @return Number of connections associated with this Fabric Cloud Router instance
     * 
     */
    private Integer connectionsCount;
    /**
     * @return Customer-provided Fabric Cloud Router description
     * 
     */
    private String description;
    /**
     * @return Number of distinct IPv4 routes
     * 
     */
    private Integer distinctIpv4PrefixesCount;
    /**
     * @return Number of distinct IPv6 routes
     * 
     */
    private Integer distinctIpv6PrefixesCount;
    /**
     * @return Equinix ASN
     * 
     */
    private Integer equinixAsn;
    /**
     * @return Fabric Cloud Router URI information
     * 
     */
    private String href;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Fabric Cloud Router location
     * 
     */
    private List<GetCloudRouterLocation> locations;
    /**
     * @return Equinix Fabric Entity for Marketplace Subscription
     * 
     */
    private List<GetCloudRouterMarketplaceSubscription> marketplaceSubscriptions;
    /**
     * @return Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    private String name;
    /**
     * @return Preferences for notifications on Fabric Cloud Router configuration or status changes
     * 
     */
    private List<GetCloudRouterNotification> notifications;
    /**
     * @return Order information related to this Fabric Cloud Router
     * 
     */
    private List<GetCloudRouterOrder> orders;
    /**
     * @return Fabric Cloud Router Package Type
     * 
     */
    private List<GetCloudRouterPackage> packages;
    /**
     * @return Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     * 
     */
    private List<GetCloudRouterProject> projects;
    /**
     * @return Fabric Cloud Router overall state
     * 
     */
    private String state;
    /**
     * @return Defines the FCR type like; XF_ROUTER
     * 
     */
    private String type;
    /**
     * @return Equinix-assigned Fabric Cloud Router identifier
     * 
     */
    private String uuid;

    private GetCloudRouterResult() {}
    /**
     * @return Customer account information that is associated with this Fabric Cloud Router
     * 
     */
    public List<GetCloudRouterAccount> accounts() {
        return this.accounts;
    }
    /**
     * @return Number of IPv4 BGP routes in use (including non-distinct prefixes)
     * 
     */
    public Integer bgpIpv4RoutesCount() {
        return this.bgpIpv4RoutesCount;
    }
    /**
     * @return Number of IPv6 BGP routes in use (including non-distinct prefixes)
     * 
     */
    public Integer bgpIpv6RoutesCount() {
        return this.bgpIpv6RoutesCount;
    }
    /**
     * @return Captures Fabric Cloud Router lifecycle change information
     * 
     */
    public List<GetCloudRouterChangeLog> changeLogs() {
        return this.changeLogs;
    }
    /**
     * @return Number of connections associated with this Fabric Cloud Router instance
     * 
     */
    public Integer connectionsCount() {
        return this.connectionsCount;
    }
    /**
     * @return Customer-provided Fabric Cloud Router description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Number of distinct IPv4 routes
     * 
     */
    public Integer distinctIpv4PrefixesCount() {
        return this.distinctIpv4PrefixesCount;
    }
    /**
     * @return Number of distinct IPv6 routes
     * 
     */
    public Integer distinctIpv6PrefixesCount() {
        return this.distinctIpv6PrefixesCount;
    }
    /**
     * @return Equinix ASN
     * 
     */
    public Integer equinixAsn() {
        return this.equinixAsn;
    }
    /**
     * @return Fabric Cloud Router URI information
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Fabric Cloud Router location
     * 
     */
    public List<GetCloudRouterLocation> locations() {
        return this.locations;
    }
    /**
     * @return Equinix Fabric Entity for Marketplace Subscription
     * 
     */
    public List<GetCloudRouterMarketplaceSubscription> marketplaceSubscriptions() {
        return this.marketplaceSubscriptions;
    }
    /**
     * @return Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Preferences for notifications on Fabric Cloud Router configuration or status changes
     * 
     */
    public List<GetCloudRouterNotification> notifications() {
        return this.notifications;
    }
    /**
     * @return Order information related to this Fabric Cloud Router
     * 
     */
    public List<GetCloudRouterOrder> orders() {
        return this.orders;
    }
    /**
     * @return Fabric Cloud Router Package Type
     * 
     */
    public List<GetCloudRouterPackage> packages() {
        return this.packages;
    }
    /**
     * @return Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     * 
     */
    public List<GetCloudRouterProject> projects() {
        return this.projects;
    }
    /**
     * @return Fabric Cloud Router overall state
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Defines the FCR type like; XF_ROUTER
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Equinix-assigned Fabric Cloud Router identifier
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudRouterResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCloudRouterAccount> accounts;
        private Integer bgpIpv4RoutesCount;
        private Integer bgpIpv6RoutesCount;
        private List<GetCloudRouterChangeLog> changeLogs;
        private Integer connectionsCount;
        private String description;
        private Integer distinctIpv4PrefixesCount;
        private Integer distinctIpv6PrefixesCount;
        private Integer equinixAsn;
        private String href;
        private String id;
        private List<GetCloudRouterLocation> locations;
        private List<GetCloudRouterMarketplaceSubscription> marketplaceSubscriptions;
        private String name;
        private List<GetCloudRouterNotification> notifications;
        private List<GetCloudRouterOrder> orders;
        private List<GetCloudRouterPackage> packages;
        private List<GetCloudRouterProject> projects;
        private String state;
        private String type;
        private String uuid;
        public Builder() {}
        public Builder(GetCloudRouterResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accounts = defaults.accounts;
    	      this.bgpIpv4RoutesCount = defaults.bgpIpv4RoutesCount;
    	      this.bgpIpv6RoutesCount = defaults.bgpIpv6RoutesCount;
    	      this.changeLogs = defaults.changeLogs;
    	      this.connectionsCount = defaults.connectionsCount;
    	      this.description = defaults.description;
    	      this.distinctIpv4PrefixesCount = defaults.distinctIpv4PrefixesCount;
    	      this.distinctIpv6PrefixesCount = defaults.distinctIpv6PrefixesCount;
    	      this.equinixAsn = defaults.equinixAsn;
    	      this.href = defaults.href;
    	      this.id = defaults.id;
    	      this.locations = defaults.locations;
    	      this.marketplaceSubscriptions = defaults.marketplaceSubscriptions;
    	      this.name = defaults.name;
    	      this.notifications = defaults.notifications;
    	      this.orders = defaults.orders;
    	      this.packages = defaults.packages;
    	      this.projects = defaults.projects;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder accounts(List<GetCloudRouterAccount> accounts) {
            if (accounts == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "accounts");
            }
            this.accounts = accounts;
            return this;
        }
        public Builder accounts(GetCloudRouterAccount... accounts) {
            return accounts(List.of(accounts));
        }
        @CustomType.Setter
        public Builder bgpIpv4RoutesCount(Integer bgpIpv4RoutesCount) {
            if (bgpIpv4RoutesCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "bgpIpv4RoutesCount");
            }
            this.bgpIpv4RoutesCount = bgpIpv4RoutesCount;
            return this;
        }
        @CustomType.Setter
        public Builder bgpIpv6RoutesCount(Integer bgpIpv6RoutesCount) {
            if (bgpIpv6RoutesCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "bgpIpv6RoutesCount");
            }
            this.bgpIpv6RoutesCount = bgpIpv6RoutesCount;
            return this;
        }
        @CustomType.Setter
        public Builder changeLogs(List<GetCloudRouterChangeLog> changeLogs) {
            if (changeLogs == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "changeLogs");
            }
            this.changeLogs = changeLogs;
            return this;
        }
        public Builder changeLogs(GetCloudRouterChangeLog... changeLogs) {
            return changeLogs(List.of(changeLogs));
        }
        @CustomType.Setter
        public Builder connectionsCount(Integer connectionsCount) {
            if (connectionsCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "connectionsCount");
            }
            this.connectionsCount = connectionsCount;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder distinctIpv4PrefixesCount(Integer distinctIpv4PrefixesCount) {
            if (distinctIpv4PrefixesCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "distinctIpv4PrefixesCount");
            }
            this.distinctIpv4PrefixesCount = distinctIpv4PrefixesCount;
            return this;
        }
        @CustomType.Setter
        public Builder distinctIpv6PrefixesCount(Integer distinctIpv6PrefixesCount) {
            if (distinctIpv6PrefixesCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "distinctIpv6PrefixesCount");
            }
            this.distinctIpv6PrefixesCount = distinctIpv6PrefixesCount;
            return this;
        }
        @CustomType.Setter
        public Builder equinixAsn(Integer equinixAsn) {
            if (equinixAsn == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "equinixAsn");
            }
            this.equinixAsn = equinixAsn;
            return this;
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder locations(List<GetCloudRouterLocation> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(GetCloudRouterLocation... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder marketplaceSubscriptions(List<GetCloudRouterMarketplaceSubscription> marketplaceSubscriptions) {
            if (marketplaceSubscriptions == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "marketplaceSubscriptions");
            }
            this.marketplaceSubscriptions = marketplaceSubscriptions;
            return this;
        }
        public Builder marketplaceSubscriptions(GetCloudRouterMarketplaceSubscription... marketplaceSubscriptions) {
            return marketplaceSubscriptions(List.of(marketplaceSubscriptions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notifications(List<GetCloudRouterNotification> notifications) {
            if (notifications == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "notifications");
            }
            this.notifications = notifications;
            return this;
        }
        public Builder notifications(GetCloudRouterNotification... notifications) {
            return notifications(List.of(notifications));
        }
        @CustomType.Setter
        public Builder orders(List<GetCloudRouterOrder> orders) {
            if (orders == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "orders");
            }
            this.orders = orders;
            return this;
        }
        public Builder orders(GetCloudRouterOrder... orders) {
            return orders(List.of(orders));
        }
        @CustomType.Setter
        public Builder packages(List<GetCloudRouterPackage> packages) {
            if (packages == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "packages");
            }
            this.packages = packages;
            return this;
        }
        public Builder packages(GetCloudRouterPackage... packages) {
            return packages(List.of(packages));
        }
        @CustomType.Setter
        public Builder projects(List<GetCloudRouterProject> projects) {
            if (projects == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "projects");
            }
            this.projects = projects;
            return this;
        }
        public Builder projects(GetCloudRouterProject... projects) {
            return projects(List.of(projects));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetCloudRouterResult", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetCloudRouterResult build() {
            final var _resultValue = new GetCloudRouterResult();
            _resultValue.accounts = accounts;
            _resultValue.bgpIpv4RoutesCount = bgpIpv4RoutesCount;
            _resultValue.bgpIpv6RoutesCount = bgpIpv6RoutesCount;
            _resultValue.changeLogs = changeLogs;
            _resultValue.connectionsCount = connectionsCount;
            _resultValue.description = description;
            _resultValue.distinctIpv4PrefixesCount = distinctIpv4PrefixesCount;
            _resultValue.distinctIpv6PrefixesCount = distinctIpv6PrefixesCount;
            _resultValue.equinixAsn = equinixAsn;
            _resultValue.href = href;
            _resultValue.id = id;
            _resultValue.locations = locations;
            _resultValue.marketplaceSubscriptions = marketplaceSubscriptions;
            _resultValue.name = name;
            _resultValue.notifications = notifications;
            _resultValue.orders = orders;
            _resultValue.packages = packages;
            _resultValue.projects = projects;
            _resultValue.state = state;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
