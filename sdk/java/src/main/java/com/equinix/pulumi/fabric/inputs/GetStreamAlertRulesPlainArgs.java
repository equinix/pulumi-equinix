// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetStreamAlertRulesPagination;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStreamAlertRulesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamAlertRulesPlainArgs Empty = new GetStreamAlertRulesPlainArgs();

    /**
     * Pagination details for the returned stream alert rules list
     * 
     */
    @Import(name="pagination", required=true)
    private GetStreamAlertRulesPagination pagination;

    /**
     * @return Pagination details for the returned stream alert rules list
     * 
     */
    public GetStreamAlertRulesPagination pagination() {
        return this.pagination;
    }

    /**
     * The uuid of the stream that is the target of the stream alert rule
     * 
     */
    @Import(name="streamId", required=true)
    private String streamId;

    /**
     * @return The uuid of the stream that is the target of the stream alert rule
     * 
     */
    public String streamId() {
        return this.streamId;
    }

    private GetStreamAlertRulesPlainArgs() {}

    private GetStreamAlertRulesPlainArgs(GetStreamAlertRulesPlainArgs $) {
        this.pagination = $.pagination;
        this.streamId = $.streamId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamAlertRulesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamAlertRulesPlainArgs $;

        public Builder() {
            $ = new GetStreamAlertRulesPlainArgs();
        }

        public Builder(GetStreamAlertRulesPlainArgs defaults) {
            $ = new GetStreamAlertRulesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pagination Pagination details for the returned stream alert rules list
         * 
         * @return builder
         * 
         */
        public Builder pagination(GetStreamAlertRulesPagination pagination) {
            $.pagination = pagination;
            return this;
        }

        /**
         * @param streamId The uuid of the stream that is the target of the stream alert rule
         * 
         * @return builder
         * 
         */
        public Builder streamId(String streamId) {
            $.streamId = streamId;
            return this;
        }

        public GetStreamAlertRulesPlainArgs build() {
            if ($.pagination == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRulesPlainArgs", "pagination");
            }
            if ($.streamId == null) {
                throw new MissingRequiredPropertyException("GetStreamAlertRulesPlainArgs", "streamId");
            }
            return $;
        }
    }

}
