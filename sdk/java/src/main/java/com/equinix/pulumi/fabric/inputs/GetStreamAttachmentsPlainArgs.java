// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetStreamAttachmentsFilter;
import com.equinix.pulumi.fabric.inputs.GetStreamAttachmentsPagination;
import com.equinix.pulumi.fabric.inputs.GetStreamAttachmentsSort;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetStreamAttachmentsPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamAttachmentsPlainArgs Empty = new GetStreamAttachmentsPlainArgs();

    /**
     * List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetStreamAttachmentsFilter> filters;

    /**
     * @return List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
     * 
     */
    public Optional<List<GetStreamAttachmentsFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * Pagination details for the returned streams list
     * 
     */
    @Import(name="pagination", required=true)
    private GetStreamAttachmentsPagination pagination;

    /**
     * @return Pagination details for the returned streams list
     * 
     */
    public GetStreamAttachmentsPagination pagination() {
        return this.pagination;
    }

    /**
     * The list of sort criteria for the stream assets search request
     * 
     */
    @Import(name="sorts")
    private @Nullable List<GetStreamAttachmentsSort> sorts;

    /**
     * @return The list of sort criteria for the stream assets search request
     * 
     */
    public Optional<List<GetStreamAttachmentsSort>> sorts() {
        return Optional.ofNullable(this.sorts);
    }

    private GetStreamAttachmentsPlainArgs() {}

    private GetStreamAttachmentsPlainArgs(GetStreamAttachmentsPlainArgs $) {
        this.filters = $.filters;
        this.pagination = $.pagination;
        this.sorts = $.sorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamAttachmentsPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamAttachmentsPlainArgs $;

        public Builder() {
            $ = new GetStreamAttachmentsPlainArgs();
        }

        public Builder(GetStreamAttachmentsPlainArgs defaults) {
            $ = new GetStreamAttachmentsPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetStreamAttachmentsFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND&#39;d together with 1 of the 8 being a possible OR group of 3
         * 
         * @return builder
         * 
         */
        public Builder filters(GetStreamAttachmentsFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param pagination Pagination details for the returned streams list
         * 
         * @return builder
         * 
         */
        public Builder pagination(GetStreamAttachmentsPagination pagination) {
            $.pagination = pagination;
            return this;
        }

        /**
         * @param sorts The list of sort criteria for the stream assets search request
         * 
         * @return builder
         * 
         */
        public Builder sorts(@Nullable List<GetStreamAttachmentsSort> sorts) {
            $.sorts = sorts;
            return this;
        }

        /**
         * @param sorts The list of sort criteria for the stream assets search request
         * 
         * @return builder
         * 
         */
        public Builder sorts(GetStreamAttachmentsSort... sorts) {
            return sorts(List.of(sorts));
        }

        public GetStreamAttachmentsPlainArgs build() {
            if ($.pagination == null) {
                throw new MissingRequiredPropertyException("GetStreamAttachmentsPlainArgs", "pagination");
            }
            return $;
        }
    }

}
