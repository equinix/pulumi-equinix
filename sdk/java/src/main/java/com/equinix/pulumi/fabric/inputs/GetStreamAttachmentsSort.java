// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetStreamAttachmentsSort extends com.pulumi.resources.InvokeArgs {

    public static final GetStreamAttachmentsSort Empty = new GetStreamAttachmentsSort();

    /**
     * The sorting direction of the property chosen. ASC or DESC
     * 
     */
    @Import(name="direction", required=true)
    private String direction;

    /**
     * @return The sorting direction of the property chosen. ASC or DESC
     * 
     */
    public String direction() {
        return this.direction;
    }

    /**
     * The field name the sorting is performed on
     * 
     */
    @Import(name="property", required=true)
    private String property;

    /**
     * @return The field name the sorting is performed on
     * 
     */
    public String property() {
        return this.property;
    }

    private GetStreamAttachmentsSort() {}

    private GetStreamAttachmentsSort(GetStreamAttachmentsSort $) {
        this.direction = $.direction;
        this.property = $.property;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetStreamAttachmentsSort defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetStreamAttachmentsSort $;

        public Builder() {
            $ = new GetStreamAttachmentsSort();
        }

        public Builder(GetStreamAttachmentsSort defaults) {
            $ = new GetStreamAttachmentsSort(Objects.requireNonNull(defaults));
        }

        /**
         * @param direction The sorting direction of the property chosen. ASC or DESC
         * 
         * @return builder
         * 
         */
        public Builder direction(String direction) {
            $.direction = direction;
            return this;
        }

        /**
         * @param property The field name the sorting is performed on
         * 
         * @return builder
         * 
         */
        public Builder property(String property) {
            $.property = property;
            return this;
        }

        public GetStreamAttachmentsSort build() {
            if ($.direction == null) {
                throw new MissingRequiredPropertyException("GetStreamAttachmentsSort", "direction");
            }
            if ($.property == null) {
                throw new MissingRequiredPropertyException("GetStreamAttachmentsSort", "property");
            }
            return $;
        }
    }

}
