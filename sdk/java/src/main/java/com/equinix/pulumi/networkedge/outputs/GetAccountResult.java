// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetAccountResult {
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String metroCode;
    private String name;
    /**
     * @return Account unique number.
     * 
     */
    private String number;
    private String projectId;
    private String status;
    /**
     * @return Account unique identifier.
     * 
     */
    private String ucmId;

    private GetAccountResult() {}
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String metroCode() {
        return this.metroCode;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return Account unique number.
     * 
     */
    public String number() {
        return this.number;
    }
    public String projectId() {
        return this.projectId;
    }
    public String status() {
        return this.status;
    }
    /**
     * @return Account unique identifier.
     * 
     */
    public String ucmId() {
        return this.ucmId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetAccountResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String id;
        private String metroCode;
        private String name;
        private String number;
        private String projectId;
        private String status;
        private String ucmId;
        public Builder() {}
        public Builder(GetAccountResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.id = defaults.id;
    	      this.metroCode = defaults.metroCode;
    	      this.name = defaults.name;
    	      this.number = defaults.number;
    	      this.projectId = defaults.projectId;
    	      this.status = defaults.status;
    	      this.ucmId = defaults.ucmId;
        }

        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metroCode(String metroCode) {
            if (metroCode == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "metroCode");
            }
            this.metroCode = metroCode;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder number(String number) {
            if (number == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "number");
            }
            this.number = number;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder ucmId(String ucmId) {
            if (ucmId == null) {
              throw new MissingRequiredPropertyException("GetAccountResult", "ucmId");
            }
            this.ucmId = ucmId;
            return this;
        }
        public GetAccountResult build() {
            final var _resultValue = new GetAccountResult();
            _resultValue.id = id;
            _resultValue.metroCode = metroCode;
            _resultValue.name = name;
            _resultValue.number = number;
            _resultValue.projectId = projectId;
            _resultValue.status = status;
            _resultValue.ucmId = ucmId;
            return _resultValue;
        }
    }
}
