// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetPrecisionTimeServicesDataIpv4 {
    /**
     * @return IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
     * 
     */
    private String defaultGateway;
    /**
     * @return IPv4 address that defines the range of consecutive subnets in the network.
     * 
     */
    private String networkMask;
    /**
     * @return IPv4 address for the Primary Timing Master Server.
     * 
     */
    private String primary;
    /**
     * @return IPv4 address for the Secondary Timing Master Server.
     * 
     */
    private String secondary;

    private GetPrecisionTimeServicesDataIpv4() {}
    /**
     * @return IPv4 address that establishes the Routing Interface where traffic is directed. It serves as the next hop in the Network.
     * 
     */
    public String defaultGateway() {
        return this.defaultGateway;
    }
    /**
     * @return IPv4 address that defines the range of consecutive subnets in the network.
     * 
     */
    public String networkMask() {
        return this.networkMask;
    }
    /**
     * @return IPv4 address for the Primary Timing Master Server.
     * 
     */
    public String primary() {
        return this.primary;
    }
    /**
     * @return IPv4 address for the Secondary Timing Master Server.
     * 
     */
    public String secondary() {
        return this.secondary;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetPrecisionTimeServicesDataIpv4 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String defaultGateway;
        private String networkMask;
        private String primary;
        private String secondary;
        public Builder() {}
        public Builder(GetPrecisionTimeServicesDataIpv4 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.defaultGateway = defaults.defaultGateway;
    	      this.networkMask = defaults.networkMask;
    	      this.primary = defaults.primary;
    	      this.secondary = defaults.secondary;
        }

        @CustomType.Setter
        public Builder defaultGateway(String defaultGateway) {
            if (defaultGateway == null) {
              throw new MissingRequiredPropertyException("GetPrecisionTimeServicesDataIpv4", "defaultGateway");
            }
            this.defaultGateway = defaultGateway;
            return this;
        }
        @CustomType.Setter
        public Builder networkMask(String networkMask) {
            if (networkMask == null) {
              throw new MissingRequiredPropertyException("GetPrecisionTimeServicesDataIpv4", "networkMask");
            }
            this.networkMask = networkMask;
            return this;
        }
        @CustomType.Setter
        public Builder primary(String primary) {
            if (primary == null) {
              throw new MissingRequiredPropertyException("GetPrecisionTimeServicesDataIpv4", "primary");
            }
            this.primary = primary;
            return this;
        }
        @CustomType.Setter
        public Builder secondary(String secondary) {
            if (secondary == null) {
              throw new MissingRequiredPropertyException("GetPrecisionTimeServicesDataIpv4", "secondary");
            }
            this.secondary = secondary;
            return this;
        }
        public GetPrecisionTimeServicesDataIpv4 build() {
            final var _resultValue = new GetPrecisionTimeServicesDataIpv4();
            _resultValue.defaultGateway = defaultGateway;
            _resultValue.networkMask = networkMask;
            _resultValue.primary = primary;
            _resultValue.secondary = secondary;
            return _resultValue;
        }
    }
}
