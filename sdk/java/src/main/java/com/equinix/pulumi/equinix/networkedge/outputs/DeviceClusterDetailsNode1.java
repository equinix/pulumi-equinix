// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.networkedge.outputs;

import com.equinix.pulumi.equinix.networkedge.outputs.DeviceClusterDetailsNode1VendorConfiguration;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceClusterDetailsNode1 {
    /**
     * @return Identifier of a license file that will be applied on the device.
     * 
     */
    private @Nullable String licenseFileId;
    /**
     * @return License Token applicable for some device types in BYOL licensing
     * mode.
     * 
     */
    private @Nullable String licenseToken;
    /**
     * @return Device name.
     * 
     */
    private @Nullable String name;
    /**
     * @return Device unique identifier.
     * 
     */
    private @Nullable String uuid;
    /**
     * @return Map of vendor specific configuration parameters for a device
     * (controller1, activationKey, managementType, siteId, systemIpAddress)
     * * `ssh-key` - (Optional) Definition of SSH key that will be provisioned
     *   on a device (max one key).  See SSH Key below for more details.
     * 
     */
    private @Nullable DeviceClusterDetailsNode1VendorConfiguration vendorConfiguration;

    private DeviceClusterDetailsNode1() {}
    /**
     * @return Identifier of a license file that will be applied on the device.
     * 
     */
    public Optional<String> licenseFileId() {
        return Optional.ofNullable(this.licenseFileId);
    }
    /**
     * @return License Token applicable for some device types in BYOL licensing
     * mode.
     * 
     */
    public Optional<String> licenseToken() {
        return Optional.ofNullable(this.licenseToken);
    }
    /**
     * @return Device name.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Device unique identifier.
     * 
     */
    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }
    /**
     * @return Map of vendor specific configuration parameters for a device
     * (controller1, activationKey, managementType, siteId, systemIpAddress)
     * * `ssh-key` - (Optional) Definition of SSH key that will be provisioned
     *   on a device (max one key).  See SSH Key below for more details.
     * 
     */
    public Optional<DeviceClusterDetailsNode1VendorConfiguration> vendorConfiguration() {
        return Optional.ofNullable(this.vendorConfiguration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceClusterDetailsNode1 defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String licenseFileId;
        private @Nullable String licenseToken;
        private @Nullable String name;
        private @Nullable String uuid;
        private @Nullable DeviceClusterDetailsNode1VendorConfiguration vendorConfiguration;
        public Builder() {}
        public Builder(DeviceClusterDetailsNode1 defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.licenseFileId = defaults.licenseFileId;
    	      this.licenseToken = defaults.licenseToken;
    	      this.name = defaults.name;
    	      this.uuid = defaults.uuid;
    	      this.vendorConfiguration = defaults.vendorConfiguration;
        }

        @CustomType.Setter
        public Builder licenseFileId(@Nullable String licenseFileId) {
            this.licenseFileId = licenseFileId;
            return this;
        }
        @CustomType.Setter
        public Builder licenseToken(@Nullable String licenseToken) {
            this.licenseToken = licenseToken;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(@Nullable String uuid) {
            this.uuid = uuid;
            return this;
        }
        @CustomType.Setter
        public Builder vendorConfiguration(@Nullable DeviceClusterDetailsNode1VendorConfiguration vendorConfiguration) {
            this.vendorConfiguration = vendorConfiguration;
            return this;
        }
        public DeviceClusterDetailsNode1 build() {
            final var o = new DeviceClusterDetailsNode1();
            o.licenseFileId = licenseFileId;
            o.licenseToken = licenseToken;
            o.name = name;
            o.uuid = uuid;
            o.vendorConfiguration = vendorConfiguration;
            return o;
        }
    }
}
