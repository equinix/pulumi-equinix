// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.GetRoutingProtocolBfd;
import com.equinix.pulumi.fabric.inputs.GetRoutingProtocolBgpIpv4;
import com.equinix.pulumi.fabric.inputs.GetRoutingProtocolBgpIpv6;
import com.equinix.pulumi.fabric.inputs.GetRoutingProtocolDirectIpv4;
import com.equinix.pulumi.fabric.inputs.GetRoutingProtocolDirectIpv6;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetRoutingProtocolPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRoutingProtocolPlainArgs Empty = new GetRoutingProtocolPlainArgs();

    /**
     * Bidirectional Forwarding Detection
     * 
     */
    @Import(name="bfd")
    private @Nullable GetRoutingProtocolBfd bfd;

    /**
     * @return Bidirectional Forwarding Detection
     * 
     */
    public Optional<GetRoutingProtocolBfd> bfd() {
        return Optional.ofNullable(this.bfd);
    }

    /**
     * BGP authorization key
     * 
     */
    @Import(name="bgpAuthKey")
    private @Nullable String bgpAuthKey;

    /**
     * @return BGP authorization key
     * 
     */
    public Optional<String> bgpAuthKey() {
        return Optional.ofNullable(this.bgpAuthKey);
    }

    /**
     * Routing Protocol BGP IPv4
     * 
     */
    @Import(name="bgpIpv4")
    private @Nullable GetRoutingProtocolBgpIpv4 bgpIpv4;

    /**
     * @return Routing Protocol BGP IPv4
     * 
     */
    public Optional<GetRoutingProtocolBgpIpv4> bgpIpv4() {
        return Optional.ofNullable(this.bgpIpv4);
    }

    /**
     * Routing Protocol BGP IPv6
     * 
     */
    @Import(name="bgpIpv6")
    private @Nullable GetRoutingProtocolBgpIpv6 bgpIpv6;

    /**
     * @return Routing Protocol BGP IPv6
     * 
     */
    public Optional<GetRoutingProtocolBgpIpv6> bgpIpv6() {
        return Optional.ofNullable(this.bgpIpv6);
    }

    /**
     * Connection URI associated with Routing Protocol
     * 
     */
    @Import(name="connectionUuid", required=true)
    private String connectionUuid;

    /**
     * @return Connection URI associated with Routing Protocol
     * 
     */
    public String connectionUuid() {
        return this.connectionUuid;
    }

    /**
     * Customer-provided ASN
     * 
     */
    @Import(name="customerAsn")
    private @Nullable Integer customerAsn;

    /**
     * @return Customer-provided ASN
     * 
     */
    public Optional<Integer> customerAsn() {
        return Optional.ofNullable(this.customerAsn);
    }

    /**
     * Customer-provided Fabric Routing Protocol description
     * 
     */
    @Import(name="description")
    private @Nullable String description;

    /**
     * @return Customer-provided Fabric Routing Protocol description
     * 
     */
    public Optional<String> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Routing Protocol Direct IPv4
     * 
     */
    @Import(name="directIpv4")
    private @Nullable GetRoutingProtocolDirectIpv4 directIpv4;

    /**
     * @return Routing Protocol Direct IPv4
     * 
     */
    public Optional<GetRoutingProtocolDirectIpv4> directIpv4() {
        return Optional.ofNullable(this.directIpv4);
    }

    /**
     * Routing Protocol Direct IPv6
     * 
     */
    @Import(name="directIpv6")
    private @Nullable GetRoutingProtocolDirectIpv6 directIpv6;

    /**
     * @return Routing Protocol Direct IPv6
     * 
     */
    public Optional<GetRoutingProtocolDirectIpv6> directIpv6() {
        return Optional.ofNullable(this.directIpv6);
    }

    /**
     * Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    @Import(name="type")
    private @Nullable String type;

    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }

    @Import(name="uuid")
    private @Nullable String uuid;

    public Optional<String> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    private GetRoutingProtocolPlainArgs() {}

    private GetRoutingProtocolPlainArgs(GetRoutingProtocolPlainArgs $) {
        this.bfd = $.bfd;
        this.bgpAuthKey = $.bgpAuthKey;
        this.bgpIpv4 = $.bgpIpv4;
        this.bgpIpv6 = $.bgpIpv6;
        this.connectionUuid = $.connectionUuid;
        this.customerAsn = $.customerAsn;
        this.description = $.description;
        this.directIpv4 = $.directIpv4;
        this.directIpv6 = $.directIpv6;
        this.name = $.name;
        this.type = $.type;
        this.uuid = $.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRoutingProtocolPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRoutingProtocolPlainArgs $;

        public Builder() {
            $ = new GetRoutingProtocolPlainArgs();
        }

        public Builder(GetRoutingProtocolPlainArgs defaults) {
            $ = new GetRoutingProtocolPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param bfd Bidirectional Forwarding Detection
         * 
         * @return builder
         * 
         */
        public Builder bfd(@Nullable GetRoutingProtocolBfd bfd) {
            $.bfd = bfd;
            return this;
        }

        /**
         * @param bgpAuthKey BGP authorization key
         * 
         * @return builder
         * 
         */
        public Builder bgpAuthKey(@Nullable String bgpAuthKey) {
            $.bgpAuthKey = bgpAuthKey;
            return this;
        }

        /**
         * @param bgpIpv4 Routing Protocol BGP IPv4
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv4(@Nullable GetRoutingProtocolBgpIpv4 bgpIpv4) {
            $.bgpIpv4 = bgpIpv4;
            return this;
        }

        /**
         * @param bgpIpv6 Routing Protocol BGP IPv6
         * 
         * @return builder
         * 
         */
        public Builder bgpIpv6(@Nullable GetRoutingProtocolBgpIpv6 bgpIpv6) {
            $.bgpIpv6 = bgpIpv6;
            return this;
        }

        /**
         * @param connectionUuid Connection URI associated with Routing Protocol
         * 
         * @return builder
         * 
         */
        public Builder connectionUuid(String connectionUuid) {
            $.connectionUuid = connectionUuid;
            return this;
        }

        /**
         * @param customerAsn Customer-provided ASN
         * 
         * @return builder
         * 
         */
        public Builder customerAsn(@Nullable Integer customerAsn) {
            $.customerAsn = customerAsn;
            return this;
        }

        /**
         * @param description Customer-provided Fabric Routing Protocol description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable String description) {
            $.description = description;
            return this;
        }

        /**
         * @param directIpv4 Routing Protocol Direct IPv4
         * 
         * @return builder
         * 
         */
        public Builder directIpv4(@Nullable GetRoutingProtocolDirectIpv4 directIpv4) {
            $.directIpv4 = directIpv4;
            return this;
        }

        /**
         * @param directIpv6 Routing Protocol Direct IPv6
         * 
         * @return builder
         * 
         */
        public Builder directIpv6(@Nullable GetRoutingProtocolDirectIpv6 directIpv6) {
            $.directIpv6 = directIpv6;
            return this;
        }

        /**
         * @param name Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        public Builder type(@Nullable String type) {
            $.type = type;
            return this;
        }

        public Builder uuid(@Nullable String uuid) {
            $.uuid = uuid;
            return this;
        }

        public GetRoutingProtocolPlainArgs build() {
            $.connectionUuid = Objects.requireNonNull($.connectionUuid, "expected parameter 'connectionUuid' to be non-null");
            return $;
        }
    }

}
