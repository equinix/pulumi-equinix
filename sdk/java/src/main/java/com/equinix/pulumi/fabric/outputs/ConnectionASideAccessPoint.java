// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointAccount;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointGateway;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointInterface;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointLinkProtocol;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointLocation;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointPort;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointProfile;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointRoutingProtocol;
import com.equinix.pulumi.fabric.outputs.ConnectionASideAccessPointVirtualDevice;
import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ConnectionASideAccessPoint {
    /**
     * @return Customer account information that is associated with this connection
     * 
     */
    private @Nullable ConnectionASideAccessPointAccount account;
    private @Nullable String authenticationKey;
    private @Nullable ConnectionASideAccessPointGateway gateway;
    private @Nullable ConnectionASideAccessPointInterface interface_;
    private @Nullable ConnectionASideAccessPointLinkProtocol linkProtocol;
    private @Nullable ConnectionASideAccessPointLocation location;
    private @Nullable String peeringType;
    private @Nullable ConnectionASideAccessPointPort port;
    private @Nullable ConnectionASideAccessPointProfile profile;
    private @Nullable String providerConnectionId;
    private @Nullable List<ConnectionASideAccessPointRoutingProtocol> routingProtocols;
    private @Nullable String sellerRegion;
    /**
     * @return Defines the connection type like VG*VC, EVPL*VC, EPL*VC, EC*VC, GW*VC, ACCESS*EPL_VC
     * 
     */
    private @Nullable String type;
    private @Nullable ConnectionASideAccessPointVirtualDevice virtualDevice;

    private ConnectionASideAccessPoint() {}
    /**
     * @return Customer account information that is associated with this connection
     * 
     */
    public Optional<ConnectionASideAccessPointAccount> account() {
        return Optional.ofNullable(this.account);
    }
    public Optional<String> authenticationKey() {
        return Optional.ofNullable(this.authenticationKey);
    }
    public Optional<ConnectionASideAccessPointGateway> gateway() {
        return Optional.ofNullable(this.gateway);
    }
    public Optional<ConnectionASideAccessPointInterface> interface_() {
        return Optional.ofNullable(this.interface_);
    }
    public Optional<ConnectionASideAccessPointLinkProtocol> linkProtocol() {
        return Optional.ofNullable(this.linkProtocol);
    }
    public Optional<ConnectionASideAccessPointLocation> location() {
        return Optional.ofNullable(this.location);
    }
    public Optional<String> peeringType() {
        return Optional.ofNullable(this.peeringType);
    }
    public Optional<ConnectionASideAccessPointPort> port() {
        return Optional.ofNullable(this.port);
    }
    public Optional<ConnectionASideAccessPointProfile> profile() {
        return Optional.ofNullable(this.profile);
    }
    public Optional<String> providerConnectionId() {
        return Optional.ofNullable(this.providerConnectionId);
    }
    public List<ConnectionASideAccessPointRoutingProtocol> routingProtocols() {
        return this.routingProtocols == null ? List.of() : this.routingProtocols;
    }
    public Optional<String> sellerRegion() {
        return Optional.ofNullable(this.sellerRegion);
    }
    /**
     * @return Defines the connection type like VG*VC, EVPL*VC, EPL*VC, EC*VC, GW*VC, ACCESS*EPL_VC
     * 
     */
    public Optional<String> type() {
        return Optional.ofNullable(this.type);
    }
    public Optional<ConnectionASideAccessPointVirtualDevice> virtualDevice() {
        return Optional.ofNullable(this.virtualDevice);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ConnectionASideAccessPoint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ConnectionASideAccessPointAccount account;
        private @Nullable String authenticationKey;
        private @Nullable ConnectionASideAccessPointGateway gateway;
        private @Nullable ConnectionASideAccessPointInterface interface_;
        private @Nullable ConnectionASideAccessPointLinkProtocol linkProtocol;
        private @Nullable ConnectionASideAccessPointLocation location;
        private @Nullable String peeringType;
        private @Nullable ConnectionASideAccessPointPort port;
        private @Nullable ConnectionASideAccessPointProfile profile;
        private @Nullable String providerConnectionId;
        private @Nullable List<ConnectionASideAccessPointRoutingProtocol> routingProtocols;
        private @Nullable String sellerRegion;
        private @Nullable String type;
        private @Nullable ConnectionASideAccessPointVirtualDevice virtualDevice;
        public Builder() {}
        public Builder(ConnectionASideAccessPoint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.account = defaults.account;
    	      this.authenticationKey = defaults.authenticationKey;
    	      this.gateway = defaults.gateway;
    	      this.interface_ = defaults.interface_;
    	      this.linkProtocol = defaults.linkProtocol;
    	      this.location = defaults.location;
    	      this.peeringType = defaults.peeringType;
    	      this.port = defaults.port;
    	      this.profile = defaults.profile;
    	      this.providerConnectionId = defaults.providerConnectionId;
    	      this.routingProtocols = defaults.routingProtocols;
    	      this.sellerRegion = defaults.sellerRegion;
    	      this.type = defaults.type;
    	      this.virtualDevice = defaults.virtualDevice;
        }

        @CustomType.Setter
        public Builder account(@Nullable ConnectionASideAccessPointAccount account) {
            this.account = account;
            return this;
        }
        @CustomType.Setter
        public Builder authenticationKey(@Nullable String authenticationKey) {
            this.authenticationKey = authenticationKey;
            return this;
        }
        @CustomType.Setter
        public Builder gateway(@Nullable ConnectionASideAccessPointGateway gateway) {
            this.gateway = gateway;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(@Nullable ConnectionASideAccessPointInterface interface_) {
            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder linkProtocol(@Nullable ConnectionASideAccessPointLinkProtocol linkProtocol) {
            this.linkProtocol = linkProtocol;
            return this;
        }
        @CustomType.Setter
        public Builder location(@Nullable ConnectionASideAccessPointLocation location) {
            this.location = location;
            return this;
        }
        @CustomType.Setter
        public Builder peeringType(@Nullable String peeringType) {
            this.peeringType = peeringType;
            return this;
        }
        @CustomType.Setter
        public Builder port(@Nullable ConnectionASideAccessPointPort port) {
            this.port = port;
            return this;
        }
        @CustomType.Setter
        public Builder profile(@Nullable ConnectionASideAccessPointProfile profile) {
            this.profile = profile;
            return this;
        }
        @CustomType.Setter
        public Builder providerConnectionId(@Nullable String providerConnectionId) {
            this.providerConnectionId = providerConnectionId;
            return this;
        }
        @CustomType.Setter
        public Builder routingProtocols(@Nullable List<ConnectionASideAccessPointRoutingProtocol> routingProtocols) {
            this.routingProtocols = routingProtocols;
            return this;
        }
        public Builder routingProtocols(ConnectionASideAccessPointRoutingProtocol... routingProtocols) {
            return routingProtocols(List.of(routingProtocols));
        }
        @CustomType.Setter
        public Builder sellerRegion(@Nullable String sellerRegion) {
            this.sellerRegion = sellerRegion;
            return this;
        }
        @CustomType.Setter
        public Builder type(@Nullable String type) {
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder virtualDevice(@Nullable ConnectionASideAccessPointVirtualDevice virtualDevice) {
            this.virtualDevice = virtualDevice;
            return this;
        }
        public ConnectionASideAccessPoint build() {
            final var o = new ConnectionASideAccessPoint();
            o.account = account;
            o.authenticationKey = authenticationKey;
            o.gateway = gateway;
            o.interface_ = interface_;
            o.linkProtocol = linkProtocol;
            o.location = location;
            o.peeringType = peeringType;
            o.port = port;
            o.profile = profile;
            o.providerConnectionId = providerConnectionId;
            o.routingProtocols = routingProtocols;
            o.sellerRegion = sellerRegion;
            o.type = type;
            o.virtualDevice = virtualDevice;
            return o;
        }
    }
}
