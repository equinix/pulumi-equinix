// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetServiceTokensData;
import com.equinix.pulumi.fabric.outputs.GetServiceTokensFilter;
import com.equinix.pulumi.fabric.outputs.GetServiceTokensPagination;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetServiceTokensResult {
    /**
     * @return List of Service Tokens
     * 
     */
    private List<GetServiceTokensData> datas;
    /**
     * @return Filters for the Data Source Search Request
     * 
     */
    private List<GetServiceTokensFilter> filters;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Pagination details for the Data Source Search Request
     * 
     */
    private @Nullable GetServiceTokensPagination pagination;

    private GetServiceTokensResult() {}
    /**
     * @return List of Service Tokens
     * 
     */
    public List<GetServiceTokensData> datas() {
        return this.datas;
    }
    /**
     * @return Filters for the Data Source Search Request
     * 
     */
    public List<GetServiceTokensFilter> filters() {
        return this.filters;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Pagination details for the Data Source Search Request
     * 
     */
    public Optional<GetServiceTokensPagination> pagination() {
        return Optional.ofNullable(this.pagination);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceTokensResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetServiceTokensData> datas;
        private List<GetServiceTokensFilter> filters;
        private String id;
        private @Nullable GetServiceTokensPagination pagination;
        public Builder() {}
        public Builder(GetServiceTokensResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.datas = defaults.datas;
    	      this.filters = defaults.filters;
    	      this.id = defaults.id;
    	      this.pagination = defaults.pagination;
        }

        @CustomType.Setter
        public Builder datas(List<GetServiceTokensData> datas) {
            if (datas == null) {
              throw new MissingRequiredPropertyException("GetServiceTokensResult", "datas");
            }
            this.datas = datas;
            return this;
        }
        public Builder datas(GetServiceTokensData... datas) {
            return datas(List.of(datas));
        }
        @CustomType.Setter
        public Builder filters(List<GetServiceTokensFilter> filters) {
            if (filters == null) {
              throw new MissingRequiredPropertyException("GetServiceTokensResult", "filters");
            }
            this.filters = filters;
            return this;
        }
        public Builder filters(GetServiceTokensFilter... filters) {
            return filters(List.of(filters));
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceTokensResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder pagination(@Nullable GetServiceTokensPagination pagination) {

            this.pagination = pagination;
            return this;
        }
        public GetServiceTokensResult build() {
            final var _resultValue = new GetServiceTokensResult();
            _resultValue.datas = datas;
            _resultValue.filters = filters;
            _resultValue.id = id;
            _resultValue.pagination = pagination;
            return _resultValue;
        }
    }
}
