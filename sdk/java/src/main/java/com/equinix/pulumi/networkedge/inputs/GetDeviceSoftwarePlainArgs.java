// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge.inputs;

import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDeviceSoftwarePlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDeviceSoftwarePlainArgs Empty = new GetDeviceSoftwarePlainArgs();

    /**
     * Code of a device type.
     * 
     */
    @Import(name="deviceType", required=true)
    private String deviceType;

    /**
     * @return Code of a device type.
     * 
     */
    public String deviceType() {
        return this.deviceType;
    }

    /**
     * Boolean value to indicate that most recent version should be used *(in case when more than one result is returned)*.
     * 
     */
    @Import(name="mostRecent")
    private @Nullable Boolean mostRecent;

    /**
     * @return Boolean value to indicate that most recent version should be used *(in case when more than one result is returned)*.
     * 
     */
    public Optional<Boolean> mostRecent() {
        return Optional.ofNullable(this.mostRecent);
    }

    /**
     * Limits returned versions to those that are supported by given software package codes.
     * 
     */
    @Import(name="packages")
    private @Nullable List<String> packages;

    /**
     * @return Limits returned versions to those that are supported by given software package codes.
     * 
     */
    public Optional<List<String>> packages() {
        return Optional.ofNullable(this.packages);
    }

    /**
     * Boolean value to limit query results to stable versions only.
     * 
     */
    @Import(name="stable")
    private @Nullable Boolean stable;

    /**
     * @return Boolean value to limit query results to stable versions only.
     * 
     */
    public Optional<Boolean> stable() {
        return Optional.ofNullable(this.stable);
    }

    /**
     * A regex string to apply on returned versions and filter search results.
     * 
     */
    @Import(name="versionRegex")
    private @Nullable String versionRegex;

    /**
     * @return A regex string to apply on returned versions and filter search results.
     * 
     */
    public Optional<String> versionRegex() {
        return Optional.ofNullable(this.versionRegex);
    }

    private GetDeviceSoftwarePlainArgs() {}

    private GetDeviceSoftwarePlainArgs(GetDeviceSoftwarePlainArgs $) {
        this.deviceType = $.deviceType;
        this.mostRecent = $.mostRecent;
        this.packages = $.packages;
        this.stable = $.stable;
        this.versionRegex = $.versionRegex;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDeviceSoftwarePlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDeviceSoftwarePlainArgs $;

        public Builder() {
            $ = new GetDeviceSoftwarePlainArgs();
        }

        public Builder(GetDeviceSoftwarePlainArgs defaults) {
            $ = new GetDeviceSoftwarePlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceType Code of a device type.
         * 
         * @return builder
         * 
         */
        public Builder deviceType(String deviceType) {
            $.deviceType = deviceType;
            return this;
        }

        /**
         * @param mostRecent Boolean value to indicate that most recent version should be used *(in case when more than one result is returned)*.
         * 
         * @return builder
         * 
         */
        public Builder mostRecent(@Nullable Boolean mostRecent) {
            $.mostRecent = mostRecent;
            return this;
        }

        /**
         * @param packages Limits returned versions to those that are supported by given software package codes.
         * 
         * @return builder
         * 
         */
        public Builder packages(@Nullable List<String> packages) {
            $.packages = packages;
            return this;
        }

        /**
         * @param packages Limits returned versions to those that are supported by given software package codes.
         * 
         * @return builder
         * 
         */
        public Builder packages(String... packages) {
            return packages(List.of(packages));
        }

        /**
         * @param stable Boolean value to limit query results to stable versions only.
         * 
         * @return builder
         * 
         */
        public Builder stable(@Nullable Boolean stable) {
            $.stable = stable;
            return this;
        }

        /**
         * @param versionRegex A regex string to apply on returned versions and filter search results.
         * 
         * @return builder
         * 
         */
        public Builder versionRegex(@Nullable String versionRegex) {
            $.versionRegex = versionRegex;
            return this;
        }

        public GetDeviceSoftwarePlainArgs build() {
            $.deviceType = Objects.requireNonNull($.deviceType, "expected parameter 'deviceType' to be non-null");
            return $;
        }
    }

}
