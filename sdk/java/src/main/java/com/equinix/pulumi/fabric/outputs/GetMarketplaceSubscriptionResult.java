// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetMarketplaceSubscriptionEntitlement;
import com.equinix.pulumi.fabric.outputs.GetMarketplaceSubscriptionTrial;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetMarketplaceSubscriptionResult {
    /**
     * @return Subscription entitlements
     * 
     */
    private List<GetMarketplaceSubscriptionEntitlement> entitlements;
    /**
     * @return Subscription URI information
     * 
     */
    private String href;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return Information about subscription auto renewal
     * 
     */
    private Boolean isAutoRenew;
    /**
     * @return Marketplace like; AWS, GCP, AZURE, REDHAT
     * 
     */
    private String marketplace;
    /**
     * @return Marketplace Offer Type like; PUBLIC, PRIVATE_OFFER
     * 
     */
    private String offerType;
    /**
     * @return Subscription Status like; ACTIVE, EXPIRED, CANCELLED, GRACE_PERIOD
     * 
     */
    private String status;
    /**
     * @return Subscription Trial
     * 
     */
    private GetMarketplaceSubscriptionTrial trial;
    /**
     * @return Equinix-assigned marketplace identifier
     * 
     */
    private String uuid;

    private GetMarketplaceSubscriptionResult() {}
    /**
     * @return Subscription entitlements
     * 
     */
    public List<GetMarketplaceSubscriptionEntitlement> entitlements() {
        return this.entitlements;
    }
    /**
     * @return Subscription URI information
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Information about subscription auto renewal
     * 
     */
    public Boolean isAutoRenew() {
        return this.isAutoRenew;
    }
    /**
     * @return Marketplace like; AWS, GCP, AZURE, REDHAT
     * 
     */
    public String marketplace() {
        return this.marketplace;
    }
    /**
     * @return Marketplace Offer Type like; PUBLIC, PRIVATE_OFFER
     * 
     */
    public String offerType() {
        return this.offerType;
    }
    /**
     * @return Subscription Status like; ACTIVE, EXPIRED, CANCELLED, GRACE_PERIOD
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return Subscription Trial
     * 
     */
    public GetMarketplaceSubscriptionTrial trial() {
        return this.trial;
    }
    /**
     * @return Equinix-assigned marketplace identifier
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetMarketplaceSubscriptionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetMarketplaceSubscriptionEntitlement> entitlements;
        private String href;
        private String id;
        private Boolean isAutoRenew;
        private String marketplace;
        private String offerType;
        private String status;
        private GetMarketplaceSubscriptionTrial trial;
        private String uuid;
        public Builder() {}
        public Builder(GetMarketplaceSubscriptionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.entitlements = defaults.entitlements;
    	      this.href = defaults.href;
    	      this.id = defaults.id;
    	      this.isAutoRenew = defaults.isAutoRenew;
    	      this.marketplace = defaults.marketplace;
    	      this.offerType = defaults.offerType;
    	      this.status = defaults.status;
    	      this.trial = defaults.trial;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder entitlements(List<GetMarketplaceSubscriptionEntitlement> entitlements) {
            if (entitlements == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "entitlements");
            }
            this.entitlements = entitlements;
            return this;
        }
        public Builder entitlements(GetMarketplaceSubscriptionEntitlement... entitlements) {
            return entitlements(List.of(entitlements));
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder isAutoRenew(Boolean isAutoRenew) {
            if (isAutoRenew == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "isAutoRenew");
            }
            this.isAutoRenew = isAutoRenew;
            return this;
        }
        @CustomType.Setter
        public Builder marketplace(String marketplace) {
            if (marketplace == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "marketplace");
            }
            this.marketplace = marketplace;
            return this;
        }
        @CustomType.Setter
        public Builder offerType(String offerType) {
            if (offerType == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "offerType");
            }
            this.offerType = offerType;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            if (status == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "status");
            }
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder trial(GetMarketplaceSubscriptionTrial trial) {
            if (trial == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "trial");
            }
            this.trial = trial;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetMarketplaceSubscriptionResult", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetMarketplaceSubscriptionResult build() {
            final var _resultValue = new GetMarketplaceSubscriptionResult();
            _resultValue.entitlements = entitlements;
            _resultValue.href = href;
            _resultValue.id = id;
            _resultValue.isAutoRenew = isAutoRenew;
            _resultValue.marketplace = marketplace;
            _resultValue.offerType = offerType;
            _resultValue.status = status;
            _resultValue.trial = trial;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
