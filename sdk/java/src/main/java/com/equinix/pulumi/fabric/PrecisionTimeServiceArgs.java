// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric;

import com.equinix.pulumi.fabric.inputs.PrecisionTimeServiceConnectionArgs;
import com.equinix.pulumi.fabric.inputs.PrecisionTimeServiceIpv4Args;
import com.equinix.pulumi.fabric.inputs.PrecisionTimeServiceNtpAdvancedConfigurationArgs;
import com.equinix.pulumi.fabric.inputs.PrecisionTimeServicePackageArgs;
import com.equinix.pulumi.fabric.inputs.PrecisionTimeServicePtpAdvancedConfigurationArgs;
import com.equinix.pulumi.fabric.inputs.PrecisionTimeServiceTimeoutsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PrecisionTimeServiceArgs extends com.pulumi.resources.ResourceArgs {

    public static final PrecisionTimeServiceArgs Empty = new PrecisionTimeServiceArgs();

    /**
     * An array of objects with unique identifiers of connections.
     * 
     */
    @Import(name="connections", required=true)
    private Output<List<PrecisionTimeServiceConnectionArgs>> connections;

    /**
     * @return An array of objects with unique identifiers of connections.
     * 
     */
    public Output<List<PrecisionTimeServiceConnectionArgs>> connections() {
        return this.connections;
    }

    /**
     * An object that has Network IP Configurations for Timing Master Servers.
     * 
     */
    @Import(name="ipv4", required=true)
    private Output<PrecisionTimeServiceIpv4Args> ipv4;

    /**
     * @return An object that has Network IP Configurations for Timing Master Servers.
     * 
     */
    public Output<PrecisionTimeServiceIpv4Args> ipv4() {
        return this.ipv4;
    }

    /**
     * Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens (&#39;-&#39;) and underscores (&#39;_&#39;)
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens (&#39;-&#39;) and underscores (&#39;_&#39;)
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * NTP Advanced configuration
     * 
     */
    @Import(name="ntpAdvancedConfigurations")
    private @Nullable Output<List<PrecisionTimeServiceNtpAdvancedConfigurationArgs>> ntpAdvancedConfigurations;

    /**
     * @return NTP Advanced configuration
     * 
     */
    public Optional<Output<List<PrecisionTimeServiceNtpAdvancedConfigurationArgs>>> ntpAdvancedConfigurations() {
        return Optional.ofNullable(this.ntpAdvancedConfigurations);
    }

    /**
     * Precision Time Service Package Details
     * 
     */
    @Import(name="package", required=true)
    private Output<PrecisionTimeServicePackageArgs> package_;

    /**
     * @return Precision Time Service Package Details
     * 
     */
    public Output<PrecisionTimeServicePackageArgs> package_() {
        return this.package_;
    }

    /**
     * PTP Advanced Configuration
     * 
     */
    @Import(name="ptpAdvancedConfiguration")
    private @Nullable Output<PrecisionTimeServicePtpAdvancedConfigurationArgs> ptpAdvancedConfiguration;

    /**
     * @return PTP Advanced Configuration
     * 
     */
    public Optional<Output<PrecisionTimeServicePtpAdvancedConfigurationArgs>> ptpAdvancedConfiguration() {
        return Optional.ofNullable(this.ptpAdvancedConfiguration);
    }

    @Import(name="timeouts")
    private @Nullable Output<PrecisionTimeServiceTimeoutsArgs> timeouts;

    public Optional<Output<PrecisionTimeServiceTimeoutsArgs>> timeouts() {
        return Optional.ofNullable(this.timeouts);
    }

    /**
     * Choose type of Precision Time Service
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return Choose type of Precision Time Service
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private PrecisionTimeServiceArgs() {}

    private PrecisionTimeServiceArgs(PrecisionTimeServiceArgs $) {
        this.connections = $.connections;
        this.ipv4 = $.ipv4;
        this.name = $.name;
        this.ntpAdvancedConfigurations = $.ntpAdvancedConfigurations;
        this.package_ = $.package_;
        this.ptpAdvancedConfiguration = $.ptpAdvancedConfiguration;
        this.timeouts = $.timeouts;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PrecisionTimeServiceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PrecisionTimeServiceArgs $;

        public Builder() {
            $ = new PrecisionTimeServiceArgs();
        }

        public Builder(PrecisionTimeServiceArgs defaults) {
            $ = new PrecisionTimeServiceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connections An array of objects with unique identifiers of connections.
         * 
         * @return builder
         * 
         */
        public Builder connections(Output<List<PrecisionTimeServiceConnectionArgs>> connections) {
            $.connections = connections;
            return this;
        }

        /**
         * @param connections An array of objects with unique identifiers of connections.
         * 
         * @return builder
         * 
         */
        public Builder connections(List<PrecisionTimeServiceConnectionArgs> connections) {
            return connections(Output.of(connections));
        }

        /**
         * @param connections An array of objects with unique identifiers of connections.
         * 
         * @return builder
         * 
         */
        public Builder connections(PrecisionTimeServiceConnectionArgs... connections) {
            return connections(List.of(connections));
        }

        /**
         * @param ipv4 An object that has Network IP Configurations for Timing Master Servers.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(Output<PrecisionTimeServiceIpv4Args> ipv4) {
            $.ipv4 = ipv4;
            return this;
        }

        /**
         * @param ipv4 An object that has Network IP Configurations for Timing Master Servers.
         * 
         * @return builder
         * 
         */
        public Builder ipv4(PrecisionTimeServiceIpv4Args ipv4) {
            return ipv4(Output.of(ipv4));
        }

        /**
         * @param name Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens (&#39;-&#39;) and underscores (&#39;_&#39;)
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens (&#39;-&#39;) and underscores (&#39;_&#39;)
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param ntpAdvancedConfigurations NTP Advanced configuration
         * 
         * @return builder
         * 
         */
        public Builder ntpAdvancedConfigurations(@Nullable Output<List<PrecisionTimeServiceNtpAdvancedConfigurationArgs>> ntpAdvancedConfigurations) {
            $.ntpAdvancedConfigurations = ntpAdvancedConfigurations;
            return this;
        }

        /**
         * @param ntpAdvancedConfigurations NTP Advanced configuration
         * 
         * @return builder
         * 
         */
        public Builder ntpAdvancedConfigurations(List<PrecisionTimeServiceNtpAdvancedConfigurationArgs> ntpAdvancedConfigurations) {
            return ntpAdvancedConfigurations(Output.of(ntpAdvancedConfigurations));
        }

        /**
         * @param ntpAdvancedConfigurations NTP Advanced configuration
         * 
         * @return builder
         * 
         */
        public Builder ntpAdvancedConfigurations(PrecisionTimeServiceNtpAdvancedConfigurationArgs... ntpAdvancedConfigurations) {
            return ntpAdvancedConfigurations(List.of(ntpAdvancedConfigurations));
        }

        /**
         * @param package_ Precision Time Service Package Details
         * 
         * @return builder
         * 
         */
        public Builder package_(Output<PrecisionTimeServicePackageArgs> package_) {
            $.package_ = package_;
            return this;
        }

        /**
         * @param package_ Precision Time Service Package Details
         * 
         * @return builder
         * 
         */
        public Builder package_(PrecisionTimeServicePackageArgs package_) {
            return package_(Output.of(package_));
        }

        /**
         * @param ptpAdvancedConfiguration PTP Advanced Configuration
         * 
         * @return builder
         * 
         */
        public Builder ptpAdvancedConfiguration(@Nullable Output<PrecisionTimeServicePtpAdvancedConfigurationArgs> ptpAdvancedConfiguration) {
            $.ptpAdvancedConfiguration = ptpAdvancedConfiguration;
            return this;
        }

        /**
         * @param ptpAdvancedConfiguration PTP Advanced Configuration
         * 
         * @return builder
         * 
         */
        public Builder ptpAdvancedConfiguration(PrecisionTimeServicePtpAdvancedConfigurationArgs ptpAdvancedConfiguration) {
            return ptpAdvancedConfiguration(Output.of(ptpAdvancedConfiguration));
        }

        public Builder timeouts(@Nullable Output<PrecisionTimeServiceTimeoutsArgs> timeouts) {
            $.timeouts = timeouts;
            return this;
        }

        public Builder timeouts(PrecisionTimeServiceTimeoutsArgs timeouts) {
            return timeouts(Output.of(timeouts));
        }

        /**
         * @param type Choose type of Precision Time Service
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Choose type of Precision Time Service
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PrecisionTimeServiceArgs build() {
            if ($.connections == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceArgs", "connections");
            }
            if ($.ipv4 == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceArgs", "ipv4");
            }
            if ($.package_ == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceArgs", "package_");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("PrecisionTimeServiceArgs", "type");
            }
            return $;
        }
    }

}
