// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric;

import com.equinix.pulumi.Utilities;
import com.equinix.pulumi.fabric.ConnectionRouteAggregationArgs;
import com.equinix.pulumi.fabric.inputs.ConnectionRouteAggregationState;
import com.equinix.pulumi.fabric.outputs.ConnectionRouteAggregationTimeouts;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * ## Example Usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.equinix.pulumi.fabric.ConnectionRouteAggregation;
 * import com.equinix.pulumi.fabric.ConnectionRouteAggregationArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var policyAttachment = new ConnectionRouteAggregation("policyAttachment", ConnectionRouteAggregationArgs.builder()
 *             .routeAggregationId("<route_aggregation_id>")
 *             .connectionId("<connection_id>")
 *             .build());
 * 
 *         ctx.export("connectionRouteAggregationId", policyAttachment.id());
 *         ctx.export("connectionRouteAggregationConnectionId", policyAttachment.connectionId());
 *         ctx.export("connectionRouteAggregationType", policyAttachment.type());
 *         ctx.export("connectionRouteAggregationAttachmentStatus", policyAttachment.attachmentStatus());
 *     }
 * }
 * }
 * </pre>
 * 
 */
@ResourceType(type="equinix:fabric/connectionRouteAggregation:ConnectionRouteAggregation")
public class ConnectionRouteAggregation extends com.pulumi.resources.CustomResource {
    /**
     * Status of the Route Aggregation Policy attachment lifecycle
     * 
     */
    @Export(name="attachmentStatus", refs={String.class}, tree="[0]")
    private Output<String> attachmentStatus;

    /**
     * @return Status of the Route Aggregation Policy attachment lifecycle
     * 
     */
    public Output<String> attachmentStatus() {
        return this.attachmentStatus;
    }
    /**
     * Equinix Assigned UUID of the Equinix Connection to attach the Route Aggregation Policy to
     * 
     */
    @Export(name="connectionId", refs={String.class}, tree="[0]")
    private Output<String> connectionId;

    /**
     * @return Equinix Assigned UUID of the Equinix Connection to attach the Route Aggregation Policy to
     * 
     */
    public Output<String> connectionId() {
        return this.connectionId;
    }
    /**
     * URI to the attached Route Aggregation Policy on the Connection
     * 
     */
    @Export(name="href", refs={String.class}, tree="[0]")
    private Output<String> href;

    /**
     * @return URI to the attached Route Aggregation Policy on the Connection
     * 
     */
    public Output<String> href() {
        return this.href;
    }
    /**
     * UUID of the Route Aggregation to apply this Rule to
     * 
     */
    @Export(name="routeAggregationId", refs={String.class}, tree="[0]")
    private Output<String> routeAggregationId;

    /**
     * @return UUID of the Route Aggregation to apply this Rule to
     * 
     */
    public Output<String> routeAggregationId() {
        return this.routeAggregationId;
    }
    @Export(name="timeouts", refs={ConnectionRouteAggregationTimeouts.class}, tree="[0]")
    private Output</* @Nullable */ ConnectionRouteAggregationTimeouts> timeouts;

    public Output<Optional<ConnectionRouteAggregationTimeouts>> timeouts() {
        return Codegen.optional(this.timeouts);
    }
    /**
     * Route Aggregation Type. One of [&#34;BGP*IPv4*PREFIX_AGGREGATION&#34;]
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return Route Aggregation Type. One of [&#34;BGP*IPv4*PREFIX_AGGREGATION&#34;]
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * Equinix Assigned ID for Route Aggregation Policy
     * 
     */
    @Export(name="uuid", refs={String.class}, tree="[0]")
    private Output<String> uuid;

    /**
     * @return Equinix Assigned ID for Route Aggregation Policy
     * 
     */
    public Output<String> uuid() {
        return this.uuid;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public ConnectionRouteAggregation(java.lang.String name) {
        this(name, ConnectionRouteAggregationArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public ConnectionRouteAggregation(java.lang.String name, ConnectionRouteAggregationArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public ConnectionRouteAggregation(java.lang.String name, ConnectionRouteAggregationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:fabric/connectionRouteAggregation:ConnectionRouteAggregation", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private ConnectionRouteAggregation(java.lang.String name, Output<java.lang.String> id, @Nullable ConnectionRouteAggregationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:fabric/connectionRouteAggregation:ConnectionRouteAggregation", name, state, makeResourceOptions(options, id), false);
    }

    private static ConnectionRouteAggregationArgs makeArgs(ConnectionRouteAggregationArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ConnectionRouteAggregationArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .pluginDownloadURL("github://api.github.com/equinix")
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static ConnectionRouteAggregation get(java.lang.String name, Output<java.lang.String> id, @Nullable ConnectionRouteAggregationState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new ConnectionRouteAggregation(name, id, state, options);
    }
}
