// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.fabric.inputs;

import com.equinix.pulumi.equinix.fabric.enums.ProfileState;
import com.equinix.pulumi.equinix.fabric.enums.ProfileType;
import com.equinix.pulumi.equinix.fabric.enums.ProfileVisibility;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileAccessPointTypeConfigArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileAccountArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileChangeLogArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileCustomFieldArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileMarketingInfoArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileMetroArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileNotificationArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfilePortArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileProjectArgs;
import com.equinix.pulumi.equinix.fabric.inputs.ServiceProfileVirtualDeviceArgs;
import com.pulumi.core.Either;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceProfileState extends com.pulumi.resources.ResourceArgs {

    public static final ServiceProfileState Empty = new ServiceProfileState();

    /**
     * Access point config information
     * 
     */
    @Import(name="accessPointTypeConfigs")
    private @Nullable Output<List<ServiceProfileAccessPointTypeConfigArgs>> accessPointTypeConfigs;

    /**
     * @return Access point config information
     * 
     */
    public Optional<Output<List<ServiceProfileAccessPointTypeConfigArgs>>> accessPointTypeConfigs() {
        return Optional.ofNullable(this.accessPointTypeConfigs);
    }

    /**
     * Account
     * 
     */
    @Import(name="accounts")
    private @Nullable Output<List<ServiceProfileAccountArgs>> accounts;

    /**
     * @return Account
     * 
     */
    public Optional<Output<List<ServiceProfileAccountArgs>>> accounts() {
        return Optional.ofNullable(this.accounts);
    }

    /**
     * Array of contact emails
     * 
     */
    @Import(name="allowedEmails")
    private @Nullable Output<List<String>> allowedEmails;

    /**
     * @return Array of contact emails
     * 
     */
    public Optional<Output<List<String>>> allowedEmails() {
        return Optional.ofNullable(this.allowedEmails);
    }

    /**
     * Captures connection lifecycle change information
     * 
     */
    @Import(name="changeLogs")
    private @Nullable Output<List<ServiceProfileChangeLogArgs>> changeLogs;

    /**
     * @return Captures connection lifecycle change information
     * 
     */
    public Optional<Output<List<ServiceProfileChangeLogArgs>>> changeLogs() {
        return Optional.ofNullable(this.changeLogs);
    }

    /**
     * Custom Fields
     * 
     */
    @Import(name="customFields")
    private @Nullable Output<List<ServiceProfileCustomFieldArgs>> customFields;

    /**
     * @return Custom Fields
     * 
     */
    public Optional<Output<List<ServiceProfileCustomFieldArgs>>> customFields() {
        return Optional.ofNullable(this.customFields);
    }

    /**
     * User-provided service description
     * 
     */
    @Import(name="description")
    private @Nullable Output<String> description;

    /**
     * @return User-provided service description
     * 
     */
    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * Service Profile URI response attribute
     * 
     */
    @Import(name="href")
    private @Nullable Output<String> href;

    /**
     * @return Service Profile URI response attribute
     * 
     */
    public Optional<Output<String>> href() {
        return Optional.ofNullable(this.href);
    }

    /**
     * Marketing Info
     * 
     */
    @Import(name="marketingInfos")
    private @Nullable Output<List<ServiceProfileMarketingInfoArgs>> marketingInfos;

    /**
     * @return Marketing Info
     * 
     */
    public Optional<Output<List<ServiceProfileMarketingInfoArgs>>> marketingInfos() {
        return Optional.ofNullable(this.marketingInfos);
    }

    /**
     * Access point config information
     * 
     */
    @Import(name="metros")
    private @Nullable Output<List<ServiceProfileMetroArgs>> metros;

    /**
     * @return Access point config information
     * 
     */
    public Optional<Output<List<ServiceProfileMetroArgs>>> metros() {
        return Optional.ofNullable(this.metros);
    }

    /**
     * Customer-assigned service profile name
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Customer-assigned service profile name
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Preferences for notifications on connection configuration or status changes
     * 
     */
    @Import(name="notifications")
    private @Nullable Output<List<ServiceProfileNotificationArgs>> notifications;

    /**
     * @return Preferences for notifications on connection configuration or status changes
     * 
     */
    public Optional<Output<List<ServiceProfileNotificationArgs>>> notifications() {
        return Optional.ofNullable(this.notifications);
    }

    /**
     * Ports
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<ServiceProfilePortArgs>> ports;

    /**
     * @return Ports
     * 
     */
    public Optional<Output<List<ServiceProfilePortArgs>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * Project information
     * 
     */
    @Import(name="projects")
    private @Nullable Output<List<ServiceProfileProjectArgs>> projects;

    /**
     * @return Project information
     * 
     */
    public Optional<Output<List<ServiceProfileProjectArgs>>> projects() {
        return Optional.ofNullable(this.projects);
    }

    /**
     * Self Profile
     * 
     */
    @Import(name="selfProfile")
    private @Nullable Output<Boolean> selfProfile;

    /**
     * @return Self Profile
     * 
     */
    public Optional<Output<Boolean>> selfProfile() {
        return Optional.ofNullable(this.selfProfile);
    }

    /**
     * Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
     * 
     */
    @Import(name="state")
    private @Nullable Output<Either<String,ProfileState>> state;

    /**
     * @return Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
     * 
     */
    public Optional<Output<Either<String,ProfileState>>> state() {
        return Optional.ofNullable(this.state);
    }

    /**
     * Tags attached to the connection
     * 
     */
    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    /**
     * @return Tags attached to the connection
     * 
     */
    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    /**
     * Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
     * 
     */
    @Import(name="type")
    private @Nullable Output<Either<String,ProfileType>> type;

    /**
     * @return Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
     * 
     */
    public Optional<Output<Either<String,ProfileType>>> type() {
        return Optional.ofNullable(this.type);
    }

    /**
     * Equinix assigned service profile identifier
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return Equinix assigned service profile identifier
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * Virtual Devices
     * 
     */
    @Import(name="virtualDevices")
    private @Nullable Output<List<ServiceProfileVirtualDeviceArgs>> virtualDevices;

    /**
     * @return Virtual Devices
     * 
     */
    public Optional<Output<List<ServiceProfileVirtualDeviceArgs>>> virtualDevices() {
        return Optional.ofNullable(this.virtualDevices);
    }

    /**
     * Service profile visibility - PUBLIC, PRIVATE
     * 
     */
    @Import(name="visibility")
    private @Nullable Output<Either<String,ProfileVisibility>> visibility;

    /**
     * @return Service profile visibility - PUBLIC, PRIVATE
     * 
     */
    public Optional<Output<Either<String,ProfileVisibility>>> visibility() {
        return Optional.ofNullable(this.visibility);
    }

    private ServiceProfileState() {}

    private ServiceProfileState(ServiceProfileState $) {
        this.accessPointTypeConfigs = $.accessPointTypeConfigs;
        this.accounts = $.accounts;
        this.allowedEmails = $.allowedEmails;
        this.changeLogs = $.changeLogs;
        this.customFields = $.customFields;
        this.description = $.description;
        this.href = $.href;
        this.marketingInfos = $.marketingInfos;
        this.metros = $.metros;
        this.name = $.name;
        this.notifications = $.notifications;
        this.ports = $.ports;
        this.projects = $.projects;
        this.selfProfile = $.selfProfile;
        this.state = $.state;
        this.tags = $.tags;
        this.type = $.type;
        this.uuid = $.uuid;
        this.virtualDevices = $.virtualDevices;
        this.visibility = $.visibility;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceProfileState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceProfileState $;

        public Builder() {
            $ = new ServiceProfileState();
        }

        public Builder(ServiceProfileState defaults) {
            $ = new ServiceProfileState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accessPointTypeConfigs Access point config information
         * 
         * @return builder
         * 
         */
        public Builder accessPointTypeConfigs(@Nullable Output<List<ServiceProfileAccessPointTypeConfigArgs>> accessPointTypeConfigs) {
            $.accessPointTypeConfigs = accessPointTypeConfigs;
            return this;
        }

        /**
         * @param accessPointTypeConfigs Access point config information
         * 
         * @return builder
         * 
         */
        public Builder accessPointTypeConfigs(List<ServiceProfileAccessPointTypeConfigArgs> accessPointTypeConfigs) {
            return accessPointTypeConfigs(Output.of(accessPointTypeConfigs));
        }

        /**
         * @param accessPointTypeConfigs Access point config information
         * 
         * @return builder
         * 
         */
        public Builder accessPointTypeConfigs(ServiceProfileAccessPointTypeConfigArgs... accessPointTypeConfigs) {
            return accessPointTypeConfigs(List.of(accessPointTypeConfigs));
        }

        /**
         * @param accounts Account
         * 
         * @return builder
         * 
         */
        public Builder accounts(@Nullable Output<List<ServiceProfileAccountArgs>> accounts) {
            $.accounts = accounts;
            return this;
        }

        /**
         * @param accounts Account
         * 
         * @return builder
         * 
         */
        public Builder accounts(List<ServiceProfileAccountArgs> accounts) {
            return accounts(Output.of(accounts));
        }

        /**
         * @param accounts Account
         * 
         * @return builder
         * 
         */
        public Builder accounts(ServiceProfileAccountArgs... accounts) {
            return accounts(List.of(accounts));
        }

        /**
         * @param allowedEmails Array of contact emails
         * 
         * @return builder
         * 
         */
        public Builder allowedEmails(@Nullable Output<List<String>> allowedEmails) {
            $.allowedEmails = allowedEmails;
            return this;
        }

        /**
         * @param allowedEmails Array of contact emails
         * 
         * @return builder
         * 
         */
        public Builder allowedEmails(List<String> allowedEmails) {
            return allowedEmails(Output.of(allowedEmails));
        }

        /**
         * @param allowedEmails Array of contact emails
         * 
         * @return builder
         * 
         */
        public Builder allowedEmails(String... allowedEmails) {
            return allowedEmails(List.of(allowedEmails));
        }

        /**
         * @param changeLogs Captures connection lifecycle change information
         * 
         * @return builder
         * 
         */
        public Builder changeLogs(@Nullable Output<List<ServiceProfileChangeLogArgs>> changeLogs) {
            $.changeLogs = changeLogs;
            return this;
        }

        /**
         * @param changeLogs Captures connection lifecycle change information
         * 
         * @return builder
         * 
         */
        public Builder changeLogs(List<ServiceProfileChangeLogArgs> changeLogs) {
            return changeLogs(Output.of(changeLogs));
        }

        /**
         * @param changeLogs Captures connection lifecycle change information
         * 
         * @return builder
         * 
         */
        public Builder changeLogs(ServiceProfileChangeLogArgs... changeLogs) {
            return changeLogs(List.of(changeLogs));
        }

        /**
         * @param customFields Custom Fields
         * 
         * @return builder
         * 
         */
        public Builder customFields(@Nullable Output<List<ServiceProfileCustomFieldArgs>> customFields) {
            $.customFields = customFields;
            return this;
        }

        /**
         * @param customFields Custom Fields
         * 
         * @return builder
         * 
         */
        public Builder customFields(List<ServiceProfileCustomFieldArgs> customFields) {
            return customFields(Output.of(customFields));
        }

        /**
         * @param customFields Custom Fields
         * 
         * @return builder
         * 
         */
        public Builder customFields(ServiceProfileCustomFieldArgs... customFields) {
            return customFields(List.of(customFields));
        }

        /**
         * @param description User-provided service description
         * 
         * @return builder
         * 
         */
        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        /**
         * @param description User-provided service description
         * 
         * @return builder
         * 
         */
        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param href Service Profile URI response attribute
         * 
         * @return builder
         * 
         */
        public Builder href(@Nullable Output<String> href) {
            $.href = href;
            return this;
        }

        /**
         * @param href Service Profile URI response attribute
         * 
         * @return builder
         * 
         */
        public Builder href(String href) {
            return href(Output.of(href));
        }

        /**
         * @param marketingInfos Marketing Info
         * 
         * @return builder
         * 
         */
        public Builder marketingInfos(@Nullable Output<List<ServiceProfileMarketingInfoArgs>> marketingInfos) {
            $.marketingInfos = marketingInfos;
            return this;
        }

        /**
         * @param marketingInfos Marketing Info
         * 
         * @return builder
         * 
         */
        public Builder marketingInfos(List<ServiceProfileMarketingInfoArgs> marketingInfos) {
            return marketingInfos(Output.of(marketingInfos));
        }

        /**
         * @param marketingInfos Marketing Info
         * 
         * @return builder
         * 
         */
        public Builder marketingInfos(ServiceProfileMarketingInfoArgs... marketingInfos) {
            return marketingInfos(List.of(marketingInfos));
        }

        /**
         * @param metros Access point config information
         * 
         * @return builder
         * 
         */
        public Builder metros(@Nullable Output<List<ServiceProfileMetroArgs>> metros) {
            $.metros = metros;
            return this;
        }

        /**
         * @param metros Access point config information
         * 
         * @return builder
         * 
         */
        public Builder metros(List<ServiceProfileMetroArgs> metros) {
            return metros(Output.of(metros));
        }

        /**
         * @param metros Access point config information
         * 
         * @return builder
         * 
         */
        public Builder metros(ServiceProfileMetroArgs... metros) {
            return metros(List.of(metros));
        }

        /**
         * @param name Customer-assigned service profile name
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Customer-assigned service profile name
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param notifications Preferences for notifications on connection configuration or status changes
         * 
         * @return builder
         * 
         */
        public Builder notifications(@Nullable Output<List<ServiceProfileNotificationArgs>> notifications) {
            $.notifications = notifications;
            return this;
        }

        /**
         * @param notifications Preferences for notifications on connection configuration or status changes
         * 
         * @return builder
         * 
         */
        public Builder notifications(List<ServiceProfileNotificationArgs> notifications) {
            return notifications(Output.of(notifications));
        }

        /**
         * @param notifications Preferences for notifications on connection configuration or status changes
         * 
         * @return builder
         * 
         */
        public Builder notifications(ServiceProfileNotificationArgs... notifications) {
            return notifications(List.of(notifications));
        }

        /**
         * @param ports Ports
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<ServiceProfilePortArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports Ports
         * 
         * @return builder
         * 
         */
        public Builder ports(List<ServiceProfilePortArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports Ports
         * 
         * @return builder
         * 
         */
        public Builder ports(ServiceProfilePortArgs... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param projects Project information
         * 
         * @return builder
         * 
         */
        public Builder projects(@Nullable Output<List<ServiceProfileProjectArgs>> projects) {
            $.projects = projects;
            return this;
        }

        /**
         * @param projects Project information
         * 
         * @return builder
         * 
         */
        public Builder projects(List<ServiceProfileProjectArgs> projects) {
            return projects(Output.of(projects));
        }

        /**
         * @param projects Project information
         * 
         * @return builder
         * 
         */
        public Builder projects(ServiceProfileProjectArgs... projects) {
            return projects(List.of(projects));
        }

        /**
         * @param selfProfile Self Profile
         * 
         * @return builder
         * 
         */
        public Builder selfProfile(@Nullable Output<Boolean> selfProfile) {
            $.selfProfile = selfProfile;
            return this;
        }

        /**
         * @param selfProfile Self Profile
         * 
         * @return builder
         * 
         */
        public Builder selfProfile(Boolean selfProfile) {
            return selfProfile(Output.of(selfProfile));
        }

        /**
         * @param state Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
         * 
         * @return builder
         * 
         */
        public Builder state(@Nullable Output<Either<String,ProfileState>> state) {
            $.state = state;
            return this;
        }

        /**
         * @param state Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
         * 
         * @return builder
         * 
         */
        public Builder state(Either<String,ProfileState> state) {
            return state(Output.of(state));
        }

        /**
         * @param state Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
         * 
         * @return builder
         * 
         */
        public Builder state(String state) {
            return state(Either.ofLeft(state));
        }

        /**
         * @param state Service profile state - ACTIVE, PENDING_APPROVAL, DELETED, REJECTED
         * 
         * @return builder
         * 
         */
        public Builder state(ProfileState state) {
            return state(Either.ofRight(state));
        }

        /**
         * @param tags Tags attached to the connection
         * 
         * @return builder
         * 
         */
        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        /**
         * @param tags Tags attached to the connection
         * 
         * @return builder
         * 
         */
        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        /**
         * @param tags Tags attached to the connection
         * 
         * @return builder
         * 
         */
        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        /**
         * @param type Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<Either<String,ProfileType>> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
         * 
         * @return builder
         * 
         */
        public Builder type(Either<String,ProfileType> type) {
            return type(Output.of(type));
        }

        /**
         * @param type Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Either.ofLeft(type));
        }

        /**
         * @param type Service profile type - L2*PROFILE, L3*PROFILE, ECIA*PROFILE, ECMC*PROFILE
         * 
         * @return builder
         * 
         */
        public Builder type(ProfileType type) {
            return type(Either.ofRight(type));
        }

        /**
         * @param uuid Equinix assigned service profile identifier
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid Equinix assigned service profile identifier
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        /**
         * @param virtualDevices Virtual Devices
         * 
         * @return builder
         * 
         */
        public Builder virtualDevices(@Nullable Output<List<ServiceProfileVirtualDeviceArgs>> virtualDevices) {
            $.virtualDevices = virtualDevices;
            return this;
        }

        /**
         * @param virtualDevices Virtual Devices
         * 
         * @return builder
         * 
         */
        public Builder virtualDevices(List<ServiceProfileVirtualDeviceArgs> virtualDevices) {
            return virtualDevices(Output.of(virtualDevices));
        }

        /**
         * @param virtualDevices Virtual Devices
         * 
         * @return builder
         * 
         */
        public Builder virtualDevices(ServiceProfileVirtualDeviceArgs... virtualDevices) {
            return virtualDevices(List.of(virtualDevices));
        }

        /**
         * @param visibility Service profile visibility - PUBLIC, PRIVATE
         * 
         * @return builder
         * 
         */
        public Builder visibility(@Nullable Output<Either<String,ProfileVisibility>> visibility) {
            $.visibility = visibility;
            return this;
        }

        /**
         * @param visibility Service profile visibility - PUBLIC, PRIVATE
         * 
         * @return builder
         * 
         */
        public Builder visibility(Either<String,ProfileVisibility> visibility) {
            return visibility(Output.of(visibility));
        }

        /**
         * @param visibility Service profile visibility - PUBLIC, PRIVATE
         * 
         * @return builder
         * 
         */
        public Builder visibility(String visibility) {
            return visibility(Either.ofLeft(visibility));
        }

        /**
         * @param visibility Service profile visibility - PUBLIC, PRIVATE
         * 
         * @return builder
         * 
         */
        public Builder visibility(ProfileVisibility visibility) {
            return visibility(Either.ofRight(visibility));
        }

        public ServiceProfileState build() {
            return $;
        }
    }

}
