// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortOrderPurchaseOrderArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortOrderPurchaseOrderArgs Empty = new PortOrderPurchaseOrderArgs();

    /**
     * purchase order amount
     * 
     */
    @Import(name="amount")
    private @Nullable Output<String> amount;

    /**
     * @return purchase order amount
     * 
     */
    public Optional<Output<String>> amount() {
        return Optional.ofNullable(this.amount);
    }

    /**
     * purchase order attachment id
     * 
     */
    @Import(name="attachmentId")
    private @Nullable Output<String> attachmentId;

    /**
     * @return purchase order attachment id
     * 
     */
    public Optional<Output<String>> attachmentId() {
        return Optional.ofNullable(this.attachmentId);
    }

    /**
     * purchase order end date
     * 
     */
    @Import(name="endDate")
    private @Nullable Output<String> endDate;

    /**
     * @return purchase order end date
     * 
     */
    public Optional<Output<String>> endDate() {
        return Optional.ofNullable(this.endDate);
    }

    /**
     * purchase order number
     * 
     */
    @Import(name="number")
    private @Nullable Output<String> number;

    /**
     * @return purchase order number
     * 
     */
    public Optional<Output<String>> number() {
        return Optional.ofNullable(this.number);
    }

    /**
     * purchase order start date
     * 
     */
    @Import(name="startDate")
    private @Nullable Output<String> startDate;

    /**
     * @return purchase order start date
     * 
     */
    public Optional<Output<String>> startDate() {
        return Optional.ofNullable(this.startDate);
    }

    /**
     * purchase order type
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return purchase order type
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PortOrderPurchaseOrderArgs() {}

    private PortOrderPurchaseOrderArgs(PortOrderPurchaseOrderArgs $) {
        this.amount = $.amount;
        this.attachmentId = $.attachmentId;
        this.endDate = $.endDate;
        this.number = $.number;
        this.startDate = $.startDate;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortOrderPurchaseOrderArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortOrderPurchaseOrderArgs $;

        public Builder() {
            $ = new PortOrderPurchaseOrderArgs();
        }

        public Builder(PortOrderPurchaseOrderArgs defaults) {
            $ = new PortOrderPurchaseOrderArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param amount purchase order amount
         * 
         * @return builder
         * 
         */
        public Builder amount(@Nullable Output<String> amount) {
            $.amount = amount;
            return this;
        }

        /**
         * @param amount purchase order amount
         * 
         * @return builder
         * 
         */
        public Builder amount(String amount) {
            return amount(Output.of(amount));
        }

        /**
         * @param attachmentId purchase order attachment id
         * 
         * @return builder
         * 
         */
        public Builder attachmentId(@Nullable Output<String> attachmentId) {
            $.attachmentId = attachmentId;
            return this;
        }

        /**
         * @param attachmentId purchase order attachment id
         * 
         * @return builder
         * 
         */
        public Builder attachmentId(String attachmentId) {
            return attachmentId(Output.of(attachmentId));
        }

        /**
         * @param endDate purchase order end date
         * 
         * @return builder
         * 
         */
        public Builder endDate(@Nullable Output<String> endDate) {
            $.endDate = endDate;
            return this;
        }

        /**
         * @param endDate purchase order end date
         * 
         * @return builder
         * 
         */
        public Builder endDate(String endDate) {
            return endDate(Output.of(endDate));
        }

        /**
         * @param number purchase order number
         * 
         * @return builder
         * 
         */
        public Builder number(@Nullable Output<String> number) {
            $.number = number;
            return this;
        }

        /**
         * @param number purchase order number
         * 
         * @return builder
         * 
         */
        public Builder number(String number) {
            return number(Output.of(number));
        }

        /**
         * @param startDate purchase order start date
         * 
         * @return builder
         * 
         */
        public Builder startDate(@Nullable Output<String> startDate) {
            $.startDate = startDate;
            return this;
        }

        /**
         * @param startDate purchase order start date
         * 
         * @return builder
         * 
         */
        public Builder startDate(String startDate) {
            return startDate(Output.of(startDate));
        }

        /**
         * @param type purchase order type
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type purchase order type
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PortOrderPurchaseOrderArgs build() {
            return $;
        }
    }

}
