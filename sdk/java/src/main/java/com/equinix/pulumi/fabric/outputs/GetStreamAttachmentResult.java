// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class GetStreamAttachmentResult {
    /**
     * @return Equinix defined asset category. Matches the product name the asset is a part of
     * 
     */
    private String asset;
    /**
     * @return Equinix defined UUID of the asset being attached to the stream
     * 
     */
    private String assetId;
    /**
     * @return Value representing status for the stream attachment
     * 
     */
    private String attachmentStatus;
    /**
     * @return Equinix auto generated URI to the stream attachment in Equinix Portal
     * 
     */
    private String href;
    /**
     * @return The unique identifier of the resource
     * 
     */
    private String id;
    /**
     * @return Boolean value indicating enablement of metrics for this asset stream attachment
     * 
     */
    private Boolean metricsEnabled;
    /**
     * @return The uuid of the stream this data source should retrieve
     * 
     */
    private String streamId;
    /**
     * @return Equinix defined type for the asset stream attachment
     * 
     */
    private String type;
    /**
     * @return Equinix-assigned unique id for the stream attachment
     * 
     */
    private String uuid;

    private GetStreamAttachmentResult() {}
    /**
     * @return Equinix defined asset category. Matches the product name the asset is a part of
     * 
     */
    public String asset() {
        return this.asset;
    }
    /**
     * @return Equinix defined UUID of the asset being attached to the stream
     * 
     */
    public String assetId() {
        return this.assetId;
    }
    /**
     * @return Value representing status for the stream attachment
     * 
     */
    public String attachmentStatus() {
        return this.attachmentStatus;
    }
    /**
     * @return Equinix auto generated URI to the stream attachment in Equinix Portal
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return The unique identifier of the resource
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return Boolean value indicating enablement of metrics for this asset stream attachment
     * 
     */
    public Boolean metricsEnabled() {
        return this.metricsEnabled;
    }
    /**
     * @return The uuid of the stream this data source should retrieve
     * 
     */
    public String streamId() {
        return this.streamId;
    }
    /**
     * @return Equinix defined type for the asset stream attachment
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Equinix-assigned unique id for the stream attachment
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetStreamAttachmentResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String asset;
        private String assetId;
        private String attachmentStatus;
        private String href;
        private String id;
        private Boolean metricsEnabled;
        private String streamId;
        private String type;
        private String uuid;
        public Builder() {}
        public Builder(GetStreamAttachmentResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.asset = defaults.asset;
    	      this.assetId = defaults.assetId;
    	      this.attachmentStatus = defaults.attachmentStatus;
    	      this.href = defaults.href;
    	      this.id = defaults.id;
    	      this.metricsEnabled = defaults.metricsEnabled;
    	      this.streamId = defaults.streamId;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder asset(String asset) {
            if (asset == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "asset");
            }
            this.asset = asset;
            return this;
        }
        @CustomType.Setter
        public Builder assetId(String assetId) {
            if (assetId == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "assetId");
            }
            this.assetId = assetId;
            return this;
        }
        @CustomType.Setter
        public Builder attachmentStatus(String attachmentStatus) {
            if (attachmentStatus == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "attachmentStatus");
            }
            this.attachmentStatus = attachmentStatus;
            return this;
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder metricsEnabled(Boolean metricsEnabled) {
            if (metricsEnabled == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "metricsEnabled");
            }
            this.metricsEnabled = metricsEnabled;
            return this;
        }
        @CustomType.Setter
        public Builder streamId(String streamId) {
            if (streamId == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "streamId");
            }
            this.streamId = streamId;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetStreamAttachmentResult", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetStreamAttachmentResult build() {
            final var _resultValue = new GetStreamAttachmentResult();
            _resultValue.asset = asset;
            _resultValue.assetId = assetId;
            _resultValue.attachmentStatus = attachmentStatus;
            _resultValue.href = href;
            _resultValue.id = id;
            _resultValue.metricsEnabled = metricsEnabled;
            _resultValue.streamId = streamId;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
