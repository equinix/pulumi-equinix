// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.PortPhysicalPortDemarcationPoint;
import com.equinix.pulumi.fabric.outputs.PortPhysicalPortInterface;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PortPhysicalPort {
    /**
     * @return Customer physical port
     * 
     */
    private PortPhysicalPortDemarcationPoint demarcationPoint;
    /**
     * @return Physical port interface
     * 
     */
    private @Nullable PortPhysicalPortInterface interface_;
    /**
     * @return Physical Port type
     * 
     */
    private String type;

    private PortPhysicalPort() {}
    /**
     * @return Customer physical port
     * 
     */
    public PortPhysicalPortDemarcationPoint demarcationPoint() {
        return this.demarcationPoint;
    }
    /**
     * @return Physical port interface
     * 
     */
    public Optional<PortPhysicalPortInterface> interface_() {
        return Optional.ofNullable(this.interface_);
    }
    /**
     * @return Physical Port type
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortPhysicalPort defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private PortPhysicalPortDemarcationPoint demarcationPoint;
        private @Nullable PortPhysicalPortInterface interface_;
        private String type;
        public Builder() {}
        public Builder(PortPhysicalPort defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.demarcationPoint = defaults.demarcationPoint;
    	      this.interface_ = defaults.interface_;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder demarcationPoint(PortPhysicalPortDemarcationPoint demarcationPoint) {
            if (demarcationPoint == null) {
              throw new MissingRequiredPropertyException("PortPhysicalPort", "demarcationPoint");
            }
            this.demarcationPoint = demarcationPoint;
            return this;
        }
        @CustomType.Setter("interface")
        public Builder interface_(@Nullable PortPhysicalPortInterface interface_) {

            this.interface_ = interface_;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("PortPhysicalPort", "type");
            }
            this.type = type;
            return this;
        }
        public PortPhysicalPort build() {
            final var _resultValue = new PortPhysicalPort();
            _resultValue.demarcationPoint = demarcationPoint;
            _resultValue.interface_ = interface_;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
