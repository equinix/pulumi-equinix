// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.equinix.pulumi.metal.inputs.GetDevicesFilter;
import com.equinix.pulumi.metal.inputs.GetDevicesSort;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetDevicesPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetDevicesPlainArgs Empty = new GetDevicesPlainArgs();

    /**
     * One or more attribute/values pairs to filter. List of atributes to filter can be found in the attribute reference of the `equinix.metal.Device` datasource.
     * 
     */
    @Import(name="filters")
    private @Nullable List<GetDevicesFilter> filters;

    /**
     * @return One or more attribute/values pairs to filter. List of atributes to filter can be found in the attribute reference of the `equinix.metal.Device` datasource.
     * 
     */
    public Optional<List<GetDevicesFilter>> filters() {
        return Optional.ofNullable(this.filters);
    }

    /**
     * ID of organization containing the devices.
     * 
     */
    @Import(name="organizationId")
    private @Nullable String organizationId;

    /**
     * @return ID of organization containing the devices.
     * 
     */
    public Optional<String> organizationId() {
        return Optional.ofNullable(this.organizationId);
    }

    /**
     * ID of project containing the devices. Exactly one of `project_id` and `organization_id` must be set.
     * 
     */
    @Import(name="projectId")
    private @Nullable String projectId;

    /**
     * @return ID of project containing the devices. Exactly one of `project_id` and `organization_id` must be set.
     * 
     */
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Search string to filter devices by hostname, description, short_id, reservation short_id, tags, plan name, plan slug, facility code, facility name, operating system name, operating system slug, IP addresses.
     * 
     */
    @Import(name="search")
    private @Nullable String search;

    /**
     * @return Search string to filter devices by hostname, description, short_id, reservation short_id, tags, plan name, plan slug, facility code, facility name, operating system name, operating system slug, IP addresses.
     * 
     */
    public Optional<String> search() {
        return Optional.ofNullable(this.search);
    }

    @Import(name="sorts")
    private @Nullable List<GetDevicesSort> sorts;

    public Optional<List<GetDevicesSort>> sorts() {
        return Optional.ofNullable(this.sorts);
    }

    private GetDevicesPlainArgs() {}

    private GetDevicesPlainArgs(GetDevicesPlainArgs $) {
        this.filters = $.filters;
        this.organizationId = $.organizationId;
        this.projectId = $.projectId;
        this.search = $.search;
        this.sorts = $.sorts;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetDevicesPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetDevicesPlainArgs $;

        public Builder() {
            $ = new GetDevicesPlainArgs();
        }

        public Builder(GetDevicesPlainArgs defaults) {
            $ = new GetDevicesPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param filters One or more attribute/values pairs to filter. List of atributes to filter can be found in the attribute reference of the `equinix.metal.Device` datasource.
         * 
         * @return builder
         * 
         */
        public Builder filters(@Nullable List<GetDevicesFilter> filters) {
            $.filters = filters;
            return this;
        }

        /**
         * @param filters One or more attribute/values pairs to filter. List of atributes to filter can be found in the attribute reference of the `equinix.metal.Device` datasource.
         * 
         * @return builder
         * 
         */
        public Builder filters(GetDevicesFilter... filters) {
            return filters(List.of(filters));
        }

        /**
         * @param organizationId ID of organization containing the devices.
         * 
         * @return builder
         * 
         */
        public Builder organizationId(@Nullable String organizationId) {
            $.organizationId = organizationId;
            return this;
        }

        /**
         * @param projectId ID of project containing the devices. Exactly one of `project_id` and `organization_id` must be set.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param search Search string to filter devices by hostname, description, short_id, reservation short_id, tags, plan name, plan slug, facility code, facility name, operating system name, operating system slug, IP addresses.
         * 
         * @return builder
         * 
         */
        public Builder search(@Nullable String search) {
            $.search = search;
            return this;
        }

        public Builder sorts(@Nullable List<GetDevicesSort> sorts) {
            $.sorts = sorts;
            return this;
        }

        public Builder sorts(GetDevicesSort... sorts) {
            return sorts(List.of(sorts));
        }

        public GetDevicesPlainArgs build() {
            return $;
        }
    }

}
