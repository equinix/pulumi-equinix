// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetInterconnectionPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetInterconnectionPlainArgs Empty = new GetInterconnectionPlainArgs();

    /**
     * ID of the connection resource.
     * 
     */
    @Import(name="connectionId", required=true)
    private String connectionId;

    /**
     * @return ID of the connection resource.
     * 
     */
    public String connectionId() {
        return this.connectionId;
    }

    private GetInterconnectionPlainArgs() {}

    private GetInterconnectionPlainArgs(GetInterconnectionPlainArgs $) {
        this.connectionId = $.connectionId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetInterconnectionPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetInterconnectionPlainArgs $;

        public Builder() {
            $ = new GetInterconnectionPlainArgs();
        }

        public Builder(GetInterconnectionPlainArgs defaults) {
            $ = new GetInterconnectionPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param connectionId ID of the connection resource.
         * 
         * @return builder
         * 
         */
        public Builder connectionId(String connectionId) {
            $.connectionId = connectionId;
            return this;
        }

        public GetInterconnectionPlainArgs build() {
            if ($.connectionId == null) {
                throw new MissingRequiredPropertyException("GetInterconnectionPlainArgs", "connectionId");
            }
            return $;
        }
    }

}
