// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataAccount;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataChangeLog;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataLocation;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataMarketplaceSubscription;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataNotification;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataOrder;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataPackage;
import com.equinix.pulumi.fabric.outputs.GetCloudRoutersDataProject;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetCloudRoutersData {
    /**
     * @return Customer account information that is associated with this Fabric Cloud Router
     * 
     */
    private List<GetCloudRoutersDataAccount> accounts;
    /**
     * @return Captures Fabric Cloud Router lifecycle change information
     * 
     */
    private List<GetCloudRoutersDataChangeLog> changeLogs;
    /**
     * @return Number of connections associated with this Fabric Cloud Router instance
     * 
     */
    private Integer connectionsCount;
    /**
     * @return Customer-provided Fabric Cloud Router description
     * 
     */
    private String description;
    /**
     * @return Equinix ASN
     * 
     */
    private Integer equinixAsn;
    /**
     * @return Fabric Cloud Router URI information
     * 
     */
    private String href;
    /**
     * @return Fabric Cloud Router location
     * 
     */
    private List<GetCloudRoutersDataLocation> locations;
    /**
     * @return Equinix Fabric Entity for Marketplace Subscription
     * 
     */
    private List<GetCloudRoutersDataMarketplaceSubscription> marketplaceSubscriptions;
    /**
     * @return Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    private String name;
    /**
     * @return Preferences for notifications on Fabric Cloud Router configuration or status changes
     * 
     */
    private List<GetCloudRoutersDataNotification> notifications;
    /**
     * @return Order information related to this Fabric Cloud Router
     * 
     */
    private List<GetCloudRoutersDataOrder> orders;
    /**
     * @return Fabric Cloud Router Package Type
     * 
     */
    private List<GetCloudRoutersDataPackage> packages;
    /**
     * @return Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     * 
     */
    private List<GetCloudRoutersDataProject> projects;
    /**
     * @return Fabric Cloud Router overall state
     * 
     */
    private String state;
    /**
     * @return Defines the FCR type like; XF_ROUTER
     * 
     */
    private String type;
    /**
     * @return Equinix-assigned Fabric Cloud Router identifier
     * 
     */
    private String uuid;

    private GetCloudRoutersData() {}
    /**
     * @return Customer account information that is associated with this Fabric Cloud Router
     * 
     */
    public List<GetCloudRoutersDataAccount> accounts() {
        return this.accounts;
    }
    /**
     * @return Captures Fabric Cloud Router lifecycle change information
     * 
     */
    public List<GetCloudRoutersDataChangeLog> changeLogs() {
        return this.changeLogs;
    }
    /**
     * @return Number of connections associated with this Fabric Cloud Router instance
     * 
     */
    public Integer connectionsCount() {
        return this.connectionsCount;
    }
    /**
     * @return Customer-provided Fabric Cloud Router description
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return Equinix ASN
     * 
     */
    public Integer equinixAsn() {
        return this.equinixAsn;
    }
    /**
     * @return Fabric Cloud Router URI information
     * 
     */
    public String href() {
        return this.href;
    }
    /**
     * @return Fabric Cloud Router location
     * 
     */
    public List<GetCloudRoutersDataLocation> locations() {
        return this.locations;
    }
    /**
     * @return Equinix Fabric Entity for Marketplace Subscription
     * 
     */
    public List<GetCloudRoutersDataMarketplaceSubscription> marketplaceSubscriptions() {
        return this.marketplaceSubscriptions;
    }
    /**
     * @return Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Preferences for notifications on Fabric Cloud Router configuration or status changes
     * 
     */
    public List<GetCloudRoutersDataNotification> notifications() {
        return this.notifications;
    }
    /**
     * @return Order information related to this Fabric Cloud Router
     * 
     */
    public List<GetCloudRoutersDataOrder> orders() {
        return this.orders;
    }
    /**
     * @return Fabric Cloud Router Package Type
     * 
     */
    public List<GetCloudRoutersDataPackage> packages() {
        return this.packages;
    }
    /**
     * @return Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     * 
     */
    public List<GetCloudRoutersDataProject> projects() {
        return this.projects;
    }
    /**
     * @return Fabric Cloud Router overall state
     * 
     */
    public String state() {
        return this.state;
    }
    /**
     * @return Defines the FCR type like; XF_ROUTER
     * 
     */
    public String type() {
        return this.type;
    }
    /**
     * @return Equinix-assigned Fabric Cloud Router identifier
     * 
     */
    public String uuid() {
        return this.uuid;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetCloudRoutersData defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<GetCloudRoutersDataAccount> accounts;
        private List<GetCloudRoutersDataChangeLog> changeLogs;
        private Integer connectionsCount;
        private String description;
        private Integer equinixAsn;
        private String href;
        private List<GetCloudRoutersDataLocation> locations;
        private List<GetCloudRoutersDataMarketplaceSubscription> marketplaceSubscriptions;
        private String name;
        private List<GetCloudRoutersDataNotification> notifications;
        private List<GetCloudRoutersDataOrder> orders;
        private List<GetCloudRoutersDataPackage> packages;
        private List<GetCloudRoutersDataProject> projects;
        private String state;
        private String type;
        private String uuid;
        public Builder() {}
        public Builder(GetCloudRoutersData defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accounts = defaults.accounts;
    	      this.changeLogs = defaults.changeLogs;
    	      this.connectionsCount = defaults.connectionsCount;
    	      this.description = defaults.description;
    	      this.equinixAsn = defaults.equinixAsn;
    	      this.href = defaults.href;
    	      this.locations = defaults.locations;
    	      this.marketplaceSubscriptions = defaults.marketplaceSubscriptions;
    	      this.name = defaults.name;
    	      this.notifications = defaults.notifications;
    	      this.orders = defaults.orders;
    	      this.packages = defaults.packages;
    	      this.projects = defaults.projects;
    	      this.state = defaults.state;
    	      this.type = defaults.type;
    	      this.uuid = defaults.uuid;
        }

        @CustomType.Setter
        public Builder accounts(List<GetCloudRoutersDataAccount> accounts) {
            if (accounts == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "accounts");
            }
            this.accounts = accounts;
            return this;
        }
        public Builder accounts(GetCloudRoutersDataAccount... accounts) {
            return accounts(List.of(accounts));
        }
        @CustomType.Setter
        public Builder changeLogs(List<GetCloudRoutersDataChangeLog> changeLogs) {
            if (changeLogs == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "changeLogs");
            }
            this.changeLogs = changeLogs;
            return this;
        }
        public Builder changeLogs(GetCloudRoutersDataChangeLog... changeLogs) {
            return changeLogs(List.of(changeLogs));
        }
        @CustomType.Setter
        public Builder connectionsCount(Integer connectionsCount) {
            if (connectionsCount == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "connectionsCount");
            }
            this.connectionsCount = connectionsCount;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder equinixAsn(Integer equinixAsn) {
            if (equinixAsn == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "equinixAsn");
            }
            this.equinixAsn = equinixAsn;
            return this;
        }
        @CustomType.Setter
        public Builder href(String href) {
            if (href == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "href");
            }
            this.href = href;
            return this;
        }
        @CustomType.Setter
        public Builder locations(List<GetCloudRoutersDataLocation> locations) {
            if (locations == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "locations");
            }
            this.locations = locations;
            return this;
        }
        public Builder locations(GetCloudRoutersDataLocation... locations) {
            return locations(List.of(locations));
        }
        @CustomType.Setter
        public Builder marketplaceSubscriptions(List<GetCloudRoutersDataMarketplaceSubscription> marketplaceSubscriptions) {
            if (marketplaceSubscriptions == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "marketplaceSubscriptions");
            }
            this.marketplaceSubscriptions = marketplaceSubscriptions;
            return this;
        }
        public Builder marketplaceSubscriptions(GetCloudRoutersDataMarketplaceSubscription... marketplaceSubscriptions) {
            return marketplaceSubscriptions(List.of(marketplaceSubscriptions));
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder notifications(List<GetCloudRoutersDataNotification> notifications) {
            if (notifications == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "notifications");
            }
            this.notifications = notifications;
            return this;
        }
        public Builder notifications(GetCloudRoutersDataNotification... notifications) {
            return notifications(List.of(notifications));
        }
        @CustomType.Setter
        public Builder orders(List<GetCloudRoutersDataOrder> orders) {
            if (orders == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "orders");
            }
            this.orders = orders;
            return this;
        }
        public Builder orders(GetCloudRoutersDataOrder... orders) {
            return orders(List.of(orders));
        }
        @CustomType.Setter
        public Builder packages(List<GetCloudRoutersDataPackage> packages) {
            if (packages == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "packages");
            }
            this.packages = packages;
            return this;
        }
        public Builder packages(GetCloudRoutersDataPackage... packages) {
            return packages(List.of(packages));
        }
        @CustomType.Setter
        public Builder projects(List<GetCloudRoutersDataProject> projects) {
            if (projects == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "projects");
            }
            this.projects = projects;
            return this;
        }
        public Builder projects(GetCloudRoutersDataProject... projects) {
            return projects(List.of(projects));
        }
        @CustomType.Setter
        public Builder state(String state) {
            if (state == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "state");
            }
            this.state = state;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "type");
            }
            this.type = type;
            return this;
        }
        @CustomType.Setter
        public Builder uuid(String uuid) {
            if (uuid == null) {
              throw new MissingRequiredPropertyException("GetCloudRoutersData", "uuid");
            }
            this.uuid = uuid;
            return this;
        }
        public GetCloudRoutersData build() {
            final var _resultValue = new GetCloudRoutersData();
            _resultValue.accounts = accounts;
            _resultValue.changeLogs = changeLogs;
            _resultValue.connectionsCount = connectionsCount;
            _resultValue.description = description;
            _resultValue.equinixAsn = equinixAsn;
            _resultValue.href = href;
            _resultValue.locations = locations;
            _resultValue.marketplaceSubscriptions = marketplaceSubscriptions;
            _resultValue.name = name;
            _resultValue.notifications = notifications;
            _resultValue.orders = orders;
            _resultValue.packages = packages;
            _resultValue.projects = projects;
            _resultValue.state = state;
            _resultValue.type = type;
            _resultValue.uuid = uuid;
            return _resultValue;
        }
    }
}
