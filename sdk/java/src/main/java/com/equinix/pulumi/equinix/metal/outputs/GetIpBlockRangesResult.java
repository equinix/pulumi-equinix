// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.metal.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetIpBlockRangesResult {
    private @Nullable String facility;
    /**
     * @return list of CIDR expressions for Global IPv4 blocks in the project.
     * 
     */
    private List<String> globalIpv4s;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return list of CIDR expressions for IPv6 blocks in the project.
     * 
     */
    private List<String> ipv6s;
    private @Nullable String metro;
    /**
     * @return list of CIDR expressions for Private IPv4 blocks in the project.
     * 
     */
    private List<String> privateIpv4s;
    private String projectId;
    /**
     * @return list of CIDR expressions for Public IPv4 blocks in the project.
     * 
     */
    private List<String> publicIpv4s;

    private GetIpBlockRangesResult() {}
    public Optional<String> facility() {
        return Optional.ofNullable(this.facility);
    }
    /**
     * @return list of CIDR expressions for Global IPv4 blocks in the project.
     * 
     */
    public List<String> globalIpv4s() {
        return this.globalIpv4s;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return list of CIDR expressions for IPv6 blocks in the project.
     * 
     */
    public List<String> ipv6s() {
        return this.ipv6s;
    }
    public Optional<String> metro() {
        return Optional.ofNullable(this.metro);
    }
    /**
     * @return list of CIDR expressions for Private IPv4 blocks in the project.
     * 
     */
    public List<String> privateIpv4s() {
        return this.privateIpv4s;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return list of CIDR expressions for Public IPv4 blocks in the project.
     * 
     */
    public List<String> publicIpv4s() {
        return this.publicIpv4s;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetIpBlockRangesResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String facility;
        private List<String> globalIpv4s;
        private String id;
        private List<String> ipv6s;
        private @Nullable String metro;
        private List<String> privateIpv4s;
        private String projectId;
        private List<String> publicIpv4s;
        public Builder() {}
        public Builder(GetIpBlockRangesResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.facility = defaults.facility;
    	      this.globalIpv4s = defaults.globalIpv4s;
    	      this.id = defaults.id;
    	      this.ipv6s = defaults.ipv6s;
    	      this.metro = defaults.metro;
    	      this.privateIpv4s = defaults.privateIpv4s;
    	      this.projectId = defaults.projectId;
    	      this.publicIpv4s = defaults.publicIpv4s;
        }

        @CustomType.Setter
        public Builder facility(@Nullable String facility) {
            this.facility = facility;
            return this;
        }
        @CustomType.Setter
        public Builder globalIpv4s(List<String> globalIpv4s) {
            this.globalIpv4s = Objects.requireNonNull(globalIpv4s);
            return this;
        }
        public Builder globalIpv4s(String... globalIpv4s) {
            return globalIpv4s(List.of(globalIpv4s));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder ipv6s(List<String> ipv6s) {
            this.ipv6s = Objects.requireNonNull(ipv6s);
            return this;
        }
        public Builder ipv6s(String... ipv6s) {
            return ipv6s(List.of(ipv6s));
        }
        @CustomType.Setter
        public Builder metro(@Nullable String metro) {
            this.metro = metro;
            return this;
        }
        @CustomType.Setter
        public Builder privateIpv4s(List<String> privateIpv4s) {
            this.privateIpv4s = Objects.requireNonNull(privateIpv4s);
            return this;
        }
        public Builder privateIpv4s(String... privateIpv4s) {
            return privateIpv4s(List.of(privateIpv4s));
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder publicIpv4s(List<String> publicIpv4s) {
            this.publicIpv4s = Objects.requireNonNull(publicIpv4s);
            return this;
        }
        public Builder publicIpv4s(String... publicIpv4s) {
            return publicIpv4s(List.of(publicIpv4s));
        }
        public GetIpBlockRangesResult build() {
            final var o = new GetIpBlockRangesResult();
            o.facility = facility;
            o.globalIpv4s = globalIpv4s;
            o.id = id;
            o.ipv6s = ipv6s;
            o.metro = metro;
            o.privateIpv4s = privateIpv4s;
            o.projectId = projectId;
            o.publicIpv4s = publicIpv4s;
            return o;
        }
    }
}
