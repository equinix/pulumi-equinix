// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.equinix.pulumi.fabric.inputs.PortOrderSignatureDelegateArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class PortOrderSignatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortOrderSignatureArgs Empty = new PortOrderSignatureArgs();

    /**
     * delegate order details
     * 
     */
    @Import(name="delegate", required=true)
    private Output<PortOrderSignatureDelegateArgs> delegate;

    /**
     * @return delegate order details
     * 
     */
    public Output<PortOrderSignatureDelegateArgs> delegate() {
        return this.delegate;
    }

    /**
     * Port signature Type
     * 
     */
    @Import(name="signatory", required=true)
    private Output<String> signatory;

    /**
     * @return Port signature Type
     * 
     */
    public Output<String> signatory() {
        return this.signatory;
    }

    private PortOrderSignatureArgs() {}

    private PortOrderSignatureArgs(PortOrderSignatureArgs $) {
        this.delegate = $.delegate;
        this.signatory = $.signatory;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortOrderSignatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortOrderSignatureArgs $;

        public Builder() {
            $ = new PortOrderSignatureArgs();
        }

        public Builder(PortOrderSignatureArgs defaults) {
            $ = new PortOrderSignatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param delegate delegate order details
         * 
         * @return builder
         * 
         */
        public Builder delegate(Output<PortOrderSignatureDelegateArgs> delegate) {
            $.delegate = delegate;
            return this;
        }

        /**
         * @param delegate delegate order details
         * 
         * @return builder
         * 
         */
        public Builder delegate(PortOrderSignatureDelegateArgs delegate) {
            return delegate(Output.of(delegate));
        }

        /**
         * @param signatory Port signature Type
         * 
         * @return builder
         * 
         */
        public Builder signatory(Output<String> signatory) {
            $.signatory = signatory;
            return this;
        }

        /**
         * @param signatory Port signature Type
         * 
         * @return builder
         * 
         */
        public Builder signatory(String signatory) {
            return signatory(Output.of(signatory));
        }

        public PortOrderSignatureArgs build() {
            if ($.delegate == null) {
                throw new MissingRequiredPropertyException("PortOrderSignatureArgs", "delegate");
            }
            if ($.signatory == null) {
                throw new MissingRequiredPropertyException("PortOrderSignatureArgs", "signatory");
            }
            return $;
        }
    }

}
