// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetOperatingSystemArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetOperatingSystemArgs Empty = new GetOperatingSystemArgs();

    /**
     * Name of the OS distribution.
     * 
     */
    @Import(name="distro")
    private @Nullable Output<String> distro;

    /**
     * @return Name of the OS distribution.
     * 
     */
    public Optional<Output<String>> distro() {
        return Optional.ofNullable(this.distro);
    }

    /**
     * Name or part of the name of the distribution. Case insensitive.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name or part of the name of the distribution. Case insensitive.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Plan name.
     * 
     */
    @Import(name="provisionableOn")
    private @Nullable Output<String> provisionableOn;

    /**
     * @return Plan name.
     * 
     */
    public Optional<Output<String>> provisionableOn() {
        return Optional.ofNullable(this.provisionableOn);
    }

    /**
     * Version of the distribution.
     * 
     */
    @Import(name="version")
    private @Nullable Output<String> version;

    /**
     * @return Version of the distribution.
     * 
     */
    public Optional<Output<String>> version() {
        return Optional.ofNullable(this.version);
    }

    private GetOperatingSystemArgs() {}

    private GetOperatingSystemArgs(GetOperatingSystemArgs $) {
        this.distro = $.distro;
        this.name = $.name;
        this.provisionableOn = $.provisionableOn;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetOperatingSystemArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetOperatingSystemArgs $;

        public Builder() {
            $ = new GetOperatingSystemArgs();
        }

        public Builder(GetOperatingSystemArgs defaults) {
            $ = new GetOperatingSystemArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param distro Name of the OS distribution.
         * 
         * @return builder
         * 
         */
        public Builder distro(@Nullable Output<String> distro) {
            $.distro = distro;
            return this;
        }

        /**
         * @param distro Name of the OS distribution.
         * 
         * @return builder
         * 
         */
        public Builder distro(String distro) {
            return distro(Output.of(distro));
        }

        /**
         * @param name Name or part of the name of the distribution. Case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name or part of the name of the distribution. Case insensitive.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param provisionableOn Plan name.
         * 
         * @return builder
         * 
         */
        public Builder provisionableOn(@Nullable Output<String> provisionableOn) {
            $.provisionableOn = provisionableOn;
            return this;
        }

        /**
         * @param provisionableOn Plan name.
         * 
         * @return builder
         * 
         */
        public Builder provisionableOn(String provisionableOn) {
            return provisionableOn(Output.of(provisionableOn));
        }

        /**
         * @param version Version of the distribution.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<String> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version Version of the distribution.
         * 
         * @return builder
         * 
         */
        public Builder version(String version) {
            return version(Output.of(version));
        }

        public GetOperatingSystemArgs build() {
            return $;
        }
    }

}
