// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal;

import com.equinix.pulumi.Utilities;
import com.equinix.pulumi.metal.SpotMarketRequestArgs;
import com.equinix.pulumi.metal.inputs.SpotMarketRequestState;
import com.equinix.pulumi.metal.outputs.SpotMarketRequestInstanceParameters;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.Double;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Provides an Equinix Metal Spot Market Request resource to allow you to manage spot market requests on your account. For more detail on Spot Market, see [this article in Equinix Metal documentation](https://metal.equinix.com/developers/docs/deploy/spot-market/).
 * 
 * ## Example Usage
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.equinix.metal.SpotMarketRequest;
 * import com.pulumi.equinix.metal.SpotMarketRequestArgs;
 * import com.pulumi.equinix.metal.inputs.SpotMarketRequestInstanceParametersArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var req = new SpotMarketRequest("req", SpotMarketRequestArgs.builder()
 *             .projectId(projectId)
 *             .maxBidPrice(0.03)
 *             .metro("ny")
 *             .devicesMin(1)
 *             .devicesMax(1)
 *             .instanceParameters(SpotMarketRequestInstanceParametersArgs.builder()
 *                 .hostname("testspot")
 *                 .billingCycle("hourly")
 *                 .operatingSystem("ubuntu_20_04")
 *                 .plan("c3.small.x86")
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * This resource can be imported using an existing spot market request ID:
 * 
 * ```sh
 * $ pulumi import equinix:metal/spotMarketRequest:SpotMarketRequest equinix_metal_spot_market_request {existing_spot_market_request_id}
 * ```
 * 
 */
@ResourceType(type="equinix:metal/spotMarketRequest:SpotMarketRequest")
public class SpotMarketRequest extends com.pulumi.resources.CustomResource {
    /**
     * Maximum number devices to be created.
     * 
     */
    @Export(name="devicesMax", refs={Integer.class}, tree="[0]")
    private Output<Integer> devicesMax;

    /**
     * @return Maximum number devices to be created.
     * 
     */
    public Output<Integer> devicesMax() {
        return this.devicesMax;
    }
    /**
     * Miniumum number devices to be created.
     * 
     */
    @Export(name="devicesMin", refs={Integer.class}, tree="[0]")
    private Output<Integer> devicesMin;

    /**
     * @return Miniumum number devices to be created.
     * 
     */
    public Output<Integer> devicesMin() {
        return this.devicesMin;
    }
    /**
     * Facility IDs where devices should be created. Use metro instead; read the facility to metro migration guide
     * 
     * @deprecated
     * Use metro instead of facility.  For more information, read the migration guide: https://registry.terraform.io/providers/equinix/equinix/latest/docs/guides/migration_guide_facilities_to_metros_devices
     * 
     */
    @Deprecated /* Use metro instead of facility.  For more information, read the migration guide: https://registry.terraform.io/providers/equinix/equinix/latest/docs/guides/migration_guide_facilities_to_metros_devices */
    @Export(name="facilities", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> facilities;

    /**
     * @return Facility IDs where devices should be created. Use metro instead; read the facility to metro migration guide
     * 
     */
    public Output<List<String>> facilities() {
        return this.facilities;
    }
    /**
     * Key/Value pairs of parameters for devices provisioned from this request. Valid keys are: `billing_cycle`, `plan`, `operating_system`, `hostname`, `termination_time`, `always_pxe`, `description`, `features`, `locked`, `project_ssh_keys`, `user_ssh_keys`, `userdata`, `customdata`, `ipxe_script_url`, `tags`. You can find each parameter description in equinix.metal.Device docs.
     * 
     */
    @Export(name="instanceParameters", refs={SpotMarketRequestInstanceParameters.class}, tree="[0]")
    private Output<SpotMarketRequestInstanceParameters> instanceParameters;

    /**
     * @return Key/Value pairs of parameters for devices provisioned from this request. Valid keys are: `billing_cycle`, `plan`, `operating_system`, `hostname`, `termination_time`, `always_pxe`, `description`, `features`, `locked`, `project_ssh_keys`, `user_ssh_keys`, `userdata`, `customdata`, `ipxe_script_url`, `tags`. You can find each parameter description in equinix.metal.Device docs.
     * 
     */
    public Output<SpotMarketRequestInstanceParameters> instanceParameters() {
        return this.instanceParameters;
    }
    /**
     * Maximum price user is willing to pay per hour per device.
     * 
     */
    @Export(name="maxBidPrice", refs={Double.class}, tree="[0]")
    private Output<Double> maxBidPrice;

    /**
     * @return Maximum price user is willing to pay per hour per device.
     * 
     */
    public Output<Double> maxBidPrice() {
        return this.maxBidPrice;
    }
    /**
     * Metro where devices should be created.
     * 
     */
    @Export(name="metro", refs={String.class}, tree="[0]")
    private Output</* @Nullable */ String> metro;

    /**
     * @return Metro where devices should be created.
     * 
     */
    public Output<Optional<String>> metro() {
        return Codegen.optional(this.metro);
    }
    /**
     * Project ID.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return Project ID.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * On resource creation wait until all desired devices are active. On resource destruction wait until devices are removed.
     * 
     */
    @Export(name="waitForDevices", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> waitForDevices;

    /**
     * @return On resource creation wait until all desired devices are active. On resource destruction wait until devices are removed.
     * 
     */
    public Output<Optional<Boolean>> waitForDevices() {
        return Codegen.optional(this.waitForDevices);
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public SpotMarketRequest(String name) {
        this(name, SpotMarketRequestArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public SpotMarketRequest(String name, SpotMarketRequestArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public SpotMarketRequest(String name, SpotMarketRequestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:metal/spotMarketRequest:SpotMarketRequest", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()));
    }

    private SpotMarketRequest(String name, Output<String> id, @Nullable SpotMarketRequestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("equinix:metal/spotMarketRequest:SpotMarketRequest", name, state, makeResourceOptions(options, id));
    }

    private static SpotMarketRequestArgs makeArgs(SpotMarketRequestArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? SpotMarketRequestArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static SpotMarketRequest get(String name, Output<String> id, @Nullable SpotMarketRequestState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new SpotMarketRequest(name, id, state, options);
    }
}
