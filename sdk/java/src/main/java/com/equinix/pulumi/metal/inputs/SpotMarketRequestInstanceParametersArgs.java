// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.metal.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class SpotMarketRequestInstanceParametersArgs extends com.pulumi.resources.ResourceArgs {

    public static final SpotMarketRequestInstanceParametersArgs Empty = new SpotMarketRequestInstanceParametersArgs();

    @Import(name="alwaysPxe")
    private @Nullable Output<Boolean> alwaysPxe;

    public Optional<Output<Boolean>> alwaysPxe() {
        return Optional.ofNullable(this.alwaysPxe);
    }

    @Import(name="billingCycle", required=true)
    private Output<String> billingCycle;

    public Output<String> billingCycle() {
        return this.billingCycle;
    }

    @Import(name="customdata")
    private @Nullable Output<String> customdata;

    public Optional<Output<String>> customdata() {
        return Optional.ofNullable(this.customdata);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    @Import(name="features")
    private @Nullable Output<List<String>> features;

    public Optional<Output<List<String>>> features() {
        return Optional.ofNullable(this.features);
    }

    @Import(name="hostname", required=true)
    private Output<String> hostname;

    public Output<String> hostname() {
        return this.hostname;
    }

    @Import(name="ipxeScriptUrl")
    private @Nullable Output<String> ipxeScriptUrl;

    public Optional<Output<String>> ipxeScriptUrl() {
        return Optional.ofNullable(this.ipxeScriptUrl);
    }

    /**
     * Blocks deletion of the SpotMarketRequest device until the lock is disabled.
     * 
     */
    @Import(name="locked")
    private @Nullable Output<Boolean> locked;

    /**
     * @return Blocks deletion of the SpotMarketRequest device until the lock is disabled.
     * 
     */
    public Optional<Output<Boolean>> locked() {
        return Optional.ofNullable(this.locked);
    }

    @Import(name="operatingSystem", required=true)
    private Output<String> operatingSystem;

    public Output<String> operatingSystem() {
        return this.operatingSystem;
    }

    @Import(name="plan", required=true)
    private Output<String> plan;

    public Output<String> plan() {
        return this.plan;
    }

    @Import(name="projectSshKeys")
    private @Nullable Output<List<String>> projectSshKeys;

    public Optional<Output<List<String>>> projectSshKeys() {
        return Optional.ofNullable(this.projectSshKeys);
    }

    @Import(name="tags")
    private @Nullable Output<List<String>> tags;

    public Optional<Output<List<String>>> tags() {
        return Optional.ofNullable(this.tags);
    }

    @Import(name="terminationTime")
    private @Nullable Output<String> terminationTime;

    public Optional<Output<String>> terminationTime() {
        return Optional.ofNullable(this.terminationTime);
    }

    /**
     * @deprecated
     * Use instance_parameters.termination_time instead
     * 
     */
    @Deprecated /* Use instance_parameters.termination_time instead */
    @Import(name="termintationTime")
    private @Nullable Output<String> termintationTime;

    /**
     * @deprecated
     * Use instance_parameters.termination_time instead
     * 
     */
    @Deprecated /* Use instance_parameters.termination_time instead */
    public Optional<Output<String>> termintationTime() {
        return Optional.ofNullable(this.termintationTime);
    }

    @Import(name="userSshKeys")
    private @Nullable Output<List<String>> userSshKeys;

    public Optional<Output<List<String>>> userSshKeys() {
        return Optional.ofNullable(this.userSshKeys);
    }

    @Import(name="userdata")
    private @Nullable Output<String> userdata;

    public Optional<Output<String>> userdata() {
        return Optional.ofNullable(this.userdata);
    }

    private SpotMarketRequestInstanceParametersArgs() {}

    private SpotMarketRequestInstanceParametersArgs(SpotMarketRequestInstanceParametersArgs $) {
        this.alwaysPxe = $.alwaysPxe;
        this.billingCycle = $.billingCycle;
        this.customdata = $.customdata;
        this.description = $.description;
        this.features = $.features;
        this.hostname = $.hostname;
        this.ipxeScriptUrl = $.ipxeScriptUrl;
        this.locked = $.locked;
        this.operatingSystem = $.operatingSystem;
        this.plan = $.plan;
        this.projectSshKeys = $.projectSshKeys;
        this.tags = $.tags;
        this.terminationTime = $.terminationTime;
        this.termintationTime = $.termintationTime;
        this.userSshKeys = $.userSshKeys;
        this.userdata = $.userdata;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(SpotMarketRequestInstanceParametersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private SpotMarketRequestInstanceParametersArgs $;

        public Builder() {
            $ = new SpotMarketRequestInstanceParametersArgs();
        }

        public Builder(SpotMarketRequestInstanceParametersArgs defaults) {
            $ = new SpotMarketRequestInstanceParametersArgs(Objects.requireNonNull(defaults));
        }

        public Builder alwaysPxe(@Nullable Output<Boolean> alwaysPxe) {
            $.alwaysPxe = alwaysPxe;
            return this;
        }

        public Builder alwaysPxe(Boolean alwaysPxe) {
            return alwaysPxe(Output.of(alwaysPxe));
        }

        public Builder billingCycle(Output<String> billingCycle) {
            $.billingCycle = billingCycle;
            return this;
        }

        public Builder billingCycle(String billingCycle) {
            return billingCycle(Output.of(billingCycle));
        }

        public Builder customdata(@Nullable Output<String> customdata) {
            $.customdata = customdata;
            return this;
        }

        public Builder customdata(String customdata) {
            return customdata(Output.of(customdata));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        public Builder features(@Nullable Output<List<String>> features) {
            $.features = features;
            return this;
        }

        public Builder features(List<String> features) {
            return features(Output.of(features));
        }

        public Builder features(String... features) {
            return features(List.of(features));
        }

        public Builder hostname(Output<String> hostname) {
            $.hostname = hostname;
            return this;
        }

        public Builder hostname(String hostname) {
            return hostname(Output.of(hostname));
        }

        public Builder ipxeScriptUrl(@Nullable Output<String> ipxeScriptUrl) {
            $.ipxeScriptUrl = ipxeScriptUrl;
            return this;
        }

        public Builder ipxeScriptUrl(String ipxeScriptUrl) {
            return ipxeScriptUrl(Output.of(ipxeScriptUrl));
        }

        /**
         * @param locked Blocks deletion of the SpotMarketRequest device until the lock is disabled.
         * 
         * @return builder
         * 
         */
        public Builder locked(@Nullable Output<Boolean> locked) {
            $.locked = locked;
            return this;
        }

        /**
         * @param locked Blocks deletion of the SpotMarketRequest device until the lock is disabled.
         * 
         * @return builder
         * 
         */
        public Builder locked(Boolean locked) {
            return locked(Output.of(locked));
        }

        public Builder operatingSystem(Output<String> operatingSystem) {
            $.operatingSystem = operatingSystem;
            return this;
        }

        public Builder operatingSystem(String operatingSystem) {
            return operatingSystem(Output.of(operatingSystem));
        }

        public Builder plan(Output<String> plan) {
            $.plan = plan;
            return this;
        }

        public Builder plan(String plan) {
            return plan(Output.of(plan));
        }

        public Builder projectSshKeys(@Nullable Output<List<String>> projectSshKeys) {
            $.projectSshKeys = projectSshKeys;
            return this;
        }

        public Builder projectSshKeys(List<String> projectSshKeys) {
            return projectSshKeys(Output.of(projectSshKeys));
        }

        public Builder projectSshKeys(String... projectSshKeys) {
            return projectSshKeys(List.of(projectSshKeys));
        }

        public Builder tags(@Nullable Output<List<String>> tags) {
            $.tags = tags;
            return this;
        }

        public Builder tags(List<String> tags) {
            return tags(Output.of(tags));
        }

        public Builder tags(String... tags) {
            return tags(List.of(tags));
        }

        public Builder terminationTime(@Nullable Output<String> terminationTime) {
            $.terminationTime = terminationTime;
            return this;
        }

        public Builder terminationTime(String terminationTime) {
            return terminationTime(Output.of(terminationTime));
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use instance_parameters.termination_time instead
         * 
         */
        @Deprecated /* Use instance_parameters.termination_time instead */
        public Builder termintationTime(@Nullable Output<String> termintationTime) {
            $.termintationTime = termintationTime;
            return this;
        }

        /**
         * @return builder
         * 
         * @deprecated
         * Use instance_parameters.termination_time instead
         * 
         */
        @Deprecated /* Use instance_parameters.termination_time instead */
        public Builder termintationTime(String termintationTime) {
            return termintationTime(Output.of(termintationTime));
        }

        public Builder userSshKeys(@Nullable Output<List<String>> userSshKeys) {
            $.userSshKeys = userSshKeys;
            return this;
        }

        public Builder userSshKeys(List<String> userSshKeys) {
            return userSshKeys(Output.of(userSshKeys));
        }

        public Builder userSshKeys(String... userSshKeys) {
            return userSshKeys(List.of(userSshKeys));
        }

        public Builder userdata(@Nullable Output<String> userdata) {
            $.userdata = userdata;
            return this;
        }

        public Builder userdata(String userdata) {
            return userdata(Output.of(userdata));
        }

        public SpotMarketRequestInstanceParametersArgs build() {
            if ($.billingCycle == null) {
                throw new MissingRequiredPropertyException("SpotMarketRequestInstanceParametersArgs", "billingCycle");
            }
            if ($.hostname == null) {
                throw new MissingRequiredPropertyException("SpotMarketRequestInstanceParametersArgs", "hostname");
            }
            if ($.operatingSystem == null) {
                throw new MissingRequiredPropertyException("SpotMarketRequestInstanceParametersArgs", "operatingSystem");
            }
            if ($.plan == null) {
                throw new MissingRequiredPropertyException("SpotMarketRequestInstanceParametersArgs", "plan");
            }
            return $;
        }
    }

}
