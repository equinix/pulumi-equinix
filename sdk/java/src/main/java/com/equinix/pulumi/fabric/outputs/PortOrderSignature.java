// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.PortOrderSignatureDelegate;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PortOrderSignature {
    /**
     * @return delegate order details
     * 
     */
    private PortOrderSignatureDelegate delegate;
    /**
     * @return Port signature Type
     * 
     */
    private String signatory;

    private PortOrderSignature() {}
    /**
     * @return delegate order details
     * 
     */
    public PortOrderSignatureDelegate delegate() {
        return this.delegate;
    }
    /**
     * @return Port signature Type
     * 
     */
    public String signatory() {
        return this.signatory;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortOrderSignature defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private PortOrderSignatureDelegate delegate;
        private String signatory;
        public Builder() {}
        public Builder(PortOrderSignature defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.delegate = defaults.delegate;
    	      this.signatory = defaults.signatory;
        }

        @CustomType.Setter
        public Builder delegate(PortOrderSignatureDelegate delegate) {
            if (delegate == null) {
              throw new MissingRequiredPropertyException("PortOrderSignature", "delegate");
            }
            this.delegate = delegate;
            return this;
        }
        @CustomType.Setter
        public Builder signatory(String signatory) {
            if (signatory == null) {
              throw new MissingRequiredPropertyException("PortOrderSignature", "signatory");
            }
            this.signatory = signatory;
            return this;
        }
        public PortOrderSignature build() {
            final var _resultValue = new PortOrderSignature();
            _resultValue.delegate = delegate;
            _resultValue.signatory = signatory;
            return _resultValue;
        }
    }
}
