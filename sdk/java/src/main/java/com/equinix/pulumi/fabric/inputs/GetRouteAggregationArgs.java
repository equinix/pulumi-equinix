// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;


public final class GetRouteAggregationArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetRouteAggregationArgs Empty = new GetRouteAggregationArgs();

    /**
     * The uuid of the route aggregation this data source should retrieve
     * 
     */
    @Import(name="routeAggregationId", required=true)
    private Output<String> routeAggregationId;

    /**
     * @return The uuid of the route aggregation this data source should retrieve
     * 
     */
    public Output<String> routeAggregationId() {
        return this.routeAggregationId;
    }

    private GetRouteAggregationArgs() {}

    private GetRouteAggregationArgs(GetRouteAggregationArgs $) {
        this.routeAggregationId = $.routeAggregationId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetRouteAggregationArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetRouteAggregationArgs $;

        public Builder() {
            $ = new GetRouteAggregationArgs();
        }

        public Builder(GetRouteAggregationArgs defaults) {
            $ = new GetRouteAggregationArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(Output<String> routeAggregationId) {
            $.routeAggregationId = routeAggregationId;
            return this;
        }

        /**
         * @param routeAggregationId The uuid of the route aggregation this data source should retrieve
         * 
         * @return builder
         * 
         */
        public Builder routeAggregationId(String routeAggregationId) {
            return routeAggregationId(Output.of(routeAggregationId));
        }

        public GetRouteAggregationArgs build() {
            if ($.routeAggregationId == null) {
                throw new MissingRequiredPropertyException("GetRouteAggregationArgs", "routeAggregationId");
            }
            return $;
        }
    }

}
