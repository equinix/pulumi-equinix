// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.equinix.pulumi.fabric.outputs.GetConnectionsDataZSideAccessPoint;
import com.equinix.pulumi.fabric.outputs.GetConnectionsDataZSideAdditionalInfo;
import com.equinix.pulumi.fabric.outputs.GetConnectionsDataZSideServiceToken;
import com.pulumi.core.annotations.CustomType;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetConnectionsDataZSide {
    /**
     * @return Point of access details
     * 
     */
    private @Nullable GetConnectionsDataZSideAccessPoint accessPoint;
    /**
     * @return Connection side additional information
     * 
     */
    private @Nullable List<GetConnectionsDataZSideAdditionalInfo> additionalInfos;
    /**
     * @return For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
     * 
     */
    private @Nullable GetConnectionsDataZSideServiceToken serviceToken;

    private GetConnectionsDataZSide() {}
    /**
     * @return Point of access details
     * 
     */
    public Optional<GetConnectionsDataZSideAccessPoint> accessPoint() {
        return Optional.ofNullable(this.accessPoint);
    }
    /**
     * @return Connection side additional information
     * 
     */
    public List<GetConnectionsDataZSideAdditionalInfo> additionalInfos() {
        return this.additionalInfos == null ? List.of() : this.additionalInfos;
    }
    /**
     * @return For service token based connections, Service tokens authorize users to access protected resources and services. Resource owners can distribute the tokens to trusted partners and vendors, allowing selected third parties to work directly with Equinix network assets
     * 
     */
    public Optional<GetConnectionsDataZSideServiceToken> serviceToken() {
        return Optional.ofNullable(this.serviceToken);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetConnectionsDataZSide defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable GetConnectionsDataZSideAccessPoint accessPoint;
        private @Nullable List<GetConnectionsDataZSideAdditionalInfo> additionalInfos;
        private @Nullable GetConnectionsDataZSideServiceToken serviceToken;
        public Builder() {}
        public Builder(GetConnectionsDataZSide defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.accessPoint = defaults.accessPoint;
    	      this.additionalInfos = defaults.additionalInfos;
    	      this.serviceToken = defaults.serviceToken;
        }

        @CustomType.Setter
        public Builder accessPoint(@Nullable GetConnectionsDataZSideAccessPoint accessPoint) {

            this.accessPoint = accessPoint;
            return this;
        }
        @CustomType.Setter
        public Builder additionalInfos(@Nullable List<GetConnectionsDataZSideAdditionalInfo> additionalInfos) {

            this.additionalInfos = additionalInfos;
            return this;
        }
        public Builder additionalInfos(GetConnectionsDataZSideAdditionalInfo... additionalInfos) {
            return additionalInfos(List.of(additionalInfos));
        }
        @CustomType.Setter
        public Builder serviceToken(@Nullable GetConnectionsDataZSideServiceToken serviceToken) {

            this.serviceToken = serviceToken;
            return this;
        }
        public GetConnectionsDataZSide build() {
            final var _resultValue = new GetConnectionsDataZSide();
            _resultValue.accessPoint = accessPoint;
            _resultValue.additionalInfos = additionalInfos;
            _resultValue.serviceToken = serviceToken;
            return _resultValue;
        }
    }
}
