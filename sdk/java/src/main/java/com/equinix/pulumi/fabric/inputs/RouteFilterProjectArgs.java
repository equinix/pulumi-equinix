// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class RouteFilterProjectArgs extends com.pulumi.resources.ResourceArgs {

    public static final RouteFilterProjectArgs Empty = new RouteFilterProjectArgs();

    /**
     * URI of the Fabric Project
     * 
     */
    @Import(name="href")
    private @Nullable Output<String> href;

    /**
     * @return URI of the Fabric Project
     * 
     */
    public Optional<Output<String>> href() {
        return Optional.ofNullable(this.href);
    }

    /**
     * Project id associated with Fabric Project
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return Project id associated with Fabric Project
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    private RouteFilterProjectArgs() {}

    private RouteFilterProjectArgs(RouteFilterProjectArgs $) {
        this.href = $.href;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RouteFilterProjectArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RouteFilterProjectArgs $;

        public Builder() {
            $ = new RouteFilterProjectArgs();
        }

        public Builder(RouteFilterProjectArgs defaults) {
            $ = new RouteFilterProjectArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param href URI of the Fabric Project
         * 
         * @return builder
         * 
         */
        public Builder href(@Nullable Output<String> href) {
            $.href = href;
            return this;
        }

        /**
         * @param href URI of the Fabric Project
         * 
         * @return builder
         * 
         */
        public Builder href(String href) {
            return href(Output.of(href));
        }

        /**
         * @param projectId Project id associated with Fabric Project
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId Project id associated with Fabric Project
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public RouteFilterProjectArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("RouteFilterProjectArgs", "projectId");
            }
            return $;
        }
    }

}
