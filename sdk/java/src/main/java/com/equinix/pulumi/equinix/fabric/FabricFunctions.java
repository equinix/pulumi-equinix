// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.equinix.fabric;

import com.equinix.pulumi.equinix.Utilities;
import com.equinix.pulumi.equinix.fabric.inputs.GetConnectionArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetConnectionPlainArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetPortArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetPortPlainArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetPortsArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetPortsPlainArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetServiceProfileArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetServiceProfilePlainArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetServiceProfilesArgs;
import com.equinix.pulumi.equinix.fabric.inputs.GetServiceProfilesPlainArgs;
import com.equinix.pulumi.equinix.fabric.outputs.GetConnectionResult;
import com.equinix.pulumi.equinix.fabric.outputs.GetPortResult;
import com.equinix.pulumi.equinix.fabric.outputs.GetPortsResult;
import com.equinix.pulumi.equinix.fabric.outputs.GetServiceProfileResult;
import com.equinix.pulumi.equinix.fabric.outputs.GetServiceProfilesResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class FabricFunctions {
    public static Output<GetConnectionResult> getConnection() {
        return getConnection(GetConnectionArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConnectionResult> getConnectionPlain() {
        return getConnectionPlain(GetConnectionPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args) {
        return getConnection(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args) {
        return getConnectionPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetConnectionResult> getConnection(GetConnectionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("equinix:fabric/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetConnectionResult> getConnectionPlain(GetConnectionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("equinix:fabric/getConnection:getConnection", TypeShape.of(GetConnectionResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPortResult> getPort(GetPortArgs args) {
        return getPort(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPortResult> getPortPlain(GetPortPlainArgs args) {
        return getPortPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPortResult> getPort(GetPortArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("equinix:fabric/getPort:getPort", TypeShape.of(GetPortResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPortResult> getPortPlain(GetPortPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("equinix:fabric/getPort:getPort", TypeShape.of(GetPortResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetPortsResult> getPorts() {
        return getPorts(GetPortsArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPortsResult> getPortsPlain() {
        return getPortsPlain(GetPortsPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetPortsResult> getPorts(GetPortsArgs args) {
        return getPorts(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetPortsResult> getPortsPlain(GetPortsPlainArgs args) {
        return getPortsPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetPortsResult> getPorts(GetPortsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("equinix:fabric/getPorts:getPorts", TypeShape.of(GetPortsResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetPortsResult> getPortsPlain(GetPortsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("equinix:fabric/getPorts:getPorts", TypeShape.of(GetPortsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Fabric V4 API compatible data resource that allow user to fetch Service Profile by UUID filter criteria
     * 
     * &gt; **Note** Equinix Fabric v4 resources and datasources are currently in Beta. The interfaces related to `equinix_fabric_` resources and datasources may change ahead of general availability
     * 
     */
    public static Output<GetServiceProfileResult> getServiceProfile(GetServiceProfileArgs args) {
        return getServiceProfile(args, InvokeOptions.Empty);
    }
    /**
     * Fabric V4 API compatible data resource that allow user to fetch Service Profile by UUID filter criteria
     * 
     * &gt; **Note** Equinix Fabric v4 resources and datasources are currently in Beta. The interfaces related to `equinix_fabric_` resources and datasources may change ahead of general availability
     * 
     */
    public static CompletableFuture<GetServiceProfileResult> getServiceProfilePlain(GetServiceProfilePlainArgs args) {
        return getServiceProfilePlain(args, InvokeOptions.Empty);
    }
    /**
     * Fabric V4 API compatible data resource that allow user to fetch Service Profile by UUID filter criteria
     * 
     * &gt; **Note** Equinix Fabric v4 resources and datasources are currently in Beta. The interfaces related to `equinix_fabric_` resources and datasources may change ahead of general availability
     * 
     */
    public static Output<GetServiceProfileResult> getServiceProfile(GetServiceProfileArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("equinix:fabric/getServiceProfile:getServiceProfile", TypeShape.of(GetServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Fabric V4 API compatible data resource that allow user to fetch Service Profile by UUID filter criteria
     * 
     * &gt; **Note** Equinix Fabric v4 resources and datasources are currently in Beta. The interfaces related to `equinix_fabric_` resources and datasources may change ahead of general availability
     * 
     */
    public static CompletableFuture<GetServiceProfileResult> getServiceProfilePlain(GetServiceProfilePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("equinix:fabric/getServiceProfile:getServiceProfile", TypeShape.of(GetServiceProfileResult.class), args, Utilities.withVersion(options));
    }
    public static Output<GetServiceProfilesResult> getServiceProfiles() {
        return getServiceProfiles(GetServiceProfilesArgs.Empty, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceProfilesResult> getServiceProfilesPlain() {
        return getServiceProfilesPlain(GetServiceProfilesPlainArgs.Empty, InvokeOptions.Empty);
    }
    public static Output<GetServiceProfilesResult> getServiceProfiles(GetServiceProfilesArgs args) {
        return getServiceProfiles(args, InvokeOptions.Empty);
    }
    public static CompletableFuture<GetServiceProfilesResult> getServiceProfilesPlain(GetServiceProfilesPlainArgs args) {
        return getServiceProfilesPlain(args, InvokeOptions.Empty);
    }
    public static Output<GetServiceProfilesResult> getServiceProfiles(GetServiceProfilesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("equinix:fabric/getServiceProfiles:getServiceProfiles", TypeShape.of(GetServiceProfilesResult.class), args, Utilities.withVersion(options));
    }
    public static CompletableFuture<GetServiceProfilesResult> getServiceProfilesPlain(GetServiceProfilesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("equinix:fabric/getServiceProfiles:getServiceProfiles", TypeShape.of(GetServiceProfilesResult.class), args, Utilities.withVersion(options));
    }
}
