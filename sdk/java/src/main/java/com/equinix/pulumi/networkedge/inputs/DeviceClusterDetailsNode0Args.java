// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.networkedge.inputs;

import com.equinix.pulumi.networkedge.inputs.DeviceClusterDetailsNode0VendorConfigurationArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class DeviceClusterDetailsNode0Args extends com.pulumi.resources.ResourceArgs {

    public static final DeviceClusterDetailsNode0Args Empty = new DeviceClusterDetailsNode0Args();

    /**
     * License file id. This is necessary for Fortinet and Juniper clusters.
     * 
     */
    @Import(name="licenseFileId")
    private @Nullable Output<String> licenseFileId;

    /**
     * @return License file id. This is necessary for Fortinet and Juniper clusters.
     * 
     */
    public Optional<Output<String>> licenseFileId() {
        return Optional.ofNullable(this.licenseFileId);
    }

    /**
     * License token. This is necessary for Palo Alto clusters.
     * 
     */
    @Import(name="licenseToken")
    private @Nullable Output<String> licenseToken;

    /**
     * @return License token. This is necessary for Palo Alto clusters.
     * 
     */
    public Optional<Output<String>> licenseToken() {
        return Optional.ofNullable(this.licenseToken);
    }

    /**
     * Device name.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Device name.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * Device unique identifier.
     * 
     */
    @Import(name="uuid")
    private @Nullable Output<String> uuid;

    /**
     * @return Device unique identifier.
     * 
     */
    public Optional<Output<String>> uuid() {
        return Optional.ofNullable(this.uuid);
    }

    /**
     * An object that has fields relevant to the vendor of the cluster device. See Cluster Details - Nodes - Vendor Configuration below for more details.
     * 
     */
    @Import(name="vendorConfiguration")
    private @Nullable Output<DeviceClusterDetailsNode0VendorConfigurationArgs> vendorConfiguration;

    /**
     * @return An object that has fields relevant to the vendor of the cluster device. See Cluster Details - Nodes - Vendor Configuration below for more details.
     * 
     */
    public Optional<Output<DeviceClusterDetailsNode0VendorConfigurationArgs>> vendorConfiguration() {
        return Optional.ofNullable(this.vendorConfiguration);
    }

    private DeviceClusterDetailsNode0Args() {}

    private DeviceClusterDetailsNode0Args(DeviceClusterDetailsNode0Args $) {
        this.licenseFileId = $.licenseFileId;
        this.licenseToken = $.licenseToken;
        this.name = $.name;
        this.uuid = $.uuid;
        this.vendorConfiguration = $.vendorConfiguration;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceClusterDetailsNode0Args defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceClusterDetailsNode0Args $;

        public Builder() {
            $ = new DeviceClusterDetailsNode0Args();
        }

        public Builder(DeviceClusterDetailsNode0Args defaults) {
            $ = new DeviceClusterDetailsNode0Args(Objects.requireNonNull(defaults));
        }

        /**
         * @param licenseFileId License file id. This is necessary for Fortinet and Juniper clusters.
         * 
         * @return builder
         * 
         */
        public Builder licenseFileId(@Nullable Output<String> licenseFileId) {
            $.licenseFileId = licenseFileId;
            return this;
        }

        /**
         * @param licenseFileId License file id. This is necessary for Fortinet and Juniper clusters.
         * 
         * @return builder
         * 
         */
        public Builder licenseFileId(String licenseFileId) {
            return licenseFileId(Output.of(licenseFileId));
        }

        /**
         * @param licenseToken License token. This is necessary for Palo Alto clusters.
         * 
         * @return builder
         * 
         */
        public Builder licenseToken(@Nullable Output<String> licenseToken) {
            $.licenseToken = licenseToken;
            return this;
        }

        /**
         * @param licenseToken License token. This is necessary for Palo Alto clusters.
         * 
         * @return builder
         * 
         */
        public Builder licenseToken(String licenseToken) {
            return licenseToken(Output.of(licenseToken));
        }

        /**
         * @param name Device name.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Device name.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param uuid Device unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder uuid(@Nullable Output<String> uuid) {
            $.uuid = uuid;
            return this;
        }

        /**
         * @param uuid Device unique identifier.
         * 
         * @return builder
         * 
         */
        public Builder uuid(String uuid) {
            return uuid(Output.of(uuid));
        }

        /**
         * @param vendorConfiguration An object that has fields relevant to the vendor of the cluster device. See Cluster Details - Nodes - Vendor Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder vendorConfiguration(@Nullable Output<DeviceClusterDetailsNode0VendorConfigurationArgs> vendorConfiguration) {
            $.vendorConfiguration = vendorConfiguration;
            return this;
        }

        /**
         * @param vendorConfiguration An object that has fields relevant to the vendor of the cluster device. See Cluster Details - Nodes - Vendor Configuration below for more details.
         * 
         * @return builder
         * 
         */
        public Builder vendorConfiguration(DeviceClusterDetailsNode0VendorConfigurationArgs vendorConfiguration) {
            return vendorConfiguration(Output.of(vendorConfiguration));
        }

        public DeviceClusterDetailsNode0Args build() {
            return $;
        }
    }

}
