// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PortAccountArgs extends com.pulumi.resources.ResourceArgs {

    public static final PortAccountArgs Empty = new PortAccountArgs();

    /**
     * Legal name of the accountholder.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return Legal name of the accountholder.
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * Account number the port will be created for
     * 
     */
    @Import(name="accountNumber", required=true)
    private Output<Integer> accountNumber;

    /**
     * @return Account number the port will be created for
     * 
     */
    public Output<Integer> accountNumber() {
        return this.accountNumber;
    }

    /**
     * Enterprise datastore id
     * 
     */
    @Import(name="ucmId")
    private @Nullable Output<String> ucmId;

    /**
     * @return Enterprise datastore id
     * 
     */
    public Optional<Output<String>> ucmId() {
        return Optional.ofNullable(this.ucmId);
    }

    private PortAccountArgs() {}

    private PortAccountArgs(PortAccountArgs $) {
        this.accountName = $.accountName;
        this.accountNumber = $.accountNumber;
        this.ucmId = $.ucmId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PortAccountArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PortAccountArgs $;

        public Builder() {
            $ = new PortAccountArgs();
        }

        public Builder(PortAccountArgs defaults) {
            $ = new PortAccountArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountName Legal name of the accountholder.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName Legal name of the accountholder.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param accountNumber Account number the port will be created for
         * 
         * @return builder
         * 
         */
        public Builder accountNumber(Output<Integer> accountNumber) {
            $.accountNumber = accountNumber;
            return this;
        }

        /**
         * @param accountNumber Account number the port will be created for
         * 
         * @return builder
         * 
         */
        public Builder accountNumber(Integer accountNumber) {
            return accountNumber(Output.of(accountNumber));
        }

        /**
         * @param ucmId Enterprise datastore id
         * 
         * @return builder
         * 
         */
        public Builder ucmId(@Nullable Output<String> ucmId) {
            $.ucmId = ucmId;
            return this;
        }

        /**
         * @param ucmId Enterprise datastore id
         * 
         * @return builder
         * 
         */
        public Builder ucmId(String ucmId) {
            return ucmId(Output.of(ucmId));
        }

        public PortAccountArgs build() {
            if ($.accountNumber == null) {
                throw new MissingRequiredPropertyException("PortAccountArgs", "accountNumber");
            }
            return $;
        }
    }

}
