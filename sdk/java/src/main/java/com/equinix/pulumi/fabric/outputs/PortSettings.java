// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.equinix.pulumi.fabric.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;

@CustomType
public final class PortSettings {
    /**
     * @return Billing package for the port being ordered
     * 
     */
    private String packageType;
    /**
     * @return Indicates whether this is a dedicated customer cage or a shared neutral cage
     * 
     */
    private Boolean sharedPortType;

    private PortSettings() {}
    /**
     * @return Billing package for the port being ordered
     * 
     */
    public String packageType() {
        return this.packageType;
    }
    /**
     * @return Indicates whether this is a dedicated customer cage or a shared neutral cage
     * 
     */
    public Boolean sharedPortType() {
        return this.sharedPortType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PortSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String packageType;
        private Boolean sharedPortType;
        public Builder() {}
        public Builder(PortSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.packageType = defaults.packageType;
    	      this.sharedPortType = defaults.sharedPortType;
        }

        @CustomType.Setter
        public Builder packageType(String packageType) {
            if (packageType == null) {
              throw new MissingRequiredPropertyException("PortSettings", "packageType");
            }
            this.packageType = packageType;
            return this;
        }
        @CustomType.Setter
        public Builder sharedPortType(Boolean sharedPortType) {
            if (sharedPortType == null) {
              throw new MissingRequiredPropertyException("PortSettings", "sharedPortType");
            }
            this.sharedPortType = sharedPortType;
            return this;
        }
        public PortSettings build() {
            final var _resultValue = new PortSettings();
            _resultValue.packageType = packageType;
            _resultValue.sharedPortType = sharedPortType;
            return _resultValue;
        }
    }
}
