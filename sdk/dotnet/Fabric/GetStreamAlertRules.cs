// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetStreamAlertRules
    {
        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dataStreamAlertRules = Equinix.Fabric.GetStreamAlertRules.Invoke(new()
        ///     {
        ///         StreamId = "&lt;uuid_of_stream&gt;",
        ///         Pagination = new Equinix.Fabric.Inputs.GetStreamAlertRulesPaginationInputArgs
        ///         {
        ///             Limit = 5,
        ///             Offset = 1,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["streamAlertRulesType"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Type,
        ///         ["streamAlertRulesId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Uuid,
        ///         ["streamAlertRulesState"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].State,
        ///         ["streamAlertRulesStreamId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Stream_id,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetStreamAlertRulesResult> InvokeAsync(GetStreamAlertRulesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStreamAlertRulesResult>("equinix:fabric/getStreamAlertRules:getStreamAlertRules", args ?? new GetStreamAlertRulesArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dataStreamAlertRules = Equinix.Fabric.GetStreamAlertRules.Invoke(new()
        ///     {
        ///         StreamId = "&lt;uuid_of_stream&gt;",
        ///         Pagination = new Equinix.Fabric.Inputs.GetStreamAlertRulesPaginationInputArgs
        ///         {
        ///             Limit = 5,
        ///             Offset = 1,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["streamAlertRulesType"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Type,
        ///         ["streamAlertRulesId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Uuid,
        ///         ["streamAlertRulesState"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].State,
        ///         ["streamAlertRulesStreamId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Stream_id,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAlertRulesResult> Invoke(GetStreamAlertRulesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAlertRulesResult>("equinix:fabric/getStreamAlertRules:getStreamAlertRules", args ?? new GetStreamAlertRulesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var dataStreamAlertRules = Equinix.Fabric.GetStreamAlertRules.Invoke(new()
        ///     {
        ///         StreamId = "&lt;uuid_of_stream&gt;",
        ///         Pagination = new Equinix.Fabric.Inputs.GetStreamAlertRulesPaginationInputArgs
        ///         {
        ///             Limit = 5,
        ///             Offset = 1,
        ///         },
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["streamAlertRulesType"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Type,
        ///         ["streamAlertRulesId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Uuid,
        ///         ["streamAlertRulesState"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].State,
        ///         ["streamAlertRulesStreamId"] = data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Stream_id,
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetStreamAlertRulesResult> Invoke(GetStreamAlertRulesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStreamAlertRulesResult>("equinix:fabric/getStreamAlertRules:getStreamAlertRules", args ?? new GetStreamAlertRulesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStreamAlertRulesArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Pagination details for the returned stream alert rules list
        /// </summary>
        [Input("pagination", required: true)]
        public Inputs.GetStreamAlertRulesPaginationArgs Pagination { get; set; } = null!;

        /// <summary>
        /// The uuid of the stream that is the target of the stream alert rule
        /// </summary>
        [Input("streamId", required: true)]
        public string StreamId { get; set; } = null!;

        public GetStreamAlertRulesArgs()
        {
        }
        public static new GetStreamAlertRulesArgs Empty => new GetStreamAlertRulesArgs();
    }

    public sealed class GetStreamAlertRulesInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Pagination details for the returned stream alert rules list
        /// </summary>
        [Input("pagination", required: true)]
        public Input<Inputs.GetStreamAlertRulesPaginationInputArgs> Pagination { get; set; } = null!;

        /// <summary>
        /// The uuid of the stream that is the target of the stream alert rule
        /// </summary>
        [Input("streamId", required: true)]
        public Input<string> StreamId { get; set; } = null!;

        public GetStreamAlertRulesInvokeArgs()
        {
        }
        public static new GetStreamAlertRulesInvokeArgs Empty => new GetStreamAlertRulesInvokeArgs();
    }


    [OutputType]
    public sealed class GetStreamAlertRulesResult
    {
        /// <summary>
        /// Returned list of stream objects
        /// </summary>
        public readonly ImmutableArray<Outputs.GetStreamAlertRulesDataResult> Datas;
        /// <summary>
        /// The unique identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Pagination details for the returned stream alert rules list
        /// </summary>
        public readonly Outputs.GetStreamAlertRulesPaginationResult Pagination;
        /// <summary>
        /// The uuid of the stream that is the target of the stream alert rule
        /// </summary>
        public readonly string StreamId;

        [OutputConstructor]
        private GetStreamAlertRulesResult(
            ImmutableArray<Outputs.GetStreamAlertRulesDataResult> datas,

            string id,

            Outputs.GetStreamAlertRulesPaginationResult pagination,

            string streamId)
        {
            Datas = datas;
            Id = id;
            Pagination = pagination;
            StreamId = streamId;
        }
    }
}
