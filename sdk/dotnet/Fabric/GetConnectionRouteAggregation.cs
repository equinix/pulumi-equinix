// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetConnectionRouteAggregation
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregation by UUID
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicy = Equinix.Fabric.GetConnectionRouteAggregation.Invoke(new()
        ///     {
        ///         RouteAggregationId = "&lt;route_aggregation_id&gt;",
        ///         ConnectionId = "&lt;connection_id&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionRouteAggregationId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Id),
        ///         ["connectionRouteAggregationConnectionId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.ConnectionId),
        ///         ["connectionRouteAggregationType"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Type),
        ///         ["connectionRouteAggregationAttachmentStatus"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectionRouteAggregationResult> InvokeAsync(GetConnectionRouteAggregationArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionRouteAggregationResult>("equinix:fabric/getConnectionRouteAggregation:getConnectionRouteAggregation", args ?? new GetConnectionRouteAggregationArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregation by UUID
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicy = Equinix.Fabric.GetConnectionRouteAggregation.Invoke(new()
        ///     {
        ///         RouteAggregationId = "&lt;route_aggregation_id&gt;",
        ///         ConnectionId = "&lt;connection_id&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionRouteAggregationId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Id),
        ///         ["connectionRouteAggregationConnectionId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.ConnectionId),
        ///         ["connectionRouteAggregationType"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Type),
        ///         ["connectionRouteAggregationAttachmentStatus"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionRouteAggregationResult> Invoke(GetConnectionRouteAggregationInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionRouteAggregationResult>("equinix:fabric/getConnectionRouteAggregation:getConnectionRouteAggregation", args ?? new GetConnectionRouteAggregationInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregation by UUID
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicy = Equinix.Fabric.GetConnectionRouteAggregation.Invoke(new()
        ///     {
        ///         RouteAggregationId = "&lt;route_aggregation_id&gt;",
        ///         ConnectionId = "&lt;connection_id&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionRouteAggregationId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Id),
        ///         ["connectionRouteAggregationConnectionId"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.ConnectionId),
        ///         ["connectionRouteAggregationType"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.Type),
        ///         ["connectionRouteAggregationAttachmentStatus"] = attachedPolicy.Apply(getConnectionRouteAggregationResult =&gt; getConnectionRouteAggregationResult.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionRouteAggregationResult> Invoke(GetConnectionRouteAggregationInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionRouteAggregationResult>("equinix:fabric/getConnectionRouteAggregation:getConnectionRouteAggregation", args ?? new GetConnectionRouteAggregationInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionRouteAggregationArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        /// <summary>
        /// The uuid of the route aggregation this data source should retrieve
        /// </summary>
        [Input("routeAggregationId", required: true)]
        public string RouteAggregationId { get; set; } = null!;

        public GetConnectionRouteAggregationArgs()
        {
        }
        public static new GetConnectionRouteAggregationArgs Empty => new GetConnectionRouteAggregationArgs();
    }

    public sealed class GetConnectionRouteAggregationInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// The uuid of the route aggregation this data source should retrieve
        /// </summary>
        [Input("routeAggregationId", required: true)]
        public Input<string> RouteAggregationId { get; set; } = null!;

        public GetConnectionRouteAggregationInvokeArgs()
        {
        }
        public static new GetConnectionRouteAggregationInvokeArgs Empty => new GetConnectionRouteAggregationInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionRouteAggregationResult
    {
        /// <summary>
        /// Status of the Route Aggregation Policy attachment lifecycle
        /// </summary>
        public readonly string AttachmentStatus;
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        public readonly string ConnectionId;
        /// <summary>
        /// URI to the attached Route Aggregation Policy on the Connection
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// The unique identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The uuid of the route aggregation this data source should retrieve
        /// </summary>
        public readonly string RouteAggregationId;
        /// <summary>
        /// Route Aggregation Type. One of ["BGP*IPv4*PREFIX_AGGREGATION"]
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Equinix Assigned ID for Route Aggregation Policy
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetConnectionRouteAggregationResult(
            string attachmentStatus,

            string connectionId,

            string href,

            string id,

            string routeAggregationId,

            string type,

            string uuid)
        {
            AttachmentStatus = attachmentStatus;
            ConnectionId = connectionId;
            Href = href;
            Id = id;
            RouteAggregationId = routeAggregationId;
            Type = type;
            Uuid = uuid;
        }
    }
}
