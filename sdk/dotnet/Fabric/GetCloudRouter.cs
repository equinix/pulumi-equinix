// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetCloudRouter
    {
        public static Task<GetCloudRouterResult> InvokeAsync(GetCloudRouterArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudRouterResult>("equinix:fabric/getCloudRouter:getCloudRouter", args ?? new GetCloudRouterArgs(), options.WithDefaults());

        public static Output<GetCloudRouterResult> Invoke(GetCloudRouterInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudRouterResult>("equinix:fabric/getCloudRouter:getCloudRouter", args ?? new GetCloudRouterInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudRouterArgs : global::Pulumi.InvokeArgs
    {
        [Input("projects")]
        private List<Inputs.GetCloudRouterProjectArgs>? _projects;

        /// <summary>
        /// Project information
        /// </summary>
        public List<Inputs.GetCloudRouterProjectArgs> Projects
        {
            get => _projects ?? (_projects = new List<Inputs.GetCloudRouterProjectArgs>());
            set => _projects = value;
        }

        /// <summary>
        /// Equinix-assigned Fabric Cloud Router identifier
        /// </summary>
        [Input("uuid")]
        public string? Uuid { get; set; }

        public GetCloudRouterArgs()
        {
        }
        public static new GetCloudRouterArgs Empty => new GetCloudRouterArgs();
    }

    public sealed class GetCloudRouterInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("projects")]
        private InputList<Inputs.GetCloudRouterProjectInputArgs>? _projects;

        /// <summary>
        /// Project information
        /// </summary>
        public InputList<Inputs.GetCloudRouterProjectInputArgs> Projects
        {
            get => _projects ?? (_projects = new InputList<Inputs.GetCloudRouterProjectInputArgs>());
            set => _projects = value;
        }

        /// <summary>
        /// Equinix-assigned Fabric Cloud Router identifier
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public GetCloudRouterInvokeArgs()
        {
        }
        public static new GetCloudRouterInvokeArgs Empty => new GetCloudRouterInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudRouterResult
    {
        /// <summary>
        /// Customer account information that is associated with this Fabric Cloud Router
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterAccountResult> Accounts;
        public readonly int BgpIpv4RoutesCount;
        public readonly int BgpIpv6RoutesCount;
        /// <summary>
        /// Captures Fabric Cloud Router lifecycle change information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterChangeLogResult> ChangeLogs;
        public readonly int ConnectionsCount;
        /// <summary>
        /// Customer-provided Fabric Cloud Router description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Equinix ASN
        /// </summary>
        public readonly int EquinixAsn;
        /// <summary>
        /// Fabric Cloud Router URI information
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Fabric Cloud Router location
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterLocationResult> Locations;
        /// <summary>
        /// Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Preferences for notifications on Fabric Cloud Router configuration or status changes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterNotificationResult> Notifications;
        /// <summary>
        /// Order information related to this Fabric Cloud Router
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterOrderResult> Orders;
        /// <summary>
        /// Fabric Cloud Router package information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterPackageResult> Packages;
        /// <summary>
        /// Project information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRouterProjectResult> Projects;
        /// <summary>
        /// Fabric Cloud Router overall state
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Defines the Fabric Cloud Router type like XF_GATEWAY
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Equinix-assigned Fabric Cloud Router identifier
        /// </summary>
        public readonly string? Uuid;

        [OutputConstructor]
        private GetCloudRouterResult(
            ImmutableArray<Outputs.GetCloudRouterAccountResult> accounts,

            int bgpIpv4RoutesCount,

            int bgpIpv6RoutesCount,

            ImmutableArray<Outputs.GetCloudRouterChangeLogResult> changeLogs,

            int connectionsCount,

            string description,

            int equinixAsn,

            string href,

            string id,

            ImmutableArray<Outputs.GetCloudRouterLocationResult> locations,

            string name,

            ImmutableArray<Outputs.GetCloudRouterNotificationResult> notifications,

            ImmutableArray<Outputs.GetCloudRouterOrderResult> orders,

            ImmutableArray<Outputs.GetCloudRouterPackageResult> packages,

            ImmutableArray<Outputs.GetCloudRouterProjectResult> projects,

            string state,

            string type,

            string? uuid)
        {
            Accounts = accounts;
            BgpIpv4RoutesCount = bgpIpv4RoutesCount;
            BgpIpv6RoutesCount = bgpIpv6RoutesCount;
            ChangeLogs = changeLogs;
            ConnectionsCount = connectionsCount;
            Description = description;
            EquinixAsn = equinixAsn;
            Href = href;
            Id = id;
            Locations = locations;
            Name = name;
            Notifications = notifications;
            Orders = orders;
            Packages = packages;
            Projects = projects;
            State = state;
            Type = type;
            Uuid = uuid;
        }
    }
}
