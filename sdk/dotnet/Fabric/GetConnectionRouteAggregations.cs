// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetConnectionRouteAggregations
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicies = Equinix.Fabric.GetConnectionRouteAggregations.Invoke(new()
        ///     {
        ///         ConnectionId = "connection_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionFirstRouteAggregationUuid"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Uuid),
        ///         ["connectionFirstRouteAggregationType"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Type),
        ///         ["connectionFirstRouteAggregationAttachmentStatus"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetConnectionRouteAggregationsResult> InvokeAsync(GetConnectionRouteAggregationsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetConnectionRouteAggregationsResult>("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", args ?? new GetConnectionRouteAggregationsArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicies = Equinix.Fabric.GetConnectionRouteAggregations.Invoke(new()
        ///     {
        ///         ConnectionId = "connection_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionFirstRouteAggregationUuid"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Uuid),
        ///         ["connectionFirstRouteAggregationType"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Type),
        ///         ["connectionFirstRouteAggregationAttachmentStatus"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionRouteAggregationsResult> Invoke(GetConnectionRouteAggregationsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionRouteAggregationsResult>("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", args ?? new GetConnectionRouteAggregationsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
        /// Additional Documentation:
        /// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var attachedPolicies = Equinix.Fabric.GetConnectionRouteAggregations.Invoke(new()
        ///     {
        ///         ConnectionId = "connection_id",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["connectionFirstRouteAggregationUuid"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Uuid),
        ///         ["connectionFirstRouteAggregationType"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.Type),
        ///         ["connectionFirstRouteAggregationAttachmentStatus"] = attachedPolicies.Apply(getConnectionRouteAggregationsResult =&gt; getConnectionRouteAggregationsResult.Datas[0]?.AttachmentStatus),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetConnectionRouteAggregationsResult> Invoke(GetConnectionRouteAggregationsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetConnectionRouteAggregationsResult>("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", args ?? new GetConnectionRouteAggregationsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetConnectionRouteAggregationsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        [Input("connectionId", required: true)]
        public string ConnectionId { get; set; } = null!;

        /// <summary>
        /// Pagination details for the returned connection route aggregations list
        /// </summary>
        [Input("pagination")]
        public Inputs.GetConnectionRouteAggregationsPaginationArgs? Pagination { get; set; }

        public GetConnectionRouteAggregationsArgs()
        {
        }
        public static new GetConnectionRouteAggregationsArgs Empty => new GetConnectionRouteAggregationsArgs();
    }

    public sealed class GetConnectionRouteAggregationsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        [Input("connectionId", required: true)]
        public Input<string> ConnectionId { get; set; } = null!;

        /// <summary>
        /// Pagination details for the returned connection route aggregations list
        /// </summary>
        [Input("pagination")]
        public Input<Inputs.GetConnectionRouteAggregationsPaginationInputArgs>? Pagination { get; set; }

        public GetConnectionRouteAggregationsInvokeArgs()
        {
        }
        public static new GetConnectionRouteAggregationsInvokeArgs Empty => new GetConnectionRouteAggregationsInvokeArgs();
    }


    [OutputType]
    public sealed class GetConnectionRouteAggregationsResult
    {
        /// <summary>
        /// The uuid of the connection this data source should retrieve
        /// </summary>
        public readonly string ConnectionId;
        /// <summary>
        /// Returned list of connection route aggregation objects
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionRouteAggregationsDataResult> Datas;
        /// <summary>
        /// The unique identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Pagination details for the returned connection route aggregations list
        /// </summary>
        public readonly Outputs.GetConnectionRouteAggregationsPaginationResult? Pagination;

        [OutputConstructor]
        private GetConnectionRouteAggregationsResult(
            string connectionId,

            ImmutableArray<Outputs.GetConnectionRouteAggregationsDataResult> datas,

            string id,

            Outputs.GetConnectionRouteAggregationsPaginationResult? pagination)
        {
            ConnectionId = connectionId;
            Datas = datas;
            Id = id;
            Pagination = pagination;
        }
    }
}
