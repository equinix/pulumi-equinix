// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class ServiceProfileAccessPointTypeConfigApiConfig
    {
        /// <summary>
        /// Setting showing that oversubscription support is available (true) or not (false). The default is false
        /// </summary>
        public readonly bool? AllowOverSubscription;
        /// <summary>
        /// Indicates if it's possible to establish connections based on the given service profile using the Equinix Fabric API.
        /// </summary>
        public readonly bool? ApiAvailable;
        /// <summary>
        /// Indicates if the connection bandwidth can be obtained directly from the cloud service provider.
        /// </summary>
        public readonly bool? BandwidthFromApi;
        /// <summary>
        /// Setting indicating that the port is managed by Equinix (true) or not (false)
        /// </summary>
        public readonly bool? EquinixManagedPort;
        /// <summary>
        /// Setting indicating that the VLAN is managed by Equinix (true) or not (false)
        /// </summary>
        public readonly bool? EquinixManagedVlan;
        /// <summary>
        /// A unique identifier issued during onboarding and used to integrate the customer's service profile with the Equinix Fabric API.
        /// </summary>
        public readonly string? IntegrationId;
        /// <summary>
        /// Port bandwidth multiplier that determines the total bandwidth that can be allocated to users creating connections to your services. For example, a 10 Gbps port combined with an overSubscriptionLimit parameter value of 10 allows your subscribers to create connections with a total bandwidth of 100 Gbps.
        /// </summary>
        public readonly int? OverSubscriptionLimit;

        [OutputConstructor]
        private ServiceProfileAccessPointTypeConfigApiConfig(
            bool? allowOverSubscription,

            bool? apiAvailable,

            bool? bandwidthFromApi,

            bool? equinixManagedPort,

            bool? equinixManagedVlan,

            string? integrationId,

            int? overSubscriptionLimit)
        {
            AllowOverSubscription = allowOverSubscription;
            ApiAvailable = apiAvailable;
            BandwidthFromApi = bandwidthFromApi;
            EquinixManagedPort = equinixManagedPort;
            EquinixManagedVlan = equinixManagedVlan;
            IntegrationId = integrationId;
            OverSubscriptionLimit = overSubscriptionLimit;
        }
    }
}
