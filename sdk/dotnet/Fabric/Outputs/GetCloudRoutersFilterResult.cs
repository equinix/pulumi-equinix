// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class GetCloudRoutersFilterResult
    {
        /// <summary>
        /// Possible operators to use on the filter property. Can be one of the following: [= - equal, != - not equal, &gt; - greater than, &gt;= - greater than or equal to, &lt; - less than, &lt;= - less than or equal to, [NOT] BETWEEN - (not) between, [NOT] LIKE - (not) like, [NOT] IN - (not) in
        /// </summary>
        public readonly string Operator;
        /// <summary>
        /// Boolean flag indicating whether this filter is included in the OR group. There can only be one OR group and it can have a maximum of 3 filters. The OR group only counts as 1 of the 8 possible filters
        /// </summary>
        public readonly bool? Or;
        /// <summary>
        /// The API response property which you want to filter your request on. Can be one of the following: "/project/projectId", "/name", "/uuid", "/state", "/location/metroCode", "/location/metroName", "/package/code", "/*"
        /// </summary>
        public readonly string Property;
        /// <summary>
        /// The values that you want to apply the property+operator combination to in order to filter your data search
        /// </summary>
        public readonly ImmutableArray<string> Values;

        [OutputConstructor]
        private GetCloudRoutersFilterResult(
            string @operator,

            bool? or,

            string property,

            ImmutableArray<string> values)
        {
            Operator = @operator;
            Or = or;
            Property = property;
            Values = values;
        }
    }
}
