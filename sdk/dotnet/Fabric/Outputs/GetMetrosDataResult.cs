// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class GetMetrosDataResult
    {
        /// <summary>
        /// Code assigned to an Equinix IBX data center in a specified metropolitan area
        /// </summary>
        public readonly string Code;
        /// <summary>
        /// Arrays of objects containing latency data for the specified metro
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMetrosDataConnectedMetroResult> ConnectedMetros;
        /// <summary>
        /// Autonomous system number (ASN) for a specified Fabric metro. The ASN is a unique identifier that carries the network routing protocol and exchanges that data with other internal systems via border gateway protocol.
        /// </summary>
        public readonly int EquinixAsn;
        /// <summary>
        /// Geographic location data of Fabric Metro
        /// </summary>
        public readonly Outputs.GetMetrosDataGeoCoordinatesResult GeoCoordinates;
        /// <summary>
        /// List of supported geographic boundaries of a Fabric Metro. Example values: CANADA, CONUS.
        /// </summary>
        public readonly ImmutableArray<string> GeoScopes;
        /// <summary>
        /// The canonical URL at which the resource resides
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// This field holds Max Connection speed within the metro.
        /// </summary>
        public readonly int LocalVcBandwidthMax;
        /// <summary>
        /// Name of the region in which the data center is located
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Board geographical area in which the data center is located
        /// </summary>
        public readonly string Region;
        /// <summary>
        /// Indicator of a fabric metro
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private GetMetrosDataResult(
            string code,

            ImmutableArray<Outputs.GetMetrosDataConnectedMetroResult> connectedMetros,

            int equinixAsn,

            Outputs.GetMetrosDataGeoCoordinatesResult geoCoordinates,

            ImmutableArray<string> geoScopes,

            string href,

            int localVcBandwidthMax,

            string name,

            string region,

            string type)
        {
            Code = code;
            ConnectedMetros = connectedMetros;
            EquinixAsn = equinixAsn;
            GeoCoordinates = geoCoordinates;
            GeoScopes = geoScopes;
            Href = href;
            LocalVcBandwidthMax = localVcBandwidthMax;
            Name = name;
            Region = region;
            Type = type;
        }
    }
}
