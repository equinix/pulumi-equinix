// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class GetStreamAlertRulesDataResult
    {
        /// <summary>
        /// Details of the last change on the stream resource
        /// </summary>
        public readonly Outputs.GetStreamAlertRulesDataChangeLogResult ChangeLog;
        /// <summary>
        /// Customer-provided stream alert rule description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Detection method for stream alert rule
        /// </summary>
        public readonly Outputs.GetStreamAlertRulesDataDetectionMethodResult DetectionMethod;
        /// <summary>
        /// Stream subscription enabled status
        /// </summary>
        public readonly bool Enabled;
        /// <summary>
        /// Equinix assigned URI of the stream alert rule resource
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// Metric selector for the stream alert rule
        /// </summary>
        public readonly Outputs.GetStreamAlertRulesDataMetricSelectorResult MetricSelector;
        /// <summary>
        /// Customer-provided stream alert rule name
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Lists of metrics to be included/excluded on the stream alert rule
        /// </summary>
        public readonly Outputs.GetStreamAlertRulesDataResourceSelectorResult ResourceSelector;
        /// <summary>
        /// Value representing provisioning status for the stream resource
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Type of the stream alert rule
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Equinix assigned unique identifier of the stream subscription resource
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetStreamAlertRulesDataResult(
            Outputs.GetStreamAlertRulesDataChangeLogResult changeLog,

            string description,

            Outputs.GetStreamAlertRulesDataDetectionMethodResult detectionMethod,

            bool enabled,

            string href,

            Outputs.GetStreamAlertRulesDataMetricSelectorResult metricSelector,

            string name,

            Outputs.GetStreamAlertRulesDataResourceSelectorResult resourceSelector,

            string state,

            string type,

            string uuid)
        {
            ChangeLog = changeLog;
            Description = description;
            DetectionMethod = detectionMethod;
            Enabled = enabled;
            Href = href;
            MetricSelector = metricSelector;
            Name = name;
            ResourceSelector = resourceSelector;
            State = state;
            Type = type;
            Uuid = uuid;
        }
    }
}
