// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class GetRouteAggregationRulesDataResult
    {
        /// <summary>
        /// Current state of latest route aggregation rule change
        /// </summary>
        public readonly Outputs.GetRouteAggregationRulesDataChangeResult Change;
        /// <summary>
        /// Details of the last change on the stream resource
        /// </summary>
        public readonly Outputs.GetRouteAggregationRulesDataChangeLogResult ChangeLog;
        /// <summary>
        /// Customer-provided route aggregation rule description
        /// </summary>
        public readonly string? Description;
        /// <summary>
        /// Equinix auto generated URI to the route aggregation rule resource
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// Customer provided name of the route aggregation rule
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Customer-provided route aggregation rule prefix
        /// </summary>
        public readonly string Prefix;
        /// <summary>
        /// UUID of the Route Aggregation to apply this Rule to
        /// </summary>
        public readonly string RouteAggregationId;
        /// <summary>
        /// Value representing provisioning status for the route aggregation rule resource
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Equinix-assigned unique id for the route aggregation rule resource
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetRouteAggregationRulesDataResult(
            Outputs.GetRouteAggregationRulesDataChangeResult change,

            Outputs.GetRouteAggregationRulesDataChangeLogResult changeLog,

            string? description,

            string href,

            string name,

            string prefix,

            string routeAggregationId,

            string state,

            string type,

            string uuid)
        {
            Change = change;
            ChangeLog = changeLog;
            Description = description;
            Href = href;
            Name = name;
            Prefix = prefix;
            RouteAggregationId = routeAggregationId;
            State = state;
            Type = type;
            Uuid = uuid;
        }
    }
}
