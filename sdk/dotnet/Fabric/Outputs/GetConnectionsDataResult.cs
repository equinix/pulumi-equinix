// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Outputs
{

    [OutputType]
    public sealed class GetConnectionsDataResult
    {
        /// <summary>
        /// Requester or Customer side connection configuration object of the multi-segment connection
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataASideResult> ASides;
        /// <summary>
        /// Customer account information that is associated with this connection
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataAccountResult> Accounts;
        /// <summary>
        /// Connection additional information
        /// </summary>
        public readonly ImmutableArray<ImmutableDictionary<string, object>> AdditionalInfos;
        /// <summary>
        /// Connection bandwidth in Mbps
        /// </summary>
        public readonly int Bandwidth;
        /// <summary>
        /// Captures connection lifecycle change information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataChangeLogResult> ChangeLogs;
        /// <summary>
        /// Customer-provided connection description
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// Connection directionality from the requester point of view
        /// </summary>
        public readonly string Direction;
        /// <summary>
        /// Connection URI information
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// Connection property derived from access point locations
        /// </summary>
        public readonly bool IsRemote;
        /// <summary>
        /// Connection name. An alpha-numeric 24 characters string which can include only hyphens and underscores
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// Preferences for notifications on connection configuration or status changes
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataNotificationResult> Notifications;
        /// <summary>
        /// Connection type-specific operational data
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataOperationResult> Operations;
        /// <summary>
        /// Order details
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataOrderResult> Orders;
        /// <summary>
        /// Project information
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataProjectResult> Projects;
        /// <summary>
        /// Connection Redundancy Configuration
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataRedundancyResult> Redundancies;
        /// <summary>
        /// Connection overall state
        /// </summary>
        public readonly string State;
        /// <summary>
        /// Defines the connection type like EVPL_VC, EPL_VC, IPWAN_VC, IP_VC, ACCESS_EPL_VC, EVPLAN_VC, EPLAN_VC, EIA_VC, IA_VC, EC_VC
        /// </summary>
        public readonly string Type;
        /// <summary>
        /// Equinix-assigned connection identifier
        /// </summary>
        public readonly string Uuid;
        /// <summary>
        /// Destination or Provider side connection configuration object of the multi-segment connection
        /// </summary>
        public readonly ImmutableArray<Outputs.GetConnectionsDataZSideResult> ZSides;

        [OutputConstructor]
        private GetConnectionsDataResult(
            ImmutableArray<Outputs.GetConnectionsDataASideResult> aSides,

            ImmutableArray<Outputs.GetConnectionsDataAccountResult> accounts,

            ImmutableArray<ImmutableDictionary<string, object>> additionalInfos,

            int bandwidth,

            ImmutableArray<Outputs.GetConnectionsDataChangeLogResult> changeLogs,

            string description,

            string direction,

            string href,

            bool isRemote,

            string name,

            ImmutableArray<Outputs.GetConnectionsDataNotificationResult> notifications,

            ImmutableArray<Outputs.GetConnectionsDataOperationResult> operations,

            ImmutableArray<Outputs.GetConnectionsDataOrderResult> orders,

            ImmutableArray<Outputs.GetConnectionsDataProjectResult> projects,

            ImmutableArray<Outputs.GetConnectionsDataRedundancyResult> redundancies,

            string state,

            string type,

            string uuid,

            ImmutableArray<Outputs.GetConnectionsDataZSideResult> zSides)
        {
            ASides = aSides;
            Accounts = accounts;
            AdditionalInfos = additionalInfos;
            Bandwidth = bandwidth;
            ChangeLogs = changeLogs;
            Description = description;
            Direction = direction;
            Href = href;
            IsRemote = isRemote;
            Name = name;
            Notifications = notifications;
            Operations = operations;
            Orders = orders;
            Projects = projects;
            Redundancies = redundancies;
            State = state;
            Type = type;
            Uuid = uuid;
            ZSides = zSides;
        }
    }
}
