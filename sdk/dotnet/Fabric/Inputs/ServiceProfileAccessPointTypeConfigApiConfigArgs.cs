// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Inputs
{

    public sealed class ServiceProfileAccessPointTypeConfigApiConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Setting showing that oversubscription support is available (true) or not (false). The default is false
        /// </summary>
        [Input("allowOverSubscription")]
        public Input<bool>? AllowOverSubscription { get; set; }

        /// <summary>
        /// Indicates if it's possible to establish connections based on the given service profile using the Equinix Fabric API.
        /// </summary>
        [Input("apiAvailable")]
        public Input<bool>? ApiAvailable { get; set; }

        /// <summary>
        /// Indicates if the connection bandwidth can be obtained directly from the cloud service provider.
        /// </summary>
        [Input("bandwidthFromApi")]
        public Input<bool>? BandwidthFromApi { get; set; }

        /// <summary>
        /// Setting indicating that the port is managed by Equinix (true) or not (false)
        /// </summary>
        [Input("equinixManagedPort")]
        public Input<bool>? EquinixManagedPort { get; set; }

        /// <summary>
        /// Setting indicating that the VLAN is managed by Equinix (true) or not (false)
        /// </summary>
        [Input("equinixManagedVlan")]
        public Input<bool>? EquinixManagedVlan { get; set; }

        /// <summary>
        /// A unique identifier issued during onboarding and used to integrate the customer's service profile with the Equinix Fabric API.
        /// </summary>
        [Input("integrationId")]
        public Input<string>? IntegrationId { get; set; }

        /// <summary>
        /// Port bandwidth multiplier that determines the total bandwidth that can be allocated to users creating connections to your services. For example, a 10 Gbps port combined with an overSubscriptionLimit parameter value of 10 allows your subscribers to create connections with a total bandwidth of 100 Gbps.
        /// </summary>
        [Input("overSubscriptionLimit")]
        public Input<int>? OverSubscriptionLimit { get; set; }

        public ServiceProfileAccessPointTypeConfigApiConfigArgs()
        {
        }
        public static new ServiceProfileAccessPointTypeConfigApiConfigArgs Empty => new ServiceProfileAccessPointTypeConfigApiConfigArgs();
    }
}
