// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric.Inputs
{

    public sealed class ServiceTokenServiceTokenConnectionGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("aSides")]
        private InputList<Inputs.ServiceTokenServiceTokenConnectionASideGetArgs>? _aSides;

        /// <summary>
        /// A-Side Connection link protocol,virtual device or network configuration
        /// </summary>
        public InputList<Inputs.ServiceTokenServiceTokenConnectionASideGetArgs> ASides
        {
            get => _aSides ?? (_aSides = new InputList<Inputs.ServiceTokenServiceTokenConnectionASideGetArgs>());
            set => _aSides = value;
        }

        /// <summary>
        /// Allow custom bandwidth value
        /// </summary>
        [Input("allowCustomBandwidth")]
        public Input<bool>? AllowCustomBandwidth { get; set; }

        /// <summary>
        /// Authorization to connect remotely
        /// </summary>
        [Input("allowRemoteConnection")]
        public Input<bool>? AllowRemoteConnection { get; set; }

        /// <summary>
        /// Connection bandwidth limit in Mbps
        /// </summary>
        [Input("bandwidthLimit")]
        public Input<int>? BandwidthLimit { get; set; }

        [Input("supportedBandwidths")]
        private InputList<int>? _supportedBandwidths;

        /// <summary>
        /// List of permitted bandwidths'; For Port-based Service Tokens, the maximum allowable bandwidth is 50 Gbps, while for Virtual Device-based Service Tokens, it is limited to 10 Gbps
        /// </summary>
        public InputList<int> SupportedBandwidths
        {
            get => _supportedBandwidths ?? (_supportedBandwidths = new InputList<int>());
            set => _supportedBandwidths = value;
        }

        /// <summary>
        /// Type of Connection supported by Service Token you will create; EVPL*VC, EVPLAN*VC, EPLAN*VC, IPWAN*VC
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Equinix-assigned connection identifier
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        [Input("zSides")]
        private InputList<Inputs.ServiceTokenServiceTokenConnectionZSideGetArgs>? _zSides;

        /// <summary>
        /// Z-Side Connection link protocol,virtual device or network configuration
        /// </summary>
        public InputList<Inputs.ServiceTokenServiceTokenConnectionZSideGetArgs> ZSides
        {
            get => _zSides ?? (_zSides = new InputList<Inputs.ServiceTokenServiceTokenConnectionZSideGetArgs>());
            set => _zSides = value;
        }

        public ServiceTokenServiceTokenConnectionGetArgs()
        {
        }
        public static new ServiceTokenServiceTokenConnectionGetArgs Empty => new ServiceTokenServiceTokenConnectionGetArgs();
    }
}
