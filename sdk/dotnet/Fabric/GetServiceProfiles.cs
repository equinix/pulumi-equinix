// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetServiceProfiles
    {
        public static Task<GetServiceProfilesResult> InvokeAsync(GetServiceProfilesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServiceProfilesResult>("equinix:fabric/getServiceProfiles:getServiceProfiles", args ?? new GetServiceProfilesArgs(), options.WithDefaults());

        public static Output<GetServiceProfilesResult> Invoke(GetServiceProfilesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServiceProfilesResult>("equinix:fabric/getServiceProfiles:getServiceProfiles", args ?? new GetServiceProfilesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServiceProfilesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetServiceProfilesFilterArgs>? _filters;

        /// <summary>
        /// Service Profile Search Filter
        /// </summary>
        public List<Inputs.GetServiceProfilesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetServiceProfilesFilterArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private List<Inputs.GetServiceProfilesSortArgs>? _sorts;

        /// <summary>
        /// Service Profile Sort criteria for Search Request response payload
        /// </summary>
        public List<Inputs.GetServiceProfilesSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetServiceProfilesSortArgs>());
            set => _sorts = value;
        }

        public GetServiceProfilesArgs()
        {
        }
        public static new GetServiceProfilesArgs Empty => new GetServiceProfilesArgs();
    }

    public sealed class GetServiceProfilesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetServiceProfilesFilterInputArgs>? _filters;

        /// <summary>
        /// Service Profile Search Filter
        /// </summary>
        public InputList<Inputs.GetServiceProfilesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetServiceProfilesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("sorts")]
        private InputList<Inputs.GetServiceProfilesSortInputArgs>? _sorts;

        /// <summary>
        /// Service Profile Sort criteria for Search Request response payload
        /// </summary>
        public InputList<Inputs.GetServiceProfilesSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetServiceProfilesSortInputArgs>());
            set => _sorts = value;
        }

        public GetServiceProfilesInvokeArgs()
        {
        }
        public static new GetServiceProfilesInvokeArgs Empty => new GetServiceProfilesInvokeArgs();
    }


    [OutputType]
    public sealed class GetServiceProfilesResult
    {
        /// <summary>
        /// List of  Service Profiles
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceProfilesDataResult> Datas;
        /// <summary>
        /// Service Profile Search Filter
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceProfilesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Service Profile Sort criteria for Search Request response payload
        /// </summary>
        public readonly ImmutableArray<Outputs.GetServiceProfilesSortResult> Sorts;

        [OutputConstructor]
        private GetServiceProfilesResult(
            ImmutableArray<Outputs.GetServiceProfilesDataResult> datas,

            ImmutableArray<Outputs.GetServiceProfilesFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetServiceProfilesSortResult> sorts)
        {
            Datas = datas;
            Filters = filters;
            Id = id;
            Sorts = sorts;
        }
    }
}
