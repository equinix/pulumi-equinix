// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetPorts
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch port by name
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var portsDataName = Equinix.Fabric.GetPorts.Invoke(new()
        ///     {
        ///         Filter = new Equinix.Fabric.Inputs.GetPortsFilterInputArgs
        ///         {
        ///             Name = "&lt;name_of_port||port_prefix&gt;",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Task<GetPortsResult> InvokeAsync(GetPortsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPortsResult>("equinix:fabric/getPorts:getPorts", args ?? new GetPortsArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch port by name
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var portsDataName = Equinix.Fabric.GetPorts.Invoke(new()
        ///     {
        ///         Filter = new Equinix.Fabric.Inputs.GetPortsFilterInputArgs
        ///         {
        ///             Name = "&lt;name_of_port||port_prefix&gt;",
        ///         },
        ///     });
        /// 
        /// });
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// </summary>
        public static Output<GetPortsResult> Invoke(GetPortsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortsResult>("equinix:fabric/getPorts:getPorts", args ?? new GetPortsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// name
        /// </summary>
        [Input("filter", required: true)]
        public Inputs.GetPortsFilterArgs Filter { get; set; } = null!;

        public GetPortsArgs()
        {
        }
        public static new GetPortsArgs Empty => new GetPortsArgs();
    }

    public sealed class GetPortsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// name
        /// </summary>
        [Input("filter", required: true)]
        public Input<Inputs.GetPortsFilterInputArgs> Filter { get; set; } = null!;

        public GetPortsInvokeArgs()
        {
        }
        public static new GetPortsInvokeArgs Empty => new GetPortsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPortsResult
    {
        /// <summary>
        /// List of Ports
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPortsDatumResult> Data;
        /// <summary>
        /// name
        /// </summary>
        public readonly Outputs.GetPortsFilterResult Filter;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetPortsResult(
            ImmutableArray<Outputs.GetPortsDatumResult> data,

            Outputs.GetPortsFilterResult filter,

            string id)
        {
            Data = data;
            Filter = filter;
            Id = id;
        }
    }
}
