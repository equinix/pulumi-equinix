// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetPorts
    {
        public static Task<GetPortsResult> InvokeAsync(GetPortsArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPortsResult>("equinix:fabric/getPorts:getPorts", args ?? new GetPortsArgs(), options.WithDefaults());

        public static Output<GetPortsResult> Invoke(GetPortsInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPortsResult>("equinix:fabric/getPorts:getPorts", args ?? new GetPortsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPortsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPortsFilterArgs>? _filters;

        /// <summary>
        /// name
        /// </summary>
        public List<Inputs.GetPortsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPortsFilterArgs>());
            set => _filters = value;
        }

        public GetPortsArgs()
        {
        }
        public static new GetPortsArgs Empty => new GetPortsArgs();
    }

    public sealed class GetPortsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPortsFilterInputArgs>? _filters;

        /// <summary>
        /// name
        /// </summary>
        public InputList<Inputs.GetPortsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPortsFilterInputArgs>());
            set => _filters = value;
        }

        public GetPortsInvokeArgs()
        {
        }
        public static new GetPortsInvokeArgs Empty => new GetPortsInvokeArgs();
    }


    [OutputType]
    public sealed class GetPortsResult
    {
        /// <summary>
        /// List of  Ports
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPortsDataResult> Datas;
        /// <summary>
        /// name
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPortsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;

        [OutputConstructor]
        private GetPortsResult(
            ImmutableArray<Outputs.GetPortsDataResult> datas,

            ImmutableArray<Outputs.GetPortsFilterResult> filters,

            string id)
        {
            Datas = datas;
            Filters = filters;
            Id = id;
        }
    }
}
