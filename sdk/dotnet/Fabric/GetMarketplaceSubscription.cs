// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetMarketplaceSubscription
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Marketplace Subscription detail for a given UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var subscription_test = Equinix.Fabric.GetMarketplaceSubscription.Invoke(new()
        ///     {
        ///         Uuid = "&lt;uuid_of_marketplace_subscription&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Id)),
        ///         ["status"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Status)),
        ///         ["marketplace"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Marketplace)),
        ///         ["offerType"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.OfferType)),
        ///         ["isAutoRenew"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.IsAutoRenew)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetMarketplaceSubscriptionResult> InvokeAsync(GetMarketplaceSubscriptionArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMarketplaceSubscriptionResult>("equinix:fabric/getMarketplaceSubscription:getMarketplaceSubscription", args ?? new GetMarketplaceSubscriptionArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Marketplace Subscription detail for a given UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var subscription_test = Equinix.Fabric.GetMarketplaceSubscription.Invoke(new()
        ///     {
        ///         Uuid = "&lt;uuid_of_marketplace_subscription&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Id)),
        ///         ["status"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Status)),
        ///         ["marketplace"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Marketplace)),
        ///         ["offerType"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.OfferType)),
        ///         ["isAutoRenew"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.IsAutoRenew)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMarketplaceSubscriptionResult> Invoke(GetMarketplaceSubscriptionInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMarketplaceSubscriptionResult>("equinix:fabric/getMarketplaceSubscription:getMarketplaceSubscription", args ?? new GetMarketplaceSubscriptionInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Marketplace Subscription detail for a given UUID
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using Equinix = Pulumi.Equinix;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var subscription_test = Equinix.Fabric.GetMarketplaceSubscription.Invoke(new()
        ///     {
        ///         Uuid = "&lt;uuid_of_marketplace_subscription&gt;",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Id)),
        ///         ["status"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Status)),
        ///         ["marketplace"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.Marketplace)),
        ///         ["offerType"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.OfferType)),
        ///         ["isAutoRenew"] = subscription_test.Apply(subscription_test =&gt; subscription_test.Apply(getMarketplaceSubscriptionResult =&gt; getMarketplaceSubscriptionResult.IsAutoRenew)),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetMarketplaceSubscriptionResult> Invoke(GetMarketplaceSubscriptionInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetMarketplaceSubscriptionResult>("equinix:fabric/getMarketplaceSubscription:getMarketplaceSubscription", args ?? new GetMarketplaceSubscriptionInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMarketplaceSubscriptionArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Equinix-assigned marketplace identifier
        /// </summary>
        [Input("uuid", required: true)]
        public string Uuid { get; set; } = null!;

        public GetMarketplaceSubscriptionArgs()
        {
        }
        public static new GetMarketplaceSubscriptionArgs Empty => new GetMarketplaceSubscriptionArgs();
    }

    public sealed class GetMarketplaceSubscriptionInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Equinix-assigned marketplace identifier
        /// </summary>
        [Input("uuid", required: true)]
        public Input<string> Uuid { get; set; } = null!;

        public GetMarketplaceSubscriptionInvokeArgs()
        {
        }
        public static new GetMarketplaceSubscriptionInvokeArgs Empty => new GetMarketplaceSubscriptionInvokeArgs();
    }


    [OutputType]
    public sealed class GetMarketplaceSubscriptionResult
    {
        /// <summary>
        /// Subscription entitlements
        /// </summary>
        public readonly ImmutableArray<Outputs.GetMarketplaceSubscriptionEntitlementResult> Entitlements;
        /// <summary>
        /// Subscription URI information
        /// </summary>
        public readonly string Href;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Information about subscription auto renewal
        /// </summary>
        public readonly bool IsAutoRenew;
        /// <summary>
        /// Marketplace like; AWS, GCP, AZURE, REDHAT
        /// </summary>
        public readonly string Marketplace;
        /// <summary>
        /// Marketplace Offer Type like; PUBLIC, PRIVATE_OFFER
        /// </summary>
        public readonly string OfferType;
        /// <summary>
        /// Subscription Status like; ACTIVE, EXPIRED, CANCELLED, GRACE_PERIOD
        /// </summary>
        public readonly string Status;
        /// <summary>
        /// Subscription Trial
        /// </summary>
        public readonly Outputs.GetMarketplaceSubscriptionTrialResult Trial;
        /// <summary>
        /// Equinix-assigned marketplace identifier
        /// </summary>
        public readonly string Uuid;

        [OutputConstructor]
        private GetMarketplaceSubscriptionResult(
            ImmutableArray<Outputs.GetMarketplaceSubscriptionEntitlementResult> entitlements,

            string href,

            string id,

            bool isAutoRenew,

            string marketplace,

            string offerType,

            string status,

            Outputs.GetMarketplaceSubscriptionTrialResult trial,

            string uuid)
        {
            Entitlements = entitlements;
            Href = href;
            Id = id;
            IsAutoRenew = isAutoRenew;
            Marketplace = marketplace;
            OfferType = offerType;
            Status = status;
            Trial = trial;
            Uuid = uuid;
        }
    }
}
