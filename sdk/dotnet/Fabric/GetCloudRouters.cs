// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetCloudRouters
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Fabric Cloud Routers matching custom search criteria
        /// 
        /// Additional documentation:
        /// * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks
        /// * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers
        /// </summary>
        public static Task<GetCloudRoutersResult> InvokeAsync(GetCloudRoutersArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetCloudRoutersResult>("equinix:fabric/getCloudRouters:getCloudRouters", args ?? new GetCloudRoutersArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Fabric Cloud Routers matching custom search criteria
        /// 
        /// Additional documentation:
        /// * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks
        /// * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers
        /// </summary>
        public static Output<GetCloudRoutersResult> Invoke(GetCloudRoutersInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudRoutersResult>("equinix:fabric/getCloudRouters:getCloudRouters", args ?? new GetCloudRoutersInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Fabric Cloud Routers matching custom search criteria
        /// 
        /// Additional documentation:
        /// * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks
        /// * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers
        /// </summary>
        public static Output<GetCloudRoutersResult> Invoke(GetCloudRoutersInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetCloudRoutersResult>("equinix:fabric/getCloudRouters:getCloudRouters", args ?? new GetCloudRoutersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetCloudRoutersArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters", required: true)]
        private List<Inputs.GetCloudRoutersFilterArgs>? _filters;

        /// <summary>
        /// Filters for the Data Source Search Request. Maximum of 8 total filters.
        /// </summary>
        public List<Inputs.GetCloudRoutersFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetCloudRoutersFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Pagination details for the Data Source Search Request
        /// </summary>
        [Input("pagination")]
        public Inputs.GetCloudRoutersPaginationArgs? Pagination { get; set; }

        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        [Input("sort")]
        public Inputs.GetCloudRoutersSortArgs? Sort { get; set; }

        public GetCloudRoutersArgs()
        {
        }
        public static new GetCloudRoutersArgs Empty => new GetCloudRoutersArgs();
    }

    public sealed class GetCloudRoutersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters", required: true)]
        private InputList<Inputs.GetCloudRoutersFilterInputArgs>? _filters;

        /// <summary>
        /// Filters for the Data Source Search Request. Maximum of 8 total filters.
        /// </summary>
        public InputList<Inputs.GetCloudRoutersFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetCloudRoutersFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Pagination details for the Data Source Search Request
        /// </summary>
        [Input("pagination")]
        public Input<Inputs.GetCloudRoutersPaginationInputArgs>? Pagination { get; set; }

        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        [Input("sort")]
        public Input<Inputs.GetCloudRoutersSortInputArgs>? Sort { get; set; }

        public GetCloudRoutersInvokeArgs()
        {
        }
        public static new GetCloudRoutersInvokeArgs Empty => new GetCloudRoutersInvokeArgs();
    }


    [OutputType]
    public sealed class GetCloudRoutersResult
    {
        /// <summary>
        /// List of Cloud Routers
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRoutersDataResult> Datas;
        /// <summary>
        /// Filters for the Data Source Search Request. Maximum of 8 total filters.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetCloudRoutersFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Pagination details for the Data Source Search Request
        /// </summary>
        public readonly Outputs.GetCloudRoutersPaginationResult? Pagination;
        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        public readonly Outputs.GetCloudRoutersSortResult? Sort;

        [OutputConstructor]
        private GetCloudRoutersResult(
            ImmutableArray<Outputs.GetCloudRoutersDataResult> datas,

            ImmutableArray<Outputs.GetCloudRoutersFilterResult> filters,

            string id,

            Outputs.GetCloudRoutersPaginationResult? pagination,

            Outputs.GetCloudRoutersSortResult? sort)
        {
            Datas = datas;
            Filters = filters;
            Id = id;
            Pagination = pagination;
            Sort = sort;
        }
    }
}
