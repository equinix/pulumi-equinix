// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Fabric
{
    public static class GetPrecisionTimeServices
    {
        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Precision Time Services with pagination details
        /// Additional Documentation:
        /// * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
        /// </summary>
        public static Task<GetPrecisionTimeServicesResult> InvokeAsync(GetPrecisionTimeServicesArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetPrecisionTimeServicesResult>("equinix:fabric/getPrecisionTimeServices:getPrecisionTimeServices", args ?? new GetPrecisionTimeServicesArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Precision Time Services with pagination details
        /// Additional Documentation:
        /// * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
        /// </summary>
        public static Output<GetPrecisionTimeServicesResult> Invoke(GetPrecisionTimeServicesInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrecisionTimeServicesResult>("equinix:fabric/getPrecisionTimeServices:getPrecisionTimeServices", args ?? new GetPrecisionTimeServicesInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Precision Time Services with pagination details
        /// Additional Documentation:
        /// * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
        /// </summary>
        public static Output<GetPrecisionTimeServicesResult> Invoke(GetPrecisionTimeServicesInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetPrecisionTimeServicesResult>("equinix:fabric/getPrecisionTimeServices:getPrecisionTimeServices", args ?? new GetPrecisionTimeServicesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetPrecisionTimeServicesArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetPrecisionTimeServicesFilterArgs>? _filters;

        /// <summary>
        /// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
        /// </summary>
        public List<Inputs.GetPrecisionTimeServicesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetPrecisionTimeServicesFilterArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Pagination details for the returned route aggregations list
        /// </summary>
        [Input("pagination")]
        public Inputs.GetPrecisionTimeServicesPaginationArgs? Pagination { get; set; }

        [Input("sorts")]
        private List<Inputs.GetPrecisionTimeServicesSortArgs>? _sorts;

        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        public List<Inputs.GetPrecisionTimeServicesSortArgs> Sorts
        {
            get => _sorts ?? (_sorts = new List<Inputs.GetPrecisionTimeServicesSortArgs>());
            set => _sorts = value;
        }

        public GetPrecisionTimeServicesArgs()
        {
        }
        public static new GetPrecisionTimeServicesArgs Empty => new GetPrecisionTimeServicesArgs();
    }

    public sealed class GetPrecisionTimeServicesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetPrecisionTimeServicesFilterInputArgs>? _filters;

        /// <summary>
        /// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
        /// </summary>
        public InputList<Inputs.GetPrecisionTimeServicesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetPrecisionTimeServicesFilterInputArgs>());
            set => _filters = value;
        }

        /// <summary>
        /// Pagination details for the returned route aggregations list
        /// </summary>
        [Input("pagination")]
        public Input<Inputs.GetPrecisionTimeServicesPaginationInputArgs>? Pagination { get; set; }

        [Input("sorts")]
        private InputList<Inputs.GetPrecisionTimeServicesSortInputArgs>? _sorts;

        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        public InputList<Inputs.GetPrecisionTimeServicesSortInputArgs> Sorts
        {
            get => _sorts ?? (_sorts = new InputList<Inputs.GetPrecisionTimeServicesSortInputArgs>());
            set => _sorts = value;
        }

        public GetPrecisionTimeServicesInvokeArgs()
        {
        }
        public static new GetPrecisionTimeServicesInvokeArgs Empty => new GetPrecisionTimeServicesInvokeArgs();
    }


    [OutputType]
    public sealed class GetPrecisionTimeServicesResult
    {
        /// <summary>
        /// Returned list of route aggregation objects
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrecisionTimeServicesDataResult> Datas;
        /// <summary>
        /// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrecisionTimeServicesFilterResult> Filters;
        /// <summary>
        /// The unique identifier of the resource
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// Pagination details for the returned route aggregations list
        /// </summary>
        public readonly Outputs.GetPrecisionTimeServicesPaginationResult? Pagination;
        /// <summary>
        /// Filters for the Data Source Search Request
        /// </summary>
        public readonly ImmutableArray<Outputs.GetPrecisionTimeServicesSortResult> Sorts;

        [OutputConstructor]
        private GetPrecisionTimeServicesResult(
            ImmutableArray<Outputs.GetPrecisionTimeServicesDataResult> datas,

            ImmutableArray<Outputs.GetPrecisionTimeServicesFilterResult> filters,

            string id,

            Outputs.GetPrecisionTimeServicesPaginationResult? pagination,

            ImmutableArray<Outputs.GetPrecisionTimeServicesSortResult> sorts)
        {
            Datas = datas;
            Filters = filters;
            Id = id;
            Pagination = pagination;
            Sorts = sorts;
        }
    }
}
