// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Metal.Outputs
{

    [OutputType]
    public sealed class GetDevicesDeviceResult
    {
        public readonly string AccessPrivateIpv4;
        public readonly string AccessPublicIpv4;
        public readonly string AccessPublicIpv6;
        public readonly bool AlwaysPxe;
        public readonly string BillingCycle;
        public readonly string Description;
        public readonly string DeviceId;
        public readonly string Facility;
        public readonly string HardwareReservationId;
        public readonly string Hostname;
        public readonly string IpxeScriptUrl;
        public readonly string Metro;
        public readonly string NetworkType;
        public readonly ImmutableArray<Outputs.GetDevicesDeviceNetworkResult> Networks;
        public readonly string OperatingSystem;
        public readonly string Plan;
        public readonly ImmutableArray<Outputs.GetDevicesDevicePortResult> Ports;
        /// <summary>
        /// ID of project containing the devices. Exactly one of `project_id` and `organization_id` must be set.
        /// </summary>
        public readonly string ProjectId;
        public readonly string RootPassword;
        public readonly string SosHostname;
        public readonly ImmutableArray<string> SshKeyIds;
        public readonly string State;
        public readonly string Storage;
        public readonly ImmutableArray<string> Tags;

        [OutputConstructor]
        private GetDevicesDeviceResult(
            string accessPrivateIpv4,

            string accessPublicIpv4,

            string accessPublicIpv6,

            bool alwaysPxe,

            string billingCycle,

            string description,

            string deviceId,

            string facility,

            string hardwareReservationId,

            string hostname,

            string ipxeScriptUrl,

            string metro,

            string networkType,

            ImmutableArray<Outputs.GetDevicesDeviceNetworkResult> networks,

            string operatingSystem,

            string plan,

            ImmutableArray<Outputs.GetDevicesDevicePortResult> ports,

            string projectId,

            string rootPassword,

            string sosHostname,

            ImmutableArray<string> sshKeyIds,

            string state,

            string storage,

            ImmutableArray<string> tags)
        {
            AccessPrivateIpv4 = accessPrivateIpv4;
            AccessPublicIpv4 = accessPublicIpv4;
            AccessPublicIpv6 = accessPublicIpv6;
            AlwaysPxe = alwaysPxe;
            BillingCycle = billingCycle;
            Description = description;
            DeviceId = deviceId;
            Facility = facility;
            HardwareReservationId = hardwareReservationId;
            Hostname = hostname;
            IpxeScriptUrl = ipxeScriptUrl;
            Metro = metro;
            NetworkType = networkType;
            Networks = networks;
            OperatingSystem = operatingSystem;
            Plan = plan;
            Ports = ports;
            ProjectId = projectId;
            RootPassword = rootPassword;
            SosHostname = sosHostname;
            SshKeyIds = sshKeyIds;
            State = state;
            Storage = storage;
            Tags = tags;
        }
    }
}
