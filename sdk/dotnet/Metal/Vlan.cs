// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Metal
{
    /// <summary>
    /// Provides a resource to allow users to manage Virtual Networks in their projects.
    /// 
    /// To learn more about Layer 2 networking in Equinix Metal, refer to
    /// 
    /// * https://metal.equinix.com/developers/docs/networking/layer2/
    /// * https://metal.equinix.com/developers/docs/networking/layer2-configs/
    /// 
    /// ## Example Usage
    /// ```csharp
    /// using System.Collections.Generic;
    /// using Pulumi;
    /// using Equinix = Pulumi.Equinix;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var config = new Config();
    ///     var projectId = config.Require("projectId");
    ///     var metro = config.Get("metro") ?? "DA";
    ///     var vxlan = config.RequireNumber("vxlan");
    ///     var vlan = new Equinix.Metal.Vlan("vlan", new()
    ///     {
    ///         Description = "VLAN in Dallas",
    ///         ProjectId = projectId,
    ///         Metro = metro,
    ///         Vxlan = vxlan,
    ///     });
    /// 
    ///     return new Dictionary&lt;string, object?&gt;
    ///     {
    ///         ["vlanId"] = vlan.Id,
    ///     };
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// This resource can be imported using an existing VLAN ID (UUID):
    /// 
    /// ```sh
    /// $ pulumi import equinix:metal/vlan:Vlan equinix_metal_vlan {existing_vlan_id}
    /// ```
    /// </summary>
    [EquinixResourceType("equinix:metal/vlan:Vlan")]
    public partial class Vlan : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Description string.
        /// </summary>
        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// Facility where to create the VLAN. Use metro instead; read the facility to metro migration guide
        /// </summary>
        [Output("facility")]
        public Output<string> Facility { get; private set; } = null!;

        /// <summary>
        /// Metro in which to create the VLAN
        /// </summary>
        [Output("metro")]
        public Output<string> Metro { get; private set; } = null!;

        /// <summary>
        /// ID of parent project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// VLAN ID, must be unique in metro.
        /// </summary>
        [Output("vxlan")]
        public Output<int> Vxlan { get; private set; } = null!;


        /// <summary>
        /// Create a Vlan resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Vlan(string name, VlanArgs args, CustomResourceOptions? options = null)
            : base("equinix:metal/vlan:Vlan", name, args ?? new VlanArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Vlan(string name, Input<string> id, VlanState? state = null, CustomResourceOptions? options = null)
            : base("equinix:metal/vlan:Vlan", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/equinix",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Vlan resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Vlan Get(string name, Input<string> id, VlanState? state = null, CustomResourceOptions? options = null)
        {
            return new Vlan(name, id, state, options);
        }
    }

    public sealed class VlanArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description string.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Facility where to create the VLAN. Use metro instead; read the facility to metro migration guide
        /// </summary>
        [Input("facility")]
        public InputUnion<string, Pulumi.Equinix.Metal.Facility>? Facility { get; set; }

        /// <summary>
        /// Metro in which to create the VLAN
        /// </summary>
        [Input("metro")]
        public Input<string>? Metro { get; set; }

        /// <summary>
        /// ID of parent project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// VLAN ID, must be unique in metro.
        /// </summary>
        [Input("vxlan")]
        public Input<int>? Vxlan { get; set; }

        public VlanArgs()
        {
        }
        public static new VlanArgs Empty => new VlanArgs();
    }

    public sealed class VlanState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Description string.
        /// </summary>
        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// Facility where to create the VLAN. Use metro instead; read the facility to metro migration guide
        /// </summary>
        [Input("facility")]
        public InputUnion<string, Pulumi.Equinix.Metal.Facility>? Facility { get; set; }

        /// <summary>
        /// Metro in which to create the VLAN
        /// </summary>
        [Input("metro")]
        public Input<string>? Metro { get; set; }

        /// <summary>
        /// ID of parent project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// VLAN ID, must be unique in metro.
        /// </summary>
        [Input("vxlan")]
        public Input<int>? Vxlan { get; set; }

        public VlanState()
        {
        }
        public static new VlanState Empty => new VlanState();
    }
}
