// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Equinix.Metal.Inputs
{

    public sealed class GetDevicesFilterInputArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values. Default is `False`.
        /// 
        /// All fields in the `Devices` block defined below can be used as attribute for both `Sort` and `Filter` blocks.
        /// </summary>
        [Input("all")]
        public Input<bool>? All { get; set; }

        /// <summary>
        /// The attribute used to filter. Filter attributes are case-sensitive
        /// </summary>
        [Input("attribute", required: true)]
        public Input<string> Attribute { get; set; } = null!;

        /// <summary>
        /// The type of comparison to apply. One of: `In` , `Re`, `Substring`, `LessThan`, `LessThanOrEqual`, `GreaterThan`, `GreaterThanOrEqual`. Default is `In`.
        /// </summary>
        [Input("matchBy")]
        public Input<string>? MatchBy { get; set; }

        [Input("values", required: true)]
        private InputList<string>? _values;

        /// <summary>
        /// The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
        /// </summary>
        public InputList<string> Values
        {
            get => _values ?? (_values = new InputList<string>());
            set => _values = value;
        }

        public GetDevicesFilterInputArgs()
        {
        }
        public static new GetDevicesFilterInputArgs Empty => new GetDevicesFilterInputArgs();
    }
}
