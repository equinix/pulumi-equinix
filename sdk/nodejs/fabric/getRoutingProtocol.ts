// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getRoutingProtocol(args: GetRoutingProtocolArgs, opts?: pulumi.InvokeOptions): Promise<GetRoutingProtocolResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getRoutingProtocol:getRoutingProtocol", {
        "bfd": args.bfd,
        "bgpAuthKey": args.bgpAuthKey,
        "bgpIpv4": args.bgpIpv4,
        "bgpIpv6": args.bgpIpv6,
        "connectionUuid": args.connectionUuid,
        "customerAsn": args.customerAsn,
        "description": args.description,
        "directIpv4": args.directIpv4,
        "directIpv6": args.directIpv6,
        "name": args.name,
        "type": args.type,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getRoutingProtocol.
 */
export interface GetRoutingProtocolArgs {
    /**
     * Bidirectional Forwarding Detection
     */
    bfd?: inputs.fabric.GetRoutingProtocolBfd;
    /**
     * BGP authorization key
     */
    bgpAuthKey?: string;
    /**
     * Routing Protocol BGP IPv4
     */
    bgpIpv4?: inputs.fabric.GetRoutingProtocolBgpIpv4;
    /**
     * Routing Protocol BGP IPv6
     */
    bgpIpv6?: inputs.fabric.GetRoutingProtocolBgpIpv6;
    /**
     * Connection URI associated with Routing Protocol
     */
    connectionUuid: string;
    /**
     * Customer-provided ASN
     */
    customerAsn?: number;
    /**
     * Customer-provided Fabric Routing Protocol description
     */
    description?: string;
    /**
     * Routing Protocol Direct IPv4
     */
    directIpv4?: inputs.fabric.GetRoutingProtocolDirectIpv4;
    /**
     * Routing Protocol Direct IPv6
     */
    directIpv6?: inputs.fabric.GetRoutingProtocolDirectIpv6;
    /**
     * Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    name?: string;
    type?: string;
    uuid?: string;
}

/**
 * A collection of values returned by getRoutingProtocol.
 */
export interface GetRoutingProtocolResult {
    /**
     * Bidirectional Forwarding Detection
     */
    readonly bfd?: outputs.fabric.GetRoutingProtocolBfd;
    /**
     * BGP authorization key
     */
    readonly bgpAuthKey?: string;
    /**
     * Routing Protocol BGP IPv4
     */
    readonly bgpIpv4?: outputs.fabric.GetRoutingProtocolBgpIpv4;
    /**
     * Routing Protocol BGP IPv6
     */
    readonly bgpIpv6?: outputs.fabric.GetRoutingProtocolBgpIpv6;
    /**
     * Captures Routing Protocol lifecycle change information
     */
    readonly changeLogs: outputs.fabric.GetRoutingProtocolChangeLog[];
    /**
     * Routing Protocol configuration Changes
     */
    readonly changes: outputs.fabric.GetRoutingProtocolChange[];
    /**
     * Connection URI associated with Routing Protocol
     */
    readonly connectionUuid: string;
    /**
     * Customer-provided ASN
     */
    readonly customerAsn?: number;
    /**
     * Customer-provided Fabric Routing Protocol description
     */
    readonly description?: string;
    /**
     * Routing Protocol Direct IPv4
     */
    readonly directIpv4?: outputs.fabric.GetRoutingProtocolDirectIpv4;
    /**
     * Routing Protocol Direct IPv6
     */
    readonly directIpv6?: outputs.fabric.GetRoutingProtocolDirectIpv6;
    /**
     * Equinix ASN
     */
    readonly equinixAsn: number;
    /**
     * Routing Protocol URI information
     */
    readonly href: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    readonly name?: string;
    /**
     * Routing Protocol type-specific operational data
     */
    readonly operations: outputs.fabric.GetRoutingProtocolOperation[];
    /**
     * Routing Protocol overall state
     */
    readonly state: string;
    /**
     * Defines the routing protocol type like BGP or DIRECT
     */
    readonly type?: string;
    /**
     * Equinix-assigned routing protocol identifier
     */
    readonly uuid: string;
}
export function getRoutingProtocolOutput(args: GetRoutingProtocolOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetRoutingProtocolResult> {
    return pulumi.output(args).apply((a: any) => getRoutingProtocol(a, opts))
}

/**
 * A collection of arguments for invoking getRoutingProtocol.
 */
export interface GetRoutingProtocolOutputArgs {
    /**
     * Bidirectional Forwarding Detection
     */
    bfd?: pulumi.Input<inputs.fabric.GetRoutingProtocolBfdArgs>;
    /**
     * BGP authorization key
     */
    bgpAuthKey?: pulumi.Input<string>;
    /**
     * Routing Protocol BGP IPv4
     */
    bgpIpv4?: pulumi.Input<inputs.fabric.GetRoutingProtocolBgpIpv4Args>;
    /**
     * Routing Protocol BGP IPv6
     */
    bgpIpv6?: pulumi.Input<inputs.fabric.GetRoutingProtocolBgpIpv6Args>;
    /**
     * Connection URI associated with Routing Protocol
     */
    connectionUuid: pulumi.Input<string>;
    /**
     * Customer-provided ASN
     */
    customerAsn?: pulumi.Input<number>;
    /**
     * Customer-provided Fabric Routing Protocol description
     */
    description?: pulumi.Input<string>;
    /**
     * Routing Protocol Direct IPv4
     */
    directIpv4?: pulumi.Input<inputs.fabric.GetRoutingProtocolDirectIpv4Args>;
    /**
     * Routing Protocol Direct IPv6
     */
    directIpv6?: pulumi.Input<inputs.fabric.GetRoutingProtocolDirectIpv6Args>;
    /**
     * Routing Protocol name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    name?: pulumi.Input<string>;
    type?: pulumi.Input<string>;
    uuid?: pulumi.Input<string>;
}
