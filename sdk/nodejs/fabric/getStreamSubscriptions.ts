// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data source that allows user to fetch Equinix Fabric Stream Subscriptions with pagination
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Stream-Subscriptions
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const all = equinix.fabric.getStreamSubscriptions({
 *     pagination: {
 *         limit: 10,
 *         offset: 0,
 *     },
 *     streamId: "<stream_id>",
 * });
 * ```
 */
export function getStreamSubscriptions(args: GetStreamSubscriptionsArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamSubscriptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getStreamSubscriptions:getStreamSubscriptions", {
        "pagination": args.pagination,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamSubscriptions.
 */
export interface GetStreamSubscriptionsArgs {
    /**
     * Pagination details for the returned streams list
     */
    pagination: inputs.fabric.GetStreamSubscriptionsPagination;
    /**
     * The uuid of the stream that is the target of the stream subscription
     */
    streamId: string;
}

/**
 * A collection of values returned by getStreamSubscriptions.
 */
export interface GetStreamSubscriptionsResult {
    /**
     * Returned list of stream objects
     */
    readonly datas: outputs.fabric.GetStreamSubscriptionsData[];
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Pagination details for the returned streams list
     */
    readonly pagination: outputs.fabric.GetStreamSubscriptionsPagination;
    /**
     * The uuid of the stream that is the target of the stream subscription
     */
    readonly streamId: string;
}
/**
 * Fabric V4 API compatible data source that allows user to fetch Equinix Fabric Stream Subscriptions with pagination
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Stream-Subscriptions
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const all = equinix.fabric.getStreamSubscriptions({
 *     pagination: {
 *         limit: 10,
 *         offset: 0,
 *     },
 *     streamId: "<stream_id>",
 * });
 * ```
 */
export function getStreamSubscriptionsOutput(args: GetStreamSubscriptionsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamSubscriptionsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getStreamSubscriptions:getStreamSubscriptions", {
        "pagination": args.pagination,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamSubscriptions.
 */
export interface GetStreamSubscriptionsOutputArgs {
    /**
     * Pagination details for the returned streams list
     */
    pagination: pulumi.Input<inputs.fabric.GetStreamSubscriptionsPaginationArgs>;
    /**
     * The uuid of the stream that is the target of the stream subscription
     */
    streamId: pulumi.Input<string>;
}
