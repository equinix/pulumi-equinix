// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Precision Time Services with pagination details
 * Additional Documentation:
 * * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
 */
export function getPrecisionTimeServices(args?: GetPrecisionTimeServicesArgs, opts?: pulumi.InvokeOptions): Promise<GetPrecisionTimeServicesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getPrecisionTimeServices:getPrecisionTimeServices", {
        "filters": args.filters,
        "pagination": args.pagination,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrecisionTimeServices.
 */
export interface GetPrecisionTimeServicesArgs {
    /**
     * List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
     */
    filters?: inputs.fabric.GetPrecisionTimeServicesFilter[];
    /**
     * Pagination details for the returned route aggregations list
     */
    pagination?: inputs.fabric.GetPrecisionTimeServicesPagination;
    /**
     * Filters for the Data Source Search Request
     */
    sorts?: inputs.fabric.GetPrecisionTimeServicesSort[];
}

/**
 * A collection of values returned by getPrecisionTimeServices.
 */
export interface GetPrecisionTimeServicesResult {
    /**
     * Returned list of route aggregation objects
     */
    readonly datas: outputs.fabric.GetPrecisionTimeServicesData[];
    /**
     * List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
     */
    readonly filters: outputs.fabric.GetPrecisionTimeServicesFilter[];
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Pagination details for the returned route aggregations list
     */
    readonly pagination?: outputs.fabric.GetPrecisionTimeServicesPagination;
    /**
     * Filters for the Data Source Search Request
     */
    readonly sorts?: outputs.fabric.GetPrecisionTimeServicesSort[];
}
/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Precision Time Services with pagination details
 * Additional Documentation:
 * * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
 */
export function getPrecisionTimeServicesOutput(args?: GetPrecisionTimeServicesOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetPrecisionTimeServicesResult> {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getPrecisionTimeServices:getPrecisionTimeServices", {
        "filters": args.filters,
        "pagination": args.pagination,
        "sorts": args.sorts,
    }, opts);
}

/**
 * A collection of arguments for invoking getPrecisionTimeServices.
 */
export interface GetPrecisionTimeServicesOutputArgs {
    /**
     * List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
     */
    filters?: pulumi.Input<pulumi.Input<inputs.fabric.GetPrecisionTimeServicesFilterArgs>[]>;
    /**
     * Pagination details for the returned route aggregations list
     */
    pagination?: pulumi.Input<inputs.fabric.GetPrecisionTimeServicesPaginationArgs>;
    /**
     * Filters for the Data Source Search Request
     */
    sorts?: pulumi.Input<pulumi.Input<inputs.fabric.GetPrecisionTimeServicesSortArgs>[]>;
}
