// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data source that allows user to fetch Equinix Fabric Stream Alert Rule by Stream Id and Alert Rule Id
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Stream-Alert-Rules
 *
 * ## Example Usage
 */
export function getStreamAlertRule(args: GetStreamAlertRuleArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamAlertRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getStreamAlertRule:getStreamAlertRule", {
        "alertRuleId": args.alertRuleId,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAlertRule.
 */
export interface GetStreamAlertRuleArgs {
    /**
     * The uuid of the stream alert rule
     */
    alertRuleId: string;
    /**
     * The uuid of the stream that is the target of the stream alert rule
     */
    streamId: string;
}

/**
 * A collection of values returned by getStreamAlertRule.
 */
export interface GetStreamAlertRuleResult {
    /**
     * The uuid of the stream alert rule
     */
    readonly alertRuleId: string;
    /**
     * Details of the last change on the stream resource
     */
    readonly changeLog: outputs.fabric.GetStreamAlertRuleChangeLog;
    /**
     * Stream alert rule metric critical threshold
     */
    readonly criticalThreshold: string;
    /**
     * Customer-provided stream alert rule description
     */
    readonly description: string;
    /**
     * Stream subscription enabled status
     */
    readonly enabled: boolean;
    /**
     * Equinix assigned URI of the stream alert rule resource
     */
    readonly href: string;
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Stream alert rule metric name
     */
    readonly metricName: string;
    /**
     * Customer-provided stream alert rule name
     */
    readonly name: string;
    /**
     * Stream alert rule metric operand
     */
    readonly operand: string;
    /**
     * Lists of metrics to be included/excluded on the stream alert rule
     */
    readonly resourceSelector: outputs.fabric.GetStreamAlertRuleResourceSelector;
    /**
     * Value representing provisioning status for the stream resource
     */
    readonly state: string;
    /**
     * The uuid of the stream that is the target of the stream alert rule
     */
    readonly streamId: string;
    /**
     * Type of the stream alert rule
     */
    readonly type: string;
    /**
     * Equinix assigned unique identifier of the stream subscription resource
     */
    readonly uuid: string;
    /**
     * Stream alert rule metric warning threshold
     */
    readonly warningThreshold: string;
    /**
     * Stream alert rule metric window size
     */
    readonly windowSize: string;
}
/**
 * Fabric V4 API compatible data source that allows user to fetch Equinix Fabric Stream Alert Rule by Stream Id and Alert Rule Id
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Stream-Alert-Rules
 *
 * ## Example Usage
 */
export function getStreamAlertRuleOutput(args: GetStreamAlertRuleOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamAlertRuleResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getStreamAlertRule:getStreamAlertRule", {
        "alertRuleId": args.alertRuleId,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAlertRule.
 */
export interface GetStreamAlertRuleOutputArgs {
    /**
     * The uuid of the stream alert rule
     */
    alertRuleId: pulumi.Input<string>;
    /**
     * The uuid of the stream that is the target of the stream alert rule
     */
    streamId: pulumi.Input<string>;
}
