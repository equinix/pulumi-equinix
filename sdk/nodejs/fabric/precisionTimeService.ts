// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible resource allows creation and management of Equinix Fabric Precision Time Service
 *
 * Additional Documentation:
 * * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const ptp = new equinix.fabric.PrecisionTimeService("ptp", {
 *     type: "PTP",
 *     name: "tf_acc_eptptp_PFCR",
 *     "package": {
 *         code: "PTP_STANDARD",
 *     },
 *     connections: [{
 *         uuid: "<connection_id>",
 *     }],
 *     ipv4: {
 *         primary: "191.168.254.241",
 *         secondary: "191.168.254.242",
 *         networkMask: "255.255.255.240",
 *         defaultGateway: "191.168.254.254",
 *     },
 * });
 * export const eptServiceId = ptp.id;
 * export const eptServiceName = ptp.name;
 * export const eptServiceState = ptp.state;
 * export const eptServiceType = ptp.type;
 * export const eptServiceConnection = ptp.connections;
 * export const eptServiceIpv4 = ptp.ipv4;
 * ```
 */
export class PrecisionTimeService extends pulumi.CustomResource {
    /**
     * Get an existing PrecisionTimeService resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PrecisionTimeServiceState, opts?: pulumi.CustomResourceOptions): PrecisionTimeService {
        return new PrecisionTimeService(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:fabric/precisionTimeService:PrecisionTimeService';

    /**
     * Returns true if the given object is an instance of PrecisionTimeService.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PrecisionTimeService {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PrecisionTimeService.__pulumiType;
    }

    /**
     * Equinix User Account associated with Precision Time Service
     */
    declare public /*out*/ readonly account: pulumi.Output<outputs.fabric.PrecisionTimeServiceAccount>;
    /**
     * Details of the last change on the route aggregation resource
     */
    declare public /*out*/ readonly changeLog: pulumi.Output<outputs.fabric.PrecisionTimeServiceChangeLog>;
    /**
     * An array of objects with unique identifiers of connections.
     */
    declare public readonly connections: pulumi.Output<outputs.fabric.PrecisionTimeServiceConnection[]>;
    /**
     * Equinix generated Portal link for the created Precision Time Service
     */
    declare public /*out*/ readonly href: pulumi.Output<string>;
    /**
     * An object that has Network IP Configurations for Timing Master Servers.
     */
    declare public readonly ipv4: pulumi.Output<outputs.fabric.PrecisionTimeServiceIpv4>;
    /**
     * Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * NTP Advanced configuration
     */
    declare public readonly ntpAdvancedConfigurations: pulumi.Output<outputs.fabric.PrecisionTimeServiceNtpAdvancedConfiguration[]>;
    /**
     * Precision Time Order
     */
    declare public /*out*/ readonly order: pulumi.Output<outputs.fabric.PrecisionTimeServiceOrder>;
    /**
     * Precision Time Service Package Details
     */
    declare public readonly package: pulumi.Output<outputs.fabric.PrecisionTimeServicePackage>;
    /**
     * Precision Time Service Price
     */
    declare public /*out*/ readonly precisionTimePrice: pulumi.Output<outputs.fabric.PrecisionTimeServicePrecisionTimePrice>;
    /**
     * Equinix Project attribute object
     */
    declare public /*out*/ readonly project: pulumi.Output<outputs.fabric.PrecisionTimeServiceProject>;
    /**
     * PTP Advanced Configuration
     */
    declare public readonly ptpAdvancedConfiguration: pulumi.Output<outputs.fabric.PrecisionTimeServicePtpAdvancedConfiguration>;
    /**
     * Indicator of the state of this Precision Time Service
     */
    declare public /*out*/ readonly state: pulumi.Output<string>;
    declare public readonly timeouts: pulumi.Output<outputs.fabric.PrecisionTimeServiceTimeouts | undefined>;
    /**
     * Choose type of Precision Time Service
     */
    declare public readonly type: pulumi.Output<string>;
    /**
     * Equinix generated id for the Precision Time Service
     */
    declare public /*out*/ readonly uuid: pulumi.Output<string>;

    /**
     * Create a PrecisionTimeService resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PrecisionTimeServiceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PrecisionTimeServiceArgs | PrecisionTimeServiceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PrecisionTimeServiceState | undefined;
            resourceInputs["account"] = state?.account;
            resourceInputs["changeLog"] = state?.changeLog;
            resourceInputs["connections"] = state?.connections;
            resourceInputs["href"] = state?.href;
            resourceInputs["ipv4"] = state?.ipv4;
            resourceInputs["name"] = state?.name;
            resourceInputs["ntpAdvancedConfigurations"] = state?.ntpAdvancedConfigurations;
            resourceInputs["order"] = state?.order;
            resourceInputs["package"] = state?.package;
            resourceInputs["precisionTimePrice"] = state?.precisionTimePrice;
            resourceInputs["project"] = state?.project;
            resourceInputs["ptpAdvancedConfiguration"] = state?.ptpAdvancedConfiguration;
            resourceInputs["state"] = state?.state;
            resourceInputs["timeouts"] = state?.timeouts;
            resourceInputs["type"] = state?.type;
            resourceInputs["uuid"] = state?.uuid;
        } else {
            const args = argsOrState as PrecisionTimeServiceArgs | undefined;
            if (args?.connections === undefined && !opts.urn) {
                throw new Error("Missing required property 'connections'");
            }
            if (args?.ipv4 === undefined && !opts.urn) {
                throw new Error("Missing required property 'ipv4'");
            }
            if (args?.package === undefined && !opts.urn) {
                throw new Error("Missing required property 'package'");
            }
            if (args?.type === undefined && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["connections"] = args?.connections;
            resourceInputs["ipv4"] = args?.ipv4;
            resourceInputs["name"] = args?.name;
            resourceInputs["ntpAdvancedConfigurations"] = args?.ntpAdvancedConfigurations;
            resourceInputs["package"] = args?.package;
            resourceInputs["ptpAdvancedConfiguration"] = args?.ptpAdvancedConfiguration;
            resourceInputs["timeouts"] = args?.timeouts;
            resourceInputs["type"] = args?.type;
            resourceInputs["account"] = undefined /*out*/;
            resourceInputs["changeLog"] = undefined /*out*/;
            resourceInputs["href"] = undefined /*out*/;
            resourceInputs["order"] = undefined /*out*/;
            resourceInputs["precisionTimePrice"] = undefined /*out*/;
            resourceInputs["project"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PrecisionTimeService.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PrecisionTimeService resources.
 */
export interface PrecisionTimeServiceState {
    /**
     * Equinix User Account associated with Precision Time Service
     */
    account?: pulumi.Input<inputs.fabric.PrecisionTimeServiceAccount>;
    /**
     * Details of the last change on the route aggregation resource
     */
    changeLog?: pulumi.Input<inputs.fabric.PrecisionTimeServiceChangeLog>;
    /**
     * An array of objects with unique identifiers of connections.
     */
    connections?: pulumi.Input<pulumi.Input<inputs.fabric.PrecisionTimeServiceConnection>[]>;
    /**
     * Equinix generated Portal link for the created Precision Time Service
     */
    href?: pulumi.Input<string>;
    /**
     * An object that has Network IP Configurations for Timing Master Servers.
     */
    ipv4?: pulumi.Input<inputs.fabric.PrecisionTimeServiceIpv4>;
    /**
     * Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
     */
    name?: pulumi.Input<string>;
    /**
     * NTP Advanced configuration
     */
    ntpAdvancedConfigurations?: pulumi.Input<pulumi.Input<inputs.fabric.PrecisionTimeServiceNtpAdvancedConfiguration>[]>;
    /**
     * Precision Time Order
     */
    order?: pulumi.Input<inputs.fabric.PrecisionTimeServiceOrder>;
    /**
     * Precision Time Service Package Details
     */
    package?: pulumi.Input<inputs.fabric.PrecisionTimeServicePackage>;
    /**
     * Precision Time Service Price
     */
    precisionTimePrice?: pulumi.Input<inputs.fabric.PrecisionTimeServicePrecisionTimePrice>;
    /**
     * Equinix Project attribute object
     */
    project?: pulumi.Input<inputs.fabric.PrecisionTimeServiceProject>;
    /**
     * PTP Advanced Configuration
     */
    ptpAdvancedConfiguration?: pulumi.Input<inputs.fabric.PrecisionTimeServicePtpAdvancedConfiguration>;
    /**
     * Indicator of the state of this Precision Time Service
     */
    state?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.fabric.PrecisionTimeServiceTimeouts>;
    /**
     * Choose type of Precision Time Service
     */
    type?: pulumi.Input<string>;
    /**
     * Equinix generated id for the Precision Time Service
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PrecisionTimeService resource.
 */
export interface PrecisionTimeServiceArgs {
    /**
     * An array of objects with unique identifiers of connections.
     */
    connections: pulumi.Input<pulumi.Input<inputs.fabric.PrecisionTimeServiceConnection>[]>;
    /**
     * An object that has Network IP Configurations for Timing Master Servers.
     */
    ipv4: pulumi.Input<inputs.fabric.PrecisionTimeServiceIpv4>;
    /**
     * Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
     */
    name?: pulumi.Input<string>;
    /**
     * NTP Advanced configuration
     */
    ntpAdvancedConfigurations?: pulumi.Input<pulumi.Input<inputs.fabric.PrecisionTimeServiceNtpAdvancedConfiguration>[]>;
    /**
     * Precision Time Service Package Details
     */
    package: pulumi.Input<inputs.fabric.PrecisionTimeServicePackage>;
    /**
     * PTP Advanced Configuration
     */
    ptpAdvancedConfiguration?: pulumi.Input<inputs.fabric.PrecisionTimeServicePtpAdvancedConfiguration>;
    timeouts?: pulumi.Input<inputs.fabric.PrecisionTimeServiceTimeouts>;
    /**
     * Choose type of Precision Time Service
     */
    type: pulumi.Input<string>;
}
