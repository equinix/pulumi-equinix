// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs, enums } from "../types";
import * as utilities from "../utilities";

export function getPorts(args?: GetPortsArgs, opts?: pulumi.InvokeOptions): Promise<GetPortsResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:fabric/getPorts:getPorts", {
        "filters": args.filters,
    }, opts);
}

/**
 * A collection of arguments for invoking getPorts.
 */
export interface GetPortsArgs {
    /**
     * name
     */
    filters?: inputs.fabric.GetPortsFilter[];
}

/**
 * A collection of values returned by getPorts.
 */
export interface GetPortsResult {
    /**
     * List of  Ports
     */
    readonly datas: outputs.fabric.GetPortsData[];
    /**
     * name
     */
    readonly filters?: outputs.fabric.GetPortsFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
}

export function getPortsOutput(args?: GetPortsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPortsResult> {
    return pulumi.output(args).apply(a => getPorts(a, opts))
}

/**
 * A collection of arguments for invoking getPorts.
 */
export interface GetPortsOutputArgs {
    /**
     * name
     */
    filters?: pulumi.Input<pulumi.Input<inputs.fabric.GetPortsFilterArgs>[]>;
}
