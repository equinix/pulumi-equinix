// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
 * Additional Documentation:
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const attachedPolicies = equinix.fabric.getConnectionRouteAggregations({
 *     connectionId: "connection_id",
 * });
 * export const connectionFirstRouteAggregationUuid = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.uuid);
 * export const connectionFirstRouteAggregationType = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.type);
 * export const connectionFirstRouteAggregationAttachmentStatus = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.attachmentStatus);
 * ```
 */
export function getConnectionRouteAggregations(args: GetConnectionRouteAggregationsArgs, opts?: pulumi.InvokeOptions): Promise<GetConnectionRouteAggregationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", {
        "connectionId": args.connectionId,
        "pagination": args.pagination,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectionRouteAggregations.
 */
export interface GetConnectionRouteAggregationsArgs {
    /**
     * The uuid of the connection this data source should retrieve
     */
    connectionId: string;
    /**
     * Pagination details for the returned connection route aggregations list
     */
    pagination?: inputs.fabric.GetConnectionRouteAggregationsPagination;
}

/**
 * A collection of values returned by getConnectionRouteAggregations.
 */
export interface GetConnectionRouteAggregationsResult {
    /**
     * The uuid of the connection this data source should retrieve
     */
    readonly connectionId: string;
    /**
     * Returned list of connection route aggregation objects
     */
    readonly datas: outputs.fabric.GetConnectionRouteAggregationsData[];
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Pagination details for the returned connection route aggregations list
     */
    readonly pagination?: outputs.fabric.GetConnectionRouteAggregationsPagination;
}
/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
 * Additional Documentation:
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const attachedPolicies = equinix.fabric.getConnectionRouteAggregations({
 *     connectionId: "connection_id",
 * });
 * export const connectionFirstRouteAggregationUuid = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.uuid);
 * export const connectionFirstRouteAggregationType = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.type);
 * export const connectionFirstRouteAggregationAttachmentStatus = attachedPolicies.then(attachedPolicies => attachedPolicies.datas?.[0]?.attachmentStatus);
 * ```
 */
export function getConnectionRouteAggregationsOutput(args: GetConnectionRouteAggregationsOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetConnectionRouteAggregationsResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", {
        "connectionId": args.connectionId,
        "pagination": args.pagination,
    }, opts);
}

/**
 * A collection of arguments for invoking getConnectionRouteAggregations.
 */
export interface GetConnectionRouteAggregationsOutputArgs {
    /**
     * The uuid of the connection this data source should retrieve
     */
    connectionId: pulumi.Input<string>;
    /**
     * Pagination details for the returned connection route aggregations list
     */
    pagination?: pulumi.Input<inputs.fabric.GetConnectionRouteAggregationsPaginationArgs>;
}
