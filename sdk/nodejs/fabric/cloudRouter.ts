// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible resource allows creation and management of [Equinix Fabric Cloud Router](https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks).
 *
 * Additional Fabric Cloud Router documentation:
 * * Getting Started: <https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks>
 * * API: <https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers>
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const config = new pulumi.Config();
 * const metro = config.get("metro") || "FR";
 * const accountNum = config.requireNumber("accountNum");
 * const router = new equinix.fabric.CloudRouter("router", {
 *     name: "My-Fabric-Cloud-Router",
 *     type: "XF_ROUTER",
 *     location: {
 *         metroCode: metro,
 *     },
 *     "package": {
 *         code: "BASIC",
 *     },
 *     notifications: [{
 *         type: "ALL",
 *         emails: ["example@equinix.com"],
 *     }],
 *     account: {
 *         accountNumber: 272010,
 *     },
 * });
 * export const routerId = router.id;
 * ```
 */
export class CloudRouter extends pulumi.CustomResource {
    /**
     * Get an existing CloudRouter resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudRouterState, opts?: pulumi.CustomResourceOptions): CloudRouter {
        return new CloudRouter(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:fabric/cloudRouter:CloudRouter';

    /**
     * Returns true if the given object is an instance of CloudRouter.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudRouter {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudRouter.__pulumiType;
    }

    /**
     * Customer account information that is associated with this Fabric Cloud Router
     */
    public readonly account!: pulumi.Output<outputs.fabric.CloudRouterAccount>;
    /**
     * Number of IPv4 BGP routes in use (including non-distinct prefixes)
     */
    public /*out*/ readonly bgpIpv4RoutesCount!: pulumi.Output<number>;
    /**
     * Number of IPv6 BGP routes in use (including non-distinct prefixes)
     */
    public /*out*/ readonly bgpIpv6RoutesCount!: pulumi.Output<number>;
    /**
     * Captures Fabric Cloud Router lifecycle change information
     */
    public /*out*/ readonly changeLogs!: pulumi.Output<outputs.fabric.CloudRouterChangeLog[]>;
    /**
     * Number of connections associated with this Fabric Cloud Router instance
     */
    public /*out*/ readonly connectionsCount!: pulumi.Output<number>;
    /**
     * Customer-provided Fabric Cloud Router description
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Number of distinct IPv4 routes
     */
    public /*out*/ readonly distinctIpv4PrefixesCount!: pulumi.Output<number>;
    /**
     * Number of distinct IPv6 routes
     */
    public /*out*/ readonly distinctIpv6PrefixesCount!: pulumi.Output<number>;
    /**
     * Equinix ASN
     */
    public /*out*/ readonly equinixAsn!: pulumi.Output<number>;
    /**
     * Fabric Cloud Router URI information
     */
    public readonly href!: pulumi.Output<string>;
    /**
     * Fabric Cloud Router location
     */
    public readonly location!: pulumi.Output<outputs.fabric.CloudRouterLocation>;
    /**
     * Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Preferences for notifications on Fabric Cloud Router configuration or status changes
     */
    public readonly notifications!: pulumi.Output<outputs.fabric.CloudRouterNotification[]>;
    /**
     * Order information related to this Fabric Cloud Router
     */
    public readonly order!: pulumi.Output<outputs.fabric.CloudRouterOrder>;
    /**
     * Fabric Cloud Router Package Type
     */
    public readonly package!: pulumi.Output<outputs.fabric.CloudRouterPackage>;
    /**
     * Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     */
    public readonly project!: pulumi.Output<outputs.fabric.CloudRouterProject>;
    /**
     * Fabric Cloud Router overall state
     */
    public /*out*/ readonly state!: pulumi.Output<string>;
    /**
     * Defines the FCR type like; XF_ROUTER
     */
    public readonly type!: pulumi.Output<string>;
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    public readonly uuid!: pulumi.Output<string>;

    /**
     * Create a CloudRouter resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CloudRouterArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudRouterArgs | CloudRouterState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CloudRouterState | undefined;
            resourceInputs["account"] = state ? state.account : undefined;
            resourceInputs["bgpIpv4RoutesCount"] = state ? state.bgpIpv4RoutesCount : undefined;
            resourceInputs["bgpIpv6RoutesCount"] = state ? state.bgpIpv6RoutesCount : undefined;
            resourceInputs["changeLogs"] = state ? state.changeLogs : undefined;
            resourceInputs["connectionsCount"] = state ? state.connectionsCount : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["distinctIpv4PrefixesCount"] = state ? state.distinctIpv4PrefixesCount : undefined;
            resourceInputs["distinctIpv6PrefixesCount"] = state ? state.distinctIpv6PrefixesCount : undefined;
            resourceInputs["equinixAsn"] = state ? state.equinixAsn : undefined;
            resourceInputs["href"] = state ? state.href : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["notifications"] = state ? state.notifications : undefined;
            resourceInputs["order"] = state ? state.order : undefined;
            resourceInputs["package"] = state ? state.package : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as CloudRouterArgs | undefined;
            if ((!args || args.account === undefined) && !opts.urn) {
                throw new Error("Missing required property 'account'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.notifications === undefined) && !opts.urn) {
                throw new Error("Missing required property 'notifications'");
            }
            if ((!args || args.package === undefined) && !opts.urn) {
                throw new Error("Missing required property 'package'");
            }
            if ((!args || args.project === undefined) && !opts.urn) {
                throw new Error("Missing required property 'project'");
            }
            if ((!args || args.type === undefined) && !opts.urn) {
                throw new Error("Missing required property 'type'");
            }
            resourceInputs["account"] = args ? args.account : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["href"] = args ? args.href : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["notifications"] = args ? args.notifications : undefined;
            resourceInputs["order"] = args ? args.order : undefined;
            resourceInputs["package"] = args ? args.package : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["uuid"] = args ? args.uuid : undefined;
            resourceInputs["bgpIpv4RoutesCount"] = undefined /*out*/;
            resourceInputs["bgpIpv6RoutesCount"] = undefined /*out*/;
            resourceInputs["changeLogs"] = undefined /*out*/;
            resourceInputs["connectionsCount"] = undefined /*out*/;
            resourceInputs["distinctIpv4PrefixesCount"] = undefined /*out*/;
            resourceInputs["distinctIpv6PrefixesCount"] = undefined /*out*/;
            resourceInputs["equinixAsn"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CloudRouter.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudRouter resources.
 */
export interface CloudRouterState {
    /**
     * Customer account information that is associated with this Fabric Cloud Router
     */
    account?: pulumi.Input<inputs.fabric.CloudRouterAccount>;
    /**
     * Number of IPv4 BGP routes in use (including non-distinct prefixes)
     */
    bgpIpv4RoutesCount?: pulumi.Input<number>;
    /**
     * Number of IPv6 BGP routes in use (including non-distinct prefixes)
     */
    bgpIpv6RoutesCount?: pulumi.Input<number>;
    /**
     * Captures Fabric Cloud Router lifecycle change information
     */
    changeLogs?: pulumi.Input<pulumi.Input<inputs.fabric.CloudRouterChangeLog>[]>;
    /**
     * Number of connections associated with this Fabric Cloud Router instance
     */
    connectionsCount?: pulumi.Input<number>;
    /**
     * Customer-provided Fabric Cloud Router description
     */
    description?: pulumi.Input<string>;
    /**
     * Number of distinct IPv4 routes
     */
    distinctIpv4PrefixesCount?: pulumi.Input<number>;
    /**
     * Number of distinct IPv6 routes
     */
    distinctIpv6PrefixesCount?: pulumi.Input<number>;
    /**
     * Equinix ASN
     */
    equinixAsn?: pulumi.Input<number>;
    /**
     * Fabric Cloud Router URI information
     */
    href?: pulumi.Input<string>;
    /**
     * Fabric Cloud Router location
     */
    location?: pulumi.Input<inputs.fabric.CloudRouterLocation>;
    /**
     * Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    name?: pulumi.Input<string>;
    /**
     * Preferences for notifications on Fabric Cloud Router configuration or status changes
     */
    notifications?: pulumi.Input<pulumi.Input<inputs.fabric.CloudRouterNotification>[]>;
    /**
     * Order information related to this Fabric Cloud Router
     */
    order?: pulumi.Input<inputs.fabric.CloudRouterOrder>;
    /**
     * Fabric Cloud Router Package Type
     */
    package?: pulumi.Input<inputs.fabric.CloudRouterPackage>;
    /**
     * Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     */
    project?: pulumi.Input<inputs.fabric.CloudRouterProject>;
    /**
     * Fabric Cloud Router overall state
     */
    state?: pulumi.Input<string>;
    /**
     * Defines the FCR type like; XF_ROUTER
     */
    type?: pulumi.Input<string>;
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudRouter resource.
 */
export interface CloudRouterArgs {
    /**
     * Customer account information that is associated with this Fabric Cloud Router
     */
    account: pulumi.Input<inputs.fabric.CloudRouterAccount>;
    /**
     * Customer-provided Fabric Cloud Router description
     */
    description?: pulumi.Input<string>;
    /**
     * Fabric Cloud Router URI information
     */
    href?: pulumi.Input<string>;
    /**
     * Fabric Cloud Router location
     */
    location: pulumi.Input<inputs.fabric.CloudRouterLocation>;
    /**
     * Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    name?: pulumi.Input<string>;
    /**
     * Preferences for notifications on Fabric Cloud Router configuration or status changes
     */
    notifications: pulumi.Input<pulumi.Input<inputs.fabric.CloudRouterNotification>[]>;
    /**
     * Order information related to this Fabric Cloud Router
     */
    order?: pulumi.Input<inputs.fabric.CloudRouterOrder>;
    /**
     * Fabric Cloud Router Package Type
     */
    package: pulumi.Input<inputs.fabric.CloudRouterPackage>;
    /**
     * Customer resource hierarchy project information. Applicable to customers onboarded to Equinix Identity and Access Management. For more information see Identity and Access Management: Projects
     */
    project: pulumi.Input<inputs.fabric.CloudRouterProject>;
    /**
     * Defines the FCR type like; XF_ROUTER
     */
    type: pulumi.Input<string>;
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    uuid?: pulumi.Input<string>;
}
