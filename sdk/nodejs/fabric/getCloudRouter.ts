// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

export function getCloudRouter(args?: GetCloudRouterArgs, opts?: pulumi.InvokeOptions): Promise<GetCloudRouterResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getCloudRouter:getCloudRouter", {
        "projects": args.projects,
        "uuid": args.uuid,
    }, opts);
}

/**
 * A collection of arguments for invoking getCloudRouter.
 */
export interface GetCloudRouterArgs {
    /**
     * Project information
     */
    projects?: inputs.fabric.GetCloudRouterProject[];
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    uuid?: string;
}

/**
 * A collection of values returned by getCloudRouter.
 */
export interface GetCloudRouterResult {
    /**
     * Customer account information that is associated with this Fabric Cloud Router
     */
    readonly accounts: outputs.fabric.GetCloudRouterAccount[];
    readonly bgpIpv4RoutesCount: number;
    readonly bgpIpv6RoutesCount: number;
    /**
     * Captures Fabric Cloud Router lifecycle change information
     */
    readonly changeLogs: outputs.fabric.GetCloudRouterChangeLog[];
    readonly connectionsCount: number;
    /**
     * Customer-provided Fabric Cloud Router description
     */
    readonly description: string;
    /**
     * Equinix ASN
     */
    readonly equinixAsn: number;
    /**
     * Fabric Cloud Router URI information
     */
    readonly href: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Fabric Cloud Router location
     */
    readonly locations: outputs.fabric.GetCloudRouterLocation[];
    /**
     * Fabric Cloud Router name. An alpha-numeric 24 characters string which can include only hyphens and underscores
     */
    readonly name: string;
    /**
     * Preferences for notifications on Fabric Cloud Router configuration or status changes
     */
    readonly notifications: outputs.fabric.GetCloudRouterNotification[];
    /**
     * Order information related to this Fabric Cloud Router
     */
    readonly orders: outputs.fabric.GetCloudRouterOrder[];
    /**
     * Fabric Cloud Router package information
     */
    readonly packages: outputs.fabric.GetCloudRouterPackage[];
    /**
     * Project information
     */
    readonly projects: outputs.fabric.GetCloudRouterProject[];
    /**
     * Fabric Cloud Router overall state
     */
    readonly state: string;
    /**
     * Defines the Fabric Cloud Router type like XF_GATEWAY
     */
    readonly type: string;
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    readonly uuid?: string;
}
export function getCloudRouterOutput(args?: GetCloudRouterOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetCloudRouterResult> {
    return pulumi.output(args).apply((a: any) => getCloudRouter(a, opts))
}

/**
 * A collection of arguments for invoking getCloudRouter.
 */
export interface GetCloudRouterOutputArgs {
    /**
     * Project information
     */
    projects?: pulumi.Input<pulumi.Input<inputs.fabric.GetCloudRouterProjectArgs>[]>;
    /**
     * Equinix-assigned Fabric Cloud Router identifier
     */
    uuid?: pulumi.Input<string>;
}
