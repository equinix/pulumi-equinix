// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Route Aggregation by UUID
 * Additional Documentation:
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
 */
export function getRouteAggregation(args: GetRouteAggregationArgs, opts?: pulumi.InvokeOptions): Promise<GetRouteAggregationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getRouteAggregation:getRouteAggregation", {
        "routeAggregationId": args.routeAggregationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteAggregation.
 */
export interface GetRouteAggregationArgs {
    /**
     * The uuid of the route aggregation this data source should retrieve
     */
    routeAggregationId: string;
}

/**
 * A collection of values returned by getRouteAggregation.
 */
export interface GetRouteAggregationResult {
    /**
     * Current state of latest Route Aggregation change
     */
    readonly change: outputs.fabric.GetRouteAggregationChange;
    /**
     * Details of the last change on the route aggregation resource
     */
    readonly changeLog: outputs.fabric.GetRouteAggregationChangeLog;
    /**
     * Number of Connections attached to route aggregation
     */
    readonly connectionsCount: number;
    /**
     * Customer-provided route aggregation description
     */
    readonly description: string;
    /**
     * Equinix auto generated URI to the route aggregation resource
     */
    readonly href: string;
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Customer provided name of the route aggregation
     */
    readonly name: string;
    /**
     * Equinix Project attribute object
     */
    readonly project: outputs.fabric.GetRouteAggregationProject;
    /**
     * The uuid of the route aggregation this data source should retrieve
     */
    readonly routeAggregationId: string;
    /**
     * Number of Rules attached to route aggregation
     */
    readonly rulesCount: number;
    /**
     * Value representing provisioning status for the route aggregation resource
     */
    readonly state: string;
    /**
     * Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
     */
    readonly type: string;
    /**
     * Equinix-assigned unique id for the route aggregation resource
     */
    readonly uuid: string;
}
/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Route Aggregation by UUID
 * Additional Documentation:
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
 */
export function getRouteAggregationOutput(args: GetRouteAggregationOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetRouteAggregationResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getRouteAggregation:getRouteAggregation", {
        "routeAggregationId": args.routeAggregationId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRouteAggregation.
 */
export interface GetRouteAggregationOutputArgs {
    /**
     * The uuid of the route aggregation this data source should retrieve
     */
    routeAggregationId: pulumi.Input<string>;
}
