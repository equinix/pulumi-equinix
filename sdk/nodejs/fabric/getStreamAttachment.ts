// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Stream Asset Attachment by IDs
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const byIds = equinix.fabric.getStreamAttachment({
 *     asset: "<asset_group>",
 *     assetId: "<id_of_the_asset_being_attached>",
 *     streamId: "<id_of_the_stream_asset_is_being_attached_to>",
 * });
 * ```
 */
export function getStreamAttachment(args: GetStreamAttachmentArgs, opts?: pulumi.InvokeOptions): Promise<GetStreamAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("equinix:fabric/getStreamAttachment:getStreamAttachment", {
        "asset": args.asset,
        "assetId": args.assetId,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAttachment.
 */
export interface GetStreamAttachmentArgs {
    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    asset: string;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    assetId: string;
    /**
     * The uuid of the stream this data source should retrieve
     */
    streamId: string;
}

/**
 * A collection of values returned by getStreamAttachment.
 */
export interface GetStreamAttachmentResult {
    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    readonly asset: string;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    readonly assetId: string;
    /**
     * Value representing status for the stream attachment
     */
    readonly attachmentStatus: string;
    /**
     * Equinix auto generated URI to the stream attachment in Equinix Portal
     */
    readonly href: string;
    /**
     * The unique identifier of the resource
     */
    readonly id: string;
    /**
     * Boolean value indicating enablement of metrics for this asset stream attachment
     */
    readonly metricsEnabled: boolean;
    /**
     * The uuid of the stream this data source should retrieve
     */
    readonly streamId: string;
    /**
     * Equinix defined type for the asset stream attachment
     */
    readonly type: string;
    /**
     * Equinix-assigned unique id for the stream attachment
     */
    readonly uuid: string;
}
/**
 * Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Stream Asset Attachment by IDs
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const byIds = equinix.fabric.getStreamAttachment({
 *     asset: "<asset_group>",
 *     assetId: "<id_of_the_asset_being_attached>",
 *     streamId: "<id_of_the_stream_asset_is_being_attached_to>",
 * });
 * ```
 */
export function getStreamAttachmentOutput(args: GetStreamAttachmentOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetStreamAttachmentResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("equinix:fabric/getStreamAttachment:getStreamAttachment", {
        "asset": args.asset,
        "assetId": args.assetId,
        "streamId": args.streamId,
    }, opts);
}

/**
 * A collection of arguments for invoking getStreamAttachment.
 */
export interface GetStreamAttachmentOutputArgs {
    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    asset: pulumi.Input<string>;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    assetId: pulumi.Input<string>;
    /**
     * The uuid of the stream this data source should retrieve
     */
    streamId: pulumi.Input<string>;
}
