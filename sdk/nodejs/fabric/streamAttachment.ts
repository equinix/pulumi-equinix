// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Fabric V4 API compatible resource allows creation and management of Equinix Fabric Stream Attachments
 *
 * Additional Documentation:
 * * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
 * * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const asset = new equinix.fabric.StreamAttachment("asset", {
 *     asset: "<asset_group>",
 *     assetId: "<id_of_the_asset_being_attached>",
 *     streamId: "<id_of_the_stream_asset_is_being_attached_to>",
 * });
 * ```
 */
export class StreamAttachment extends pulumi.CustomResource {
    /**
     * Get an existing StreamAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: StreamAttachmentState, opts?: pulumi.CustomResourceOptions): StreamAttachment {
        return new StreamAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:fabric/streamAttachment:StreamAttachment';

    /**
     * Returns true if the given object is an instance of StreamAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is StreamAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === StreamAttachment.__pulumiType;
    }

    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    public readonly asset!: pulumi.Output<string>;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    public readonly assetId!: pulumi.Output<string>;
    /**
     * Value representing status for the stream attachment
     */
    public /*out*/ readonly attachmentStatus!: pulumi.Output<string>;
    /**
     * Equinix auto generated URI to the stream attachment in Equinix Portal
     */
    public /*out*/ readonly href!: pulumi.Output<string>;
    /**
     * Boolean value indicating enablement of metrics for this asset stream attachment
     */
    public readonly metricsEnabled!: pulumi.Output<boolean>;
    /**
     * UUID of the stream that is the target of this asset attachment
     */
    public readonly streamId!: pulumi.Output<string>;
    public readonly timeouts!: pulumi.Output<outputs.fabric.StreamAttachmentTimeouts | undefined>;
    /**
     * Equinix defined type for the asset stream attachment
     */
    public /*out*/ readonly type!: pulumi.Output<string>;
    /**
     * Equinix-assigned unique id for the stream attachment
     */
    public /*out*/ readonly uuid!: pulumi.Output<string>;

    /**
     * Create a StreamAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: StreamAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: StreamAttachmentArgs | StreamAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as StreamAttachmentState | undefined;
            resourceInputs["asset"] = state ? state.asset : undefined;
            resourceInputs["assetId"] = state ? state.assetId : undefined;
            resourceInputs["attachmentStatus"] = state ? state.attachmentStatus : undefined;
            resourceInputs["href"] = state ? state.href : undefined;
            resourceInputs["metricsEnabled"] = state ? state.metricsEnabled : undefined;
            resourceInputs["streamId"] = state ? state.streamId : undefined;
            resourceInputs["timeouts"] = state ? state.timeouts : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["uuid"] = state ? state.uuid : undefined;
        } else {
            const args = argsOrState as StreamAttachmentArgs | undefined;
            if ((!args || args.asset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'asset'");
            }
            if ((!args || args.assetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'assetId'");
            }
            if ((!args || args.streamId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'streamId'");
            }
            resourceInputs["asset"] = args ? args.asset : undefined;
            resourceInputs["assetId"] = args ? args.assetId : undefined;
            resourceInputs["metricsEnabled"] = args ? args.metricsEnabled : undefined;
            resourceInputs["streamId"] = args ? args.streamId : undefined;
            resourceInputs["timeouts"] = args ? args.timeouts : undefined;
            resourceInputs["attachmentStatus"] = undefined /*out*/;
            resourceInputs["href"] = undefined /*out*/;
            resourceInputs["type"] = undefined /*out*/;
            resourceInputs["uuid"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(StreamAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering StreamAttachment resources.
 */
export interface StreamAttachmentState {
    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    asset?: pulumi.Input<string>;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    assetId?: pulumi.Input<string>;
    /**
     * Value representing status for the stream attachment
     */
    attachmentStatus?: pulumi.Input<string>;
    /**
     * Equinix auto generated URI to the stream attachment in Equinix Portal
     */
    href?: pulumi.Input<string>;
    /**
     * Boolean value indicating enablement of metrics for this asset stream attachment
     */
    metricsEnabled?: pulumi.Input<boolean>;
    /**
     * UUID of the stream that is the target of this asset attachment
     */
    streamId?: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.fabric.StreamAttachmentTimeouts>;
    /**
     * Equinix defined type for the asset stream attachment
     */
    type?: pulumi.Input<string>;
    /**
     * Equinix-assigned unique id for the stream attachment
     */
    uuid?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a StreamAttachment resource.
 */
export interface StreamAttachmentArgs {
    /**
     * Equinix defined asset category. Matches the product name the asset is a part of
     */
    asset: pulumi.Input<string>;
    /**
     * Equinix defined UUID of the asset being attached to the stream
     */
    assetId: pulumi.Input<string>;
    /**
     * Boolean value indicating enablement of metrics for this asset stream attachment
     */
    metricsEnabled?: pulumi.Input<boolean>;
    /**
     * UUID of the stream that is the target of this asset attachment
     */
    streamId: pulumi.Input<string>;
    timeouts?: pulumi.Input<inputs.fabric.StreamAttachmentTimeouts>;
}
