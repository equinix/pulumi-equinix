// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getSpotMarketRequest(args: GetSpotMarketRequestArgs, opts?: pulumi.InvokeOptions): Promise<GetSpotMarketRequestResult> {
    if (!opts) {
        opts = {}
    }

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
    return pulumi.runtime.invoke("equinix:metal/getSpotMarketRequest:getSpotMarketRequest", {
        "requestId": args.requestId,
    }, opts);
}

/**
 * A collection of arguments for invoking getSpotMarketRequest.
 */
export interface GetSpotMarketRequestArgs {
    /**
     * The id of the Spot Market Request.
     */
    requestId: string;
}

/**
 * A collection of values returned by getSpotMarketRequest.
 */
export interface GetSpotMarketRequestResult {
    /**
     * List of IDs of devices spawned by the referenced Spot Market Request.
     */
    readonly deviceIds: string[];
    /**
     * Maximum number devices to be created.
     */
    readonly devicesMax: number;
    /**
     * Miniumum number devices to be created.
     */
    readonly devicesMin: number;
    /**
     * Date and time When the spot market request will be ended.
     */
    readonly endAt: string;
    /**
     * Facility IDs where devices should be created.
     */
    readonly facilities: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * Maximum price user is willing to pay per hour per device.
     */
    readonly maxBidPrice: number;
    /**
     * Metro where devices should be created.
     */
    readonly metro: string;
    /**
     * The device plan slug.
     */
    readonly plan: string;
    /**
     * Project ID.
     */
    readonly projectId: string;
    readonly requestId: string;
}

export function getSpotMarketRequestOutput(args: GetSpotMarketRequestOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSpotMarketRequestResult> {
    return pulumi.output(args).apply(a => getSpotMarketRequest(a, opts))
}

/**
 * A collection of arguments for invoking getSpotMarketRequest.
 */
export interface GetSpotMarketRequestOutputArgs {
    /**
     * The id of the Spot Market Request.
     */
    requestId: pulumi.Input<string>;
}
