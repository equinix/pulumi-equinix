// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as enums from "../types/enums";
import * as utilities from "../utilities";

/**
 * Provides a resource to manage organization resource in Equinix Metal.
 *
 * ## Example Usage
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as equinix from "@equinix-labs/pulumi-equinix";
 *
 * const tfOrganization1 = new equinix.metal.Organization("tfOrganization1", {
 *     name: "foobar",
 *     description: "quux",
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using an existing organization ID:
 *
 * ```sh
 * $ pulumi import equinix:metal/organization:Organization equinix_metal_organization {existing_organization_id}
 * ```
 */
export class Organization extends pulumi.CustomResource {
    /**
     * Get an existing Organization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrganizationState, opts?: pulumi.CustomResourceOptions): Organization {
        return new Organization(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'equinix:metal/organization:Organization';

    /**
     * Returns true if the given object is an instance of Organization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Organization {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Organization.__pulumiType;
    }

    /**
     * An object that has the address information. See Address below for more details.
     */
    declare public readonly address: pulumi.Output<outputs.metal.OrganizationAddress | undefined>;
    /**
     * The timestamp for when the organization was created.
     */
    declare public /*out*/ readonly created: pulumi.Output<string>;
    /**
     * Description string.
     */
    declare public readonly description: pulumi.Output<string>;
    /**
     * Logo URL.
     *
     * @deprecated The default (empty string) is the only valid value. Support for this field has been removed from the API
     */
    declare public readonly logo: pulumi.Output<string>;
    /**
     * The name of the Organization.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * Twitter handle.
     */
    declare public readonly twitter: pulumi.Output<string>;
    /**
     * The timestamp for the last time the organization was updated.
     */
    declare public /*out*/ readonly updated: pulumi.Output<string>;
    /**
     * Website link.
     */
    declare public readonly website: pulumi.Output<string>;

    /**
     * Create a Organization resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: OrganizationArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrganizationArgs | OrganizationState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrganizationState | undefined;
            resourceInputs["address"] = state?.address;
            resourceInputs["created"] = state?.created;
            resourceInputs["description"] = state?.description;
            resourceInputs["logo"] = state?.logo;
            resourceInputs["name"] = state?.name;
            resourceInputs["twitter"] = state?.twitter;
            resourceInputs["updated"] = state?.updated;
            resourceInputs["website"] = state?.website;
        } else {
            const args = argsOrState as OrganizationArgs | undefined;
            resourceInputs["address"] = args?.address;
            resourceInputs["description"] = args?.description;
            resourceInputs["logo"] = args?.logo;
            resourceInputs["name"] = args?.name;
            resourceInputs["twitter"] = args?.twitter;
            resourceInputs["website"] = args?.website;
            resourceInputs["created"] = undefined /*out*/;
            resourceInputs["updated"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Organization.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Organization resources.
 */
export interface OrganizationState {
    /**
     * An object that has the address information. See Address below for more details.
     */
    address?: pulumi.Input<inputs.metal.OrganizationAddress>;
    /**
     * The timestamp for when the organization was created.
     */
    created?: pulumi.Input<string>;
    /**
     * Description string.
     */
    description?: pulumi.Input<string>;
    /**
     * Logo URL.
     *
     * @deprecated The default (empty string) is the only valid value. Support for this field has been removed from the API
     */
    logo?: pulumi.Input<string>;
    /**
     * The name of the Organization.
     */
    name?: pulumi.Input<string>;
    /**
     * Twitter handle.
     */
    twitter?: pulumi.Input<string>;
    /**
     * The timestamp for the last time the organization was updated.
     */
    updated?: pulumi.Input<string>;
    /**
     * Website link.
     */
    website?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Organization resource.
 */
export interface OrganizationArgs {
    /**
     * An object that has the address information. See Address below for more details.
     */
    address?: pulumi.Input<inputs.metal.OrganizationAddress>;
    /**
     * Description string.
     */
    description?: pulumi.Input<string>;
    /**
     * Logo URL.
     *
     * @deprecated The default (empty string) is the only valid value. Support for this field has been removed from the API
     */
    logo?: pulumi.Input<string>;
    /**
     * The name of the Organization.
     */
    name?: pulumi.Input<string>;
    /**
     * Twitter handle.
     */
    twitter?: pulumi.Input<string>;
    /**
     * Website link.
     */
    website?: pulumi.Input<string>;
}
