// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Stream Attached Assets with filters and pagination details
//
// Additional Documentation:
// * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
// * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/equinix/pulumi-equinix/sdk/go/equinix/fabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fabric.GetStreamAttachments(ctx, &fabric.GetStreamAttachmentsArgs{
//				Filters: []fabric.GetStreamAttachmentsFilter{
//					{
//						Operator: "=",
//						Property: "<filter_property>",
//						Values: []string{
//							"<list_of_values_to_filter>",
//						},
//					},
//				},
//				Pagination: fabric.GetStreamAttachmentsPagination{
//					Limit:  100,
//					Offset: 0,
//				},
//				Sorts: []fabric.GetStreamAttachmentsSort{
//					{
//						Direction: "<DESC|ASC>",
//						Property:  "/uuid",
//					},
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func GetStreamAttachments(ctx *pulumi.Context, args *GetStreamAttachmentsArgs, opts ...pulumi.InvokeOption) (*GetStreamAttachmentsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamAttachmentsResult
	err := ctx.Invoke("equinix:fabric/getStreamAttachments:getStreamAttachments", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamAttachments.
type GetStreamAttachmentsArgs struct {
	// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
	Filters []GetStreamAttachmentsFilter `pulumi:"filters"`
	// Pagination details for the returned streams list
	Pagination GetStreamAttachmentsPagination `pulumi:"pagination"`
	// The list of sort criteria for the stream assets search request
	Sorts []GetStreamAttachmentsSort `pulumi:"sorts"`
}

// A collection of values returned by getStreamAttachments.
type GetStreamAttachmentsResult struct {
	// Returned list of stream objects
	Datas []GetStreamAttachmentsData `pulumi:"datas"`
	// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
	Filters []GetStreamAttachmentsFilter `pulumi:"filters"`
	// The unique identifier of the resource
	Id string `pulumi:"id"`
	// Pagination details for the returned streams list
	Pagination GetStreamAttachmentsPagination `pulumi:"pagination"`
	// The list of sort criteria for the stream assets search request
	Sorts []GetStreamAttachmentsSort `pulumi:"sorts"`
}

func GetStreamAttachmentsOutput(ctx *pulumi.Context, args GetStreamAttachmentsOutputArgs, opts ...pulumi.InvokeOption) GetStreamAttachmentsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamAttachmentsResultOutput, error) {
			args := v.(GetStreamAttachmentsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getStreamAttachments:getStreamAttachments", args, GetStreamAttachmentsResultOutput{}, options).(GetStreamAttachmentsResultOutput), nil
		}).(GetStreamAttachmentsResultOutput)
}

// A collection of arguments for invoking getStreamAttachments.
type GetStreamAttachmentsOutputArgs struct {
	// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
	Filters GetStreamAttachmentsFilterArrayInput `pulumi:"filters"`
	// Pagination details for the returned streams list
	Pagination GetStreamAttachmentsPaginationInput `pulumi:"pagination"`
	// The list of sort criteria for the stream assets search request
	Sorts GetStreamAttachmentsSortArrayInput `pulumi:"sorts"`
}

func (GetStreamAttachmentsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamAttachmentsArgs)(nil)).Elem()
}

// A collection of values returned by getStreamAttachments.
type GetStreamAttachmentsResultOutput struct{ *pulumi.OutputState }

func (GetStreamAttachmentsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamAttachmentsResult)(nil)).Elem()
}

func (o GetStreamAttachmentsResultOutput) ToGetStreamAttachmentsResultOutput() GetStreamAttachmentsResultOutput {
	return o
}

func (o GetStreamAttachmentsResultOutput) ToGetStreamAttachmentsResultOutputWithContext(ctx context.Context) GetStreamAttachmentsResultOutput {
	return o
}

// Returned list of stream objects
func (o GetStreamAttachmentsResultOutput) Datas() GetStreamAttachmentsDataArrayOutput {
	return o.ApplyT(func(v GetStreamAttachmentsResult) []GetStreamAttachmentsData { return v.Datas }).(GetStreamAttachmentsDataArrayOutput)
}

// List of filters to apply to the stream attachment get request. Maximum of 8. All will be AND'd together with 1 of the 8 being a possible OR group of 3
func (o GetStreamAttachmentsResultOutput) Filters() GetStreamAttachmentsFilterArrayOutput {
	return o.ApplyT(func(v GetStreamAttachmentsResult) []GetStreamAttachmentsFilter { return v.Filters }).(GetStreamAttachmentsFilterArrayOutput)
}

// The unique identifier of the resource
func (o GetStreamAttachmentsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamAttachmentsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Pagination details for the returned streams list
func (o GetStreamAttachmentsResultOutput) Pagination() GetStreamAttachmentsPaginationOutput {
	return o.ApplyT(func(v GetStreamAttachmentsResult) GetStreamAttachmentsPagination { return v.Pagination }).(GetStreamAttachmentsPaginationOutput)
}

// The list of sort criteria for the stream assets search request
func (o GetStreamAttachmentsResultOutput) Sorts() GetStreamAttachmentsSortArrayOutput {
	return o.ApplyT(func(v GetStreamAttachmentsResult) []GetStreamAttachmentsSort { return v.Sorts }).(GetStreamAttachmentsSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamAttachmentsResultOutput{})
}
