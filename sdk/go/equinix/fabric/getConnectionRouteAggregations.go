// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Connection Route Aggregations with pagination details
// Additional Documentation:
// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/equinix/pulumi-equinix/sdk/go/equinix/fabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			attachedPolicies, err := fabric.GetConnectionRouteAggregations(ctx, &fabric.GetConnectionRouteAggregationsArgs{
//				ConnectionId: "connection_id",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("connectionFirstRouteAggregationUuid", attachedPolicies.Datas[0].Uuid)
//			ctx.Export("connectionFirstRouteAggregationType", attachedPolicies.Datas[0].Type)
//			ctx.Export("connectionFirstRouteAggregationAttachmentStatus", attachedPolicies.Datas[0].AttachmentStatus)
//			return nil
//		})
//	}
//
// ```
func GetConnectionRouteAggregations(ctx *pulumi.Context, args *GetConnectionRouteAggregationsArgs, opts ...pulumi.InvokeOption) (*GetConnectionRouteAggregationsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionRouteAggregationsResult
	err := ctx.Invoke("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnectionRouteAggregations.
type GetConnectionRouteAggregationsArgs struct {
	// The uuid of the connection this data source should retrieve
	ConnectionId string `pulumi:"connectionId"`
	// Pagination details for the returned connection route aggregations list
	Pagination *GetConnectionRouteAggregationsPagination `pulumi:"pagination"`
}

// A collection of values returned by getConnectionRouteAggregations.
type GetConnectionRouteAggregationsResult struct {
	// The uuid of the connection this data source should retrieve
	ConnectionId string `pulumi:"connectionId"`
	// Returned list of connection route aggregation objects
	Datas []GetConnectionRouteAggregationsData `pulumi:"datas"`
	// The unique identifier of the resource
	Id string `pulumi:"id"`
	// Pagination details for the returned connection route aggregations list
	Pagination *GetConnectionRouteAggregationsPagination `pulumi:"pagination"`
}

func GetConnectionRouteAggregationsOutput(ctx *pulumi.Context, args GetConnectionRouteAggregationsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionRouteAggregationsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionRouteAggregationsResultOutput, error) {
			args := v.(GetConnectionRouteAggregationsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getConnectionRouteAggregations:getConnectionRouteAggregations", args, GetConnectionRouteAggregationsResultOutput{}, options).(GetConnectionRouteAggregationsResultOutput), nil
		}).(GetConnectionRouteAggregationsResultOutput)
}

// A collection of arguments for invoking getConnectionRouteAggregations.
type GetConnectionRouteAggregationsOutputArgs struct {
	// The uuid of the connection this data source should retrieve
	ConnectionId pulumi.StringInput `pulumi:"connectionId"`
	// Pagination details for the returned connection route aggregations list
	Pagination GetConnectionRouteAggregationsPaginationPtrInput `pulumi:"pagination"`
}

func (GetConnectionRouteAggregationsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionRouteAggregationsArgs)(nil)).Elem()
}

// A collection of values returned by getConnectionRouteAggregations.
type GetConnectionRouteAggregationsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionRouteAggregationsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionRouteAggregationsResult)(nil)).Elem()
}

func (o GetConnectionRouteAggregationsResultOutput) ToGetConnectionRouteAggregationsResultOutput() GetConnectionRouteAggregationsResultOutput {
	return o
}

func (o GetConnectionRouteAggregationsResultOutput) ToGetConnectionRouteAggregationsResultOutputWithContext(ctx context.Context) GetConnectionRouteAggregationsResultOutput {
	return o
}

// The uuid of the connection this data source should retrieve
func (o GetConnectionRouteAggregationsResultOutput) ConnectionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionRouteAggregationsResult) string { return v.ConnectionId }).(pulumi.StringOutput)
}

// Returned list of connection route aggregation objects
func (o GetConnectionRouteAggregationsResultOutput) Datas() GetConnectionRouteAggregationsDataArrayOutput {
	return o.ApplyT(func(v GetConnectionRouteAggregationsResult) []GetConnectionRouteAggregationsData { return v.Datas }).(GetConnectionRouteAggregationsDataArrayOutput)
}

// The unique identifier of the resource
func (o GetConnectionRouteAggregationsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionRouteAggregationsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Pagination details for the returned connection route aggregations list
func (o GetConnectionRouteAggregationsResultOutput) Pagination() GetConnectionRouteAggregationsPaginationPtrOutput {
	return o.ApplyT(func(v GetConnectionRouteAggregationsResult) *GetConnectionRouteAggregationsPagination {
		return v.Pagination
	}).(GetConnectionRouteAggregationsPaginationPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionRouteAggregationsResultOutput{})
}
