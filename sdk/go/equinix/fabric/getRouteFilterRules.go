// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric V4 API compatible data resource that allow user to fetch route filter for a given search data set
//
// Additional Documentation:
// * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-route-filters.htm
// * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#route-filter-rules
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/equinix/pulumi-equinix/sdk/go/equinix/fabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			rfRules, err := fabric.GetRouteFilterRules(ctx, &fabric.GetRouteFilterRulesArgs{
//				RouteFilterId: "<route_filter_policy_id",
//				Limit:         pulumi.IntRef(100),
//				Offset:        pulumi.IntRef(5),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("firstRouteFilterRuleName", rfRules.Datas[0].Name)
//			ctx.Export("firstRouteFilterRuleDescription", rfRules.Datas[0].Description)
//			ctx.Export("firstRouteFilterRulePrefix", rfRules.Datas[0].Prefix)
//			ctx.Export("firstRouteFilterRulePrefixMatch", rfRules.Datas[0].PrefixMatch)
//			return nil
//		})
//	}
//
// ```
func GetRouteFilterRules(ctx *pulumi.Context, args *GetRouteFilterRulesArgs, opts ...pulumi.InvokeOption) (*GetRouteFilterRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetRouteFilterRulesResult
	err := ctx.Invoke("equinix:fabric/getRouteFilterRules:getRouteFilterRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteFilterRules.
type GetRouteFilterRulesArgs struct {
	// Number of elements to be requested per page. Number must be between 1 and 100. Default is 20
	Limit *int `pulumi:"limit"`
	// The page offset for the pagination request. Index of the first element. Default is 0.
	Offset *int `pulumi:"offset"`
	// UUID of the Route Filter Policy the rule is attached to
	RouteFilterId string `pulumi:"routeFilterId"`
}

// A collection of values returned by getRouteFilterRules.
type GetRouteFilterRulesResult struct {
	// The list of Rules attached to the given Route Filter Policy UUID
	Datas []GetRouteFilterRulesData `pulumi:"datas"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Number of elements to be requested per page. Number must be between 1 and 100. Default is 20
	Limit *int `pulumi:"limit"`
	// The page offset for the pagination request. Index of the first element. Default is 0.
	Offset *int `pulumi:"offset"`
	// Pagination details for the Data Source Search Request
	Paginations []GetRouteFilterRulesPagination `pulumi:"paginations"`
	// UUID of the Route Filter Policy the rule is attached to
	RouteFilterId string `pulumi:"routeFilterId"`
}

func GetRouteFilterRulesOutput(ctx *pulumi.Context, args GetRouteFilterRulesOutputArgs, opts ...pulumi.InvokeOption) GetRouteFilterRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetRouteFilterRulesResultOutput, error) {
			args := v.(GetRouteFilterRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getRouteFilterRules:getRouteFilterRules", args, GetRouteFilterRulesResultOutput{}, options).(GetRouteFilterRulesResultOutput), nil
		}).(GetRouteFilterRulesResultOutput)
}

// A collection of arguments for invoking getRouteFilterRules.
type GetRouteFilterRulesOutputArgs struct {
	// Number of elements to be requested per page. Number must be between 1 and 100. Default is 20
	Limit pulumi.IntPtrInput `pulumi:"limit"`
	// The page offset for the pagination request. Index of the first element. Default is 0.
	Offset pulumi.IntPtrInput `pulumi:"offset"`
	// UUID of the Route Filter Policy the rule is attached to
	RouteFilterId pulumi.StringInput `pulumi:"routeFilterId"`
}

func (GetRouteFilterRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteFilterRulesArgs)(nil)).Elem()
}

// A collection of values returned by getRouteFilterRules.
type GetRouteFilterRulesResultOutput struct{ *pulumi.OutputState }

func (GetRouteFilterRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetRouteFilterRulesResult)(nil)).Elem()
}

func (o GetRouteFilterRulesResultOutput) ToGetRouteFilterRulesResultOutput() GetRouteFilterRulesResultOutput {
	return o
}

func (o GetRouteFilterRulesResultOutput) ToGetRouteFilterRulesResultOutputWithContext(ctx context.Context) GetRouteFilterRulesResultOutput {
	return o
}

// The list of Rules attached to the given Route Filter Policy UUID
func (o GetRouteFilterRulesResultOutput) Datas() GetRouteFilterRulesDataArrayOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) []GetRouteFilterRulesData { return v.Datas }).(GetRouteFilterRulesDataArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetRouteFilterRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Number of elements to be requested per page. Number must be between 1 and 100. Default is 20
func (o GetRouteFilterRulesResultOutput) Limit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) *int { return v.Limit }).(pulumi.IntPtrOutput)
}

// The page offset for the pagination request. Index of the first element. Default is 0.
func (o GetRouteFilterRulesResultOutput) Offset() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) *int { return v.Offset }).(pulumi.IntPtrOutput)
}

// Pagination details for the Data Source Search Request
func (o GetRouteFilterRulesResultOutput) Paginations() GetRouteFilterRulesPaginationArrayOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) []GetRouteFilterRulesPagination { return v.Paginations }).(GetRouteFilterRulesPaginationArrayOutput)
}

// UUID of the Route Filter Policy the rule is attached to
func (o GetRouteFilterRulesResultOutput) RouteFilterId() pulumi.StringOutput {
	return o.ApplyT(func(v GetRouteFilterRulesResult) string { return v.RouteFilterId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetRouteFilterRulesResultOutput{})
}
