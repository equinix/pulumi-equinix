// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetStreamSubscriptionsDataSink struct {
	// Boolean switch enabling batch delivery of data
	BatchEnabled bool `pulumi:"batchEnabled"`
	// Maximum size of the batch delivery if enabled
	BatchSizeMax int `pulumi:"batchSizeMax"`
	// Maximum time to wait for batch delivery if enabled
	BatchWaitTimeMax int `pulumi:"batchWaitTimeMax"`
	// Access details for the specified sink type
	Credential GetStreamSubscriptionsDataSinkCredential `pulumi:"credential"`
	// Known hostname of certain data stream subscription products. Not to be confused with a variable URI
	Host string `pulumi:"host"`
	// Stream subscription sink settings
	Settings GetStreamSubscriptionsDataSinkSettings `pulumi:"settings"`
	// Type of the subscriber
	Type string `pulumi:"type"`
	// Publicly reachable http endpoint destination for data stream
	Uri string `pulumi:"uri"`
}

// GetStreamSubscriptionsDataSinkInput is an input type that accepts GetStreamSubscriptionsDataSinkArgs and GetStreamSubscriptionsDataSinkOutput values.
// You can construct a concrete instance of `GetStreamSubscriptionsDataSinkInput` via:
//
//	GetStreamSubscriptionsDataSinkArgs{...}
type GetStreamSubscriptionsDataSinkInput interface {
	pulumi.Input

	ToGetStreamSubscriptionsDataSinkOutput() GetStreamSubscriptionsDataSinkOutput
	ToGetStreamSubscriptionsDataSinkOutputWithContext(context.Context) GetStreamSubscriptionsDataSinkOutput
}

type GetStreamSubscriptionsDataSinkArgs struct {
	// Boolean switch enabling batch delivery of data
	BatchEnabled pulumi.BoolInput `pulumi:"batchEnabled"`
	// Maximum size of the batch delivery if enabled
	BatchSizeMax pulumi.IntInput `pulumi:"batchSizeMax"`
	// Maximum time to wait for batch delivery if enabled
	BatchWaitTimeMax pulumi.IntInput `pulumi:"batchWaitTimeMax"`
	// Access details for the specified sink type
	Credential GetStreamSubscriptionsDataSinkCredentialInput `pulumi:"credential"`
	// Known hostname of certain data stream subscription products. Not to be confused with a variable URI
	Host pulumi.StringInput `pulumi:"host"`
	// Stream subscription sink settings
	Settings GetStreamSubscriptionsDataSinkSettingsInput `pulumi:"settings"`
	// Type of the subscriber
	Type pulumi.StringInput `pulumi:"type"`
	// Publicly reachable http endpoint destination for data stream
	Uri pulumi.StringInput `pulumi:"uri"`
}

func (GetStreamSubscriptionsDataSinkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSink)(nil)).Elem()
}

func (i GetStreamSubscriptionsDataSinkArgs) ToGetStreamSubscriptionsDataSinkOutput() GetStreamSubscriptionsDataSinkOutput {
	return i.ToGetStreamSubscriptionsDataSinkOutputWithContext(context.Background())
}

func (i GetStreamSubscriptionsDataSinkArgs) ToGetStreamSubscriptionsDataSinkOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamSubscriptionsDataSinkOutput)
}

type GetStreamSubscriptionsDataSinkOutput struct{ *pulumi.OutputState }

func (GetStreamSubscriptionsDataSinkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSink)(nil)).Elem()
}

func (o GetStreamSubscriptionsDataSinkOutput) ToGetStreamSubscriptionsDataSinkOutput() GetStreamSubscriptionsDataSinkOutput {
	return o
}

func (o GetStreamSubscriptionsDataSinkOutput) ToGetStreamSubscriptionsDataSinkOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkOutput {
	return o
}

// Boolean switch enabling batch delivery of data
func (o GetStreamSubscriptionsDataSinkOutput) BatchEnabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) bool { return v.BatchEnabled }).(pulumi.BoolOutput)
}

// Maximum size of the batch delivery if enabled
func (o GetStreamSubscriptionsDataSinkOutput) BatchSizeMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) int { return v.BatchSizeMax }).(pulumi.IntOutput)
}

// Maximum time to wait for batch delivery if enabled
func (o GetStreamSubscriptionsDataSinkOutput) BatchWaitTimeMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) int { return v.BatchWaitTimeMax }).(pulumi.IntOutput)
}

// Access details for the specified sink type
func (o GetStreamSubscriptionsDataSinkOutput) Credential() GetStreamSubscriptionsDataSinkCredentialOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) GetStreamSubscriptionsDataSinkCredential { return v.Credential }).(GetStreamSubscriptionsDataSinkCredentialOutput)
}

// Known hostname of certain data stream subscription products. Not to be confused with a variable URI
func (o GetStreamSubscriptionsDataSinkOutput) Host() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) string { return v.Host }).(pulumi.StringOutput)
}

// Stream subscription sink settings
func (o GetStreamSubscriptionsDataSinkOutput) Settings() GetStreamSubscriptionsDataSinkSettingsOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) GetStreamSubscriptionsDataSinkSettings { return v.Settings }).(GetStreamSubscriptionsDataSinkSettingsOutput)
}

// Type of the subscriber
func (o GetStreamSubscriptionsDataSinkOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) string { return v.Type }).(pulumi.StringOutput)
}

// Publicly reachable http endpoint destination for data stream
func (o GetStreamSubscriptionsDataSinkOutput) Uri() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSink) string { return v.Uri }).(pulumi.StringOutput)
}

type GetStreamSubscriptionsDataSinkCredential struct {
	// Passed as Authorization header value
	AccessToken string `pulumi:"accessToken"`
	// Passed as Authorization header value
	ApiKey string `pulumi:"apiKey"`
	// Passed as Authorization header value
	IntegrationKey string `pulumi:"integrationKey"`
	// Passed as Authorization header value
	Password string `pulumi:"password"`
	// Type of the credential being passed
	Type string `pulumi:"type"`
	// Passed as Authorization header value
	Username string `pulumi:"username"`
}

// GetStreamSubscriptionsDataSinkCredentialInput is an input type that accepts GetStreamSubscriptionsDataSinkCredentialArgs and GetStreamSubscriptionsDataSinkCredentialOutput values.
// You can construct a concrete instance of `GetStreamSubscriptionsDataSinkCredentialInput` via:
//
//	GetStreamSubscriptionsDataSinkCredentialArgs{...}
type GetStreamSubscriptionsDataSinkCredentialInput interface {
	pulumi.Input

	ToGetStreamSubscriptionsDataSinkCredentialOutput() GetStreamSubscriptionsDataSinkCredentialOutput
	ToGetStreamSubscriptionsDataSinkCredentialOutputWithContext(context.Context) GetStreamSubscriptionsDataSinkCredentialOutput
}

type GetStreamSubscriptionsDataSinkCredentialArgs struct {
	// Passed as Authorization header value
	AccessToken pulumi.StringInput `pulumi:"accessToken"`
	// Passed as Authorization header value
	ApiKey pulumi.StringInput `pulumi:"apiKey"`
	// Passed as Authorization header value
	IntegrationKey pulumi.StringInput `pulumi:"integrationKey"`
	// Passed as Authorization header value
	Password pulumi.StringInput `pulumi:"password"`
	// Type of the credential being passed
	Type pulumi.StringInput `pulumi:"type"`
	// Passed as Authorization header value
	Username pulumi.StringInput `pulumi:"username"`
}

func (GetStreamSubscriptionsDataSinkCredentialArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSinkCredential)(nil)).Elem()
}

func (i GetStreamSubscriptionsDataSinkCredentialArgs) ToGetStreamSubscriptionsDataSinkCredentialOutput() GetStreamSubscriptionsDataSinkCredentialOutput {
	return i.ToGetStreamSubscriptionsDataSinkCredentialOutputWithContext(context.Background())
}

func (i GetStreamSubscriptionsDataSinkCredentialArgs) ToGetStreamSubscriptionsDataSinkCredentialOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkCredentialOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamSubscriptionsDataSinkCredentialOutput)
}

type GetStreamSubscriptionsDataSinkCredentialOutput struct{ *pulumi.OutputState }

func (GetStreamSubscriptionsDataSinkCredentialOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSinkCredential)(nil)).Elem()
}

func (o GetStreamSubscriptionsDataSinkCredentialOutput) ToGetStreamSubscriptionsDataSinkCredentialOutput() GetStreamSubscriptionsDataSinkCredentialOutput {
	return o
}

func (o GetStreamSubscriptionsDataSinkCredentialOutput) ToGetStreamSubscriptionsDataSinkCredentialOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkCredentialOutput {
	return o
}

// Passed as Authorization header value
func (o GetStreamSubscriptionsDataSinkCredentialOutput) AccessToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.AccessToken }).(pulumi.StringOutput)
}

// Passed as Authorization header value
func (o GetStreamSubscriptionsDataSinkCredentialOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.ApiKey }).(pulumi.StringOutput)
}

// Passed as Authorization header value
func (o GetStreamSubscriptionsDataSinkCredentialOutput) IntegrationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.IntegrationKey }).(pulumi.StringOutput)
}

// Passed as Authorization header value
func (o GetStreamSubscriptionsDataSinkCredentialOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.Password }).(pulumi.StringOutput)
}

// Type of the credential being passed
func (o GetStreamSubscriptionsDataSinkCredentialOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.Type }).(pulumi.StringOutput)
}

// Passed as Authorization header value
func (o GetStreamSubscriptionsDataSinkCredentialOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkCredential) string { return v.Username }).(pulumi.StringOutput)
}

type GetStreamSubscriptionsDataSinkSettings struct {
	ApplicationKey string `pulumi:"applicationKey"`
	EventIndex     string `pulumi:"eventIndex"`
	EventUri       string `pulumi:"eventUri"`
	Format         string `pulumi:"format"`
	MetricIndex    string `pulumi:"metricIndex"`
	MetricUri      string `pulumi:"metricUri"`
	Source         string `pulumi:"source"`
}

// GetStreamSubscriptionsDataSinkSettingsInput is an input type that accepts GetStreamSubscriptionsDataSinkSettingsArgs and GetStreamSubscriptionsDataSinkSettingsOutput values.
// You can construct a concrete instance of `GetStreamSubscriptionsDataSinkSettingsInput` via:
//
//	GetStreamSubscriptionsDataSinkSettingsArgs{...}
type GetStreamSubscriptionsDataSinkSettingsInput interface {
	pulumi.Input

	ToGetStreamSubscriptionsDataSinkSettingsOutput() GetStreamSubscriptionsDataSinkSettingsOutput
	ToGetStreamSubscriptionsDataSinkSettingsOutputWithContext(context.Context) GetStreamSubscriptionsDataSinkSettingsOutput
}

type GetStreamSubscriptionsDataSinkSettingsArgs struct {
	ApplicationKey pulumi.StringInput `pulumi:"applicationKey"`
	EventIndex     pulumi.StringInput `pulumi:"eventIndex"`
	EventUri       pulumi.StringInput `pulumi:"eventUri"`
	Format         pulumi.StringInput `pulumi:"format"`
	MetricIndex    pulumi.StringInput `pulumi:"metricIndex"`
	MetricUri      pulumi.StringInput `pulumi:"metricUri"`
	Source         pulumi.StringInput `pulumi:"source"`
}

func (GetStreamSubscriptionsDataSinkSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSinkSettings)(nil)).Elem()
}

func (i GetStreamSubscriptionsDataSinkSettingsArgs) ToGetStreamSubscriptionsDataSinkSettingsOutput() GetStreamSubscriptionsDataSinkSettingsOutput {
	return i.ToGetStreamSubscriptionsDataSinkSettingsOutputWithContext(context.Background())
}

func (i GetStreamSubscriptionsDataSinkSettingsArgs) ToGetStreamSubscriptionsDataSinkSettingsOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamSubscriptionsDataSinkSettingsOutput)
}

type GetStreamSubscriptionsDataSinkSettingsOutput struct{ *pulumi.OutputState }

func (GetStreamSubscriptionsDataSinkSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsDataSinkSettings)(nil)).Elem()
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) ToGetStreamSubscriptionsDataSinkSettingsOutput() GetStreamSubscriptionsDataSinkSettingsOutput {
	return o
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) ToGetStreamSubscriptionsDataSinkSettingsOutputWithContext(ctx context.Context) GetStreamSubscriptionsDataSinkSettingsOutput {
	return o
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) ApplicationKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.ApplicationKey }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) EventIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.EventIndex }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) EventUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.EventUri }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) Format() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.Format }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) MetricIndex() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.MetricIndex }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) MetricUri() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.MetricUri }).(pulumi.StringOutput)
}

func (o GetStreamSubscriptionsDataSinkSettingsOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsDataSinkSettings) string { return v.Source }).(pulumi.StringOutput)
}

type GetStreamSubscriptionsPagination struct {
	// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
	Limit int `pulumi:"limit"`
	// The URL relative to the next item in the response
	Next string `pulumi:"next"`
	// Index of the first item returned in the response. The default is 0
	Offset int `pulumi:"offset"`
	// The URL relative to the previous item in the response
	Previous string `pulumi:"previous"`
	// The total number of streams available to the user making the request
	Total int `pulumi:"total"`
}

// GetStreamSubscriptionsPaginationInput is an input type that accepts GetStreamSubscriptionsPaginationArgs and GetStreamSubscriptionsPaginationOutput values.
// You can construct a concrete instance of `GetStreamSubscriptionsPaginationInput` via:
//
//	GetStreamSubscriptionsPaginationArgs{...}
type GetStreamSubscriptionsPaginationInput interface {
	pulumi.Input

	ToGetStreamSubscriptionsPaginationOutput() GetStreamSubscriptionsPaginationOutput
	ToGetStreamSubscriptionsPaginationOutputWithContext(context.Context) GetStreamSubscriptionsPaginationOutput
}

type GetStreamSubscriptionsPaginationArgs struct {
	// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
	Limit pulumi.IntInput `pulumi:"limit"`
	// The URL relative to the next item in the response
	Next pulumi.StringInput `pulumi:"next"`
	// Index of the first item returned in the response. The default is 0
	Offset pulumi.IntInput `pulumi:"offset"`
	// The URL relative to the previous item in the response
	Previous pulumi.StringInput `pulumi:"previous"`
	// The total number of streams available to the user making the request
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetStreamSubscriptionsPaginationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsPagination)(nil)).Elem()
}

func (i GetStreamSubscriptionsPaginationArgs) ToGetStreamSubscriptionsPaginationOutput() GetStreamSubscriptionsPaginationOutput {
	return i.ToGetStreamSubscriptionsPaginationOutputWithContext(context.Background())
}

func (i GetStreamSubscriptionsPaginationArgs) ToGetStreamSubscriptionsPaginationOutputWithContext(ctx context.Context) GetStreamSubscriptionsPaginationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamSubscriptionsPaginationOutput)
}

type GetStreamSubscriptionsPaginationOutput struct{ *pulumi.OutputState }

func (GetStreamSubscriptionsPaginationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamSubscriptionsPagination)(nil)).Elem()
}

func (o GetStreamSubscriptionsPaginationOutput) ToGetStreamSubscriptionsPaginationOutput() GetStreamSubscriptionsPaginationOutput {
	return o
}

func (o GetStreamSubscriptionsPaginationOutput) ToGetStreamSubscriptionsPaginationOutputWithContext(ctx context.Context) GetStreamSubscriptionsPaginationOutput {
	return o
}

// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
func (o GetStreamSubscriptionsPaginationOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsPagination) int { return v.Limit }).(pulumi.IntOutput)
}

// The URL relative to the next item in the response
func (o GetStreamSubscriptionsPaginationOutput) Next() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsPagination) string { return v.Next }).(pulumi.StringOutput)
}

// Index of the first item returned in the response. The default is 0
func (o GetStreamSubscriptionsPaginationOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsPagination) int { return v.Offset }).(pulumi.IntOutput)
}

// The URL relative to the previous item in the response
func (o GetStreamSubscriptionsPaginationOutput) Previous() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsPagination) string { return v.Previous }).(pulumi.StringOutput)
}

// The total number of streams available to the user making the request
func (o GetStreamSubscriptionsPaginationOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamSubscriptionsPagination) int { return v.Total }).(pulumi.IntOutput)
}

type GetStreamsData struct {
	// Count of the streaming assets attached to the stream resource
	AssetsCount int `pulumi:"assetsCount"`
	// Details of the last change on the stream resource
	ChangeLog GetStreamsDataChangeLog `pulumi:"changeLog"`
	// Customer-provided description of the stream resource
	Description string `pulumi:"description"`
	// Equinix auto generated URI to the stream resource in Equinix Portal
	Href string `pulumi:"href"`
	// Customer-provided name of the stream resource
	Name string `pulumi:"name"`
	// Equinix Project attribute object
	Project GetStreamsDataProject `pulumi:"project"`
	// Value representing provisioning status for the stream resource
	State string `pulumi:"state"`
	// Count of the client subscriptions on the stream resource
	StreamSubscriptionsCount int `pulumi:"streamSubscriptionsCount"`
	// Equinix defined Streaming Type
	Type string `pulumi:"type"`
	// Equinix-assigned unique id for the stream resource
	Uuid string `pulumi:"uuid"`
}

// GetStreamsDataInput is an input type that accepts GetStreamsDataArgs and GetStreamsDataOutput values.
// You can construct a concrete instance of `GetStreamsDataInput` via:
//
//	GetStreamsDataArgs{...}
type GetStreamsDataInput interface {
	pulumi.Input

	ToGetStreamsDataOutput() GetStreamsDataOutput
	ToGetStreamsDataOutputWithContext(context.Context) GetStreamsDataOutput
}

type GetStreamsDataArgs struct {
	// Count of the streaming assets attached to the stream resource
	AssetsCount pulumi.IntInput `pulumi:"assetsCount"`
	// Details of the last change on the stream resource
	ChangeLog GetStreamsDataChangeLogInput `pulumi:"changeLog"`
	// Customer-provided description of the stream resource
	Description pulumi.StringInput `pulumi:"description"`
	// Equinix auto generated URI to the stream resource in Equinix Portal
	Href pulumi.StringInput `pulumi:"href"`
	// Customer-provided name of the stream resource
	Name pulumi.StringInput `pulumi:"name"`
	// Equinix Project attribute object
	Project GetStreamsDataProjectInput `pulumi:"project"`
	// Value representing provisioning status for the stream resource
	State pulumi.StringInput `pulumi:"state"`
	// Count of the client subscriptions on the stream resource
	StreamSubscriptionsCount pulumi.IntInput `pulumi:"streamSubscriptionsCount"`
	// Equinix defined Streaming Type
	Type pulumi.StringInput `pulumi:"type"`
	// Equinix-assigned unique id for the stream resource
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetStreamsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsData)(nil)).Elem()
}

func (i GetStreamsDataArgs) ToGetStreamsDataOutput() GetStreamsDataOutput {
	return i.ToGetStreamsDataOutputWithContext(context.Background())
}

func (i GetStreamsDataArgs) ToGetStreamsDataOutputWithContext(ctx context.Context) GetStreamsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsDataOutput)
}

// GetStreamsDataArrayInput is an input type that accepts GetStreamsDataArray and GetStreamsDataArrayOutput values.
// You can construct a concrete instance of `GetStreamsDataArrayInput` via:
//
//	GetStreamsDataArray{ GetStreamsDataArgs{...} }
type GetStreamsDataArrayInput interface {
	pulumi.Input

	ToGetStreamsDataArrayOutput() GetStreamsDataArrayOutput
	ToGetStreamsDataArrayOutputWithContext(context.Context) GetStreamsDataArrayOutput
}

type GetStreamsDataArray []GetStreamsDataInput

func (GetStreamsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsData)(nil)).Elem()
}

func (i GetStreamsDataArray) ToGetStreamsDataArrayOutput() GetStreamsDataArrayOutput {
	return i.ToGetStreamsDataArrayOutputWithContext(context.Background())
}

func (i GetStreamsDataArray) ToGetStreamsDataArrayOutputWithContext(ctx context.Context) GetStreamsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsDataArrayOutput)
}

type GetStreamsDataOutput struct{ *pulumi.OutputState }

func (GetStreamsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsData)(nil)).Elem()
}

func (o GetStreamsDataOutput) ToGetStreamsDataOutput() GetStreamsDataOutput {
	return o
}

func (o GetStreamsDataOutput) ToGetStreamsDataOutputWithContext(ctx context.Context) GetStreamsDataOutput {
	return o
}

// Count of the streaming assets attached to the stream resource
func (o GetStreamsDataOutput) AssetsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsData) int { return v.AssetsCount }).(pulumi.IntOutput)
}

// Details of the last change on the stream resource
func (o GetStreamsDataOutput) ChangeLog() GetStreamsDataChangeLogOutput {
	return o.ApplyT(func(v GetStreamsData) GetStreamsDataChangeLog { return v.ChangeLog }).(GetStreamsDataChangeLogOutput)
}

// Customer-provided description of the stream resource
func (o GetStreamsDataOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.Description }).(pulumi.StringOutput)
}

// Equinix auto generated URI to the stream resource in Equinix Portal
func (o GetStreamsDataOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.Href }).(pulumi.StringOutput)
}

// Customer-provided name of the stream resource
func (o GetStreamsDataOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.Name }).(pulumi.StringOutput)
}

// Equinix Project attribute object
func (o GetStreamsDataOutput) Project() GetStreamsDataProjectOutput {
	return o.ApplyT(func(v GetStreamsData) GetStreamsDataProject { return v.Project }).(GetStreamsDataProjectOutput)
}

// Value representing provisioning status for the stream resource
func (o GetStreamsDataOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.State }).(pulumi.StringOutput)
}

// Count of the client subscriptions on the stream resource
func (o GetStreamsDataOutput) StreamSubscriptionsCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsData) int { return v.StreamSubscriptionsCount }).(pulumi.IntOutput)
}

// Equinix defined Streaming Type
func (o GetStreamsDataOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.Type }).(pulumi.StringOutput)
}

// Equinix-assigned unique id for the stream resource
func (o GetStreamsDataOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsData) string { return v.Uuid }).(pulumi.StringOutput)
}

type GetStreamsDataArrayOutput struct{ *pulumi.OutputState }

func (GetStreamsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetStreamsData)(nil)).Elem()
}

func (o GetStreamsDataArrayOutput) ToGetStreamsDataArrayOutput() GetStreamsDataArrayOutput {
	return o
}

func (o GetStreamsDataArrayOutput) ToGetStreamsDataArrayOutputWithContext(ctx context.Context) GetStreamsDataArrayOutput {
	return o
}

func (o GetStreamsDataArrayOutput) Index(i pulumi.IntInput) GetStreamsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetStreamsData {
		return vs[0].([]GetStreamsData)[vs[1].(int)]
	}).(GetStreamsDataOutput)
}

type GetStreamsDataChangeLog struct {
	// User name of creator of the stream resource
	CreatedBy string `pulumi:"createdBy"`
	// Email of creator of the stream resource
	CreatedByEmail string `pulumi:"createdByEmail"`
	// Legal name of creator of the stream resource
	CreatedByFullName string `pulumi:"createdByFullName"`
	// Creation time of the stream resource
	CreatedDateTime string `pulumi:"createdDateTime"`
	// User name of deleter of the stream resource
	DeletedBy string `pulumi:"deletedBy"`
	// Email of deleter of the stream resource
	DeletedByEmail string `pulumi:"deletedByEmail"`
	// Legal name of deleter of the stream resource
	DeletedByFullName string `pulumi:"deletedByFullName"`
	// Deletion time of the stream resource
	DeletedDateTime string `pulumi:"deletedDateTime"`
	// User name of last updater of the stream resource
	UpdatedBy string `pulumi:"updatedBy"`
	// Email of last updater of the stream resource
	UpdatedByEmail string `pulumi:"updatedByEmail"`
	// Legal name of last updater of the stream resource
	UpdatedByFullName string `pulumi:"updatedByFullName"`
	// Last update time of the stream resource
	UpdatedDateTime string `pulumi:"updatedDateTime"`
}

// GetStreamsDataChangeLogInput is an input type that accepts GetStreamsDataChangeLogArgs and GetStreamsDataChangeLogOutput values.
// You can construct a concrete instance of `GetStreamsDataChangeLogInput` via:
//
//	GetStreamsDataChangeLogArgs{...}
type GetStreamsDataChangeLogInput interface {
	pulumi.Input

	ToGetStreamsDataChangeLogOutput() GetStreamsDataChangeLogOutput
	ToGetStreamsDataChangeLogOutputWithContext(context.Context) GetStreamsDataChangeLogOutput
}

type GetStreamsDataChangeLogArgs struct {
	// User name of creator of the stream resource
	CreatedBy pulumi.StringInput `pulumi:"createdBy"`
	// Email of creator of the stream resource
	CreatedByEmail pulumi.StringInput `pulumi:"createdByEmail"`
	// Legal name of creator of the stream resource
	CreatedByFullName pulumi.StringInput `pulumi:"createdByFullName"`
	// Creation time of the stream resource
	CreatedDateTime pulumi.StringInput `pulumi:"createdDateTime"`
	// User name of deleter of the stream resource
	DeletedBy pulumi.StringInput `pulumi:"deletedBy"`
	// Email of deleter of the stream resource
	DeletedByEmail pulumi.StringInput `pulumi:"deletedByEmail"`
	// Legal name of deleter of the stream resource
	DeletedByFullName pulumi.StringInput `pulumi:"deletedByFullName"`
	// Deletion time of the stream resource
	DeletedDateTime pulumi.StringInput `pulumi:"deletedDateTime"`
	// User name of last updater of the stream resource
	UpdatedBy pulumi.StringInput `pulumi:"updatedBy"`
	// Email of last updater of the stream resource
	UpdatedByEmail pulumi.StringInput `pulumi:"updatedByEmail"`
	// Legal name of last updater of the stream resource
	UpdatedByFullName pulumi.StringInput `pulumi:"updatedByFullName"`
	// Last update time of the stream resource
	UpdatedDateTime pulumi.StringInput `pulumi:"updatedDateTime"`
}

func (GetStreamsDataChangeLogArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsDataChangeLog)(nil)).Elem()
}

func (i GetStreamsDataChangeLogArgs) ToGetStreamsDataChangeLogOutput() GetStreamsDataChangeLogOutput {
	return i.ToGetStreamsDataChangeLogOutputWithContext(context.Background())
}

func (i GetStreamsDataChangeLogArgs) ToGetStreamsDataChangeLogOutputWithContext(ctx context.Context) GetStreamsDataChangeLogOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsDataChangeLogOutput)
}

type GetStreamsDataChangeLogOutput struct{ *pulumi.OutputState }

func (GetStreamsDataChangeLogOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsDataChangeLog)(nil)).Elem()
}

func (o GetStreamsDataChangeLogOutput) ToGetStreamsDataChangeLogOutput() GetStreamsDataChangeLogOutput {
	return o
}

func (o GetStreamsDataChangeLogOutput) ToGetStreamsDataChangeLogOutputWithContext(ctx context.Context) GetStreamsDataChangeLogOutput {
	return o
}

// User name of creator of the stream resource
func (o GetStreamsDataChangeLogOutput) CreatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.CreatedBy }).(pulumi.StringOutput)
}

// Email of creator of the stream resource
func (o GetStreamsDataChangeLogOutput) CreatedByEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.CreatedByEmail }).(pulumi.StringOutput)
}

// Legal name of creator of the stream resource
func (o GetStreamsDataChangeLogOutput) CreatedByFullName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.CreatedByFullName }).(pulumi.StringOutput)
}

// Creation time of the stream resource
func (o GetStreamsDataChangeLogOutput) CreatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.CreatedDateTime }).(pulumi.StringOutput)
}

// User name of deleter of the stream resource
func (o GetStreamsDataChangeLogOutput) DeletedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.DeletedBy }).(pulumi.StringOutput)
}

// Email of deleter of the stream resource
func (o GetStreamsDataChangeLogOutput) DeletedByEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.DeletedByEmail }).(pulumi.StringOutput)
}

// Legal name of deleter of the stream resource
func (o GetStreamsDataChangeLogOutput) DeletedByFullName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.DeletedByFullName }).(pulumi.StringOutput)
}

// Deletion time of the stream resource
func (o GetStreamsDataChangeLogOutput) DeletedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.DeletedDateTime }).(pulumi.StringOutput)
}

// User name of last updater of the stream resource
func (o GetStreamsDataChangeLogOutput) UpdatedBy() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.UpdatedBy }).(pulumi.StringOutput)
}

// Email of last updater of the stream resource
func (o GetStreamsDataChangeLogOutput) UpdatedByEmail() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.UpdatedByEmail }).(pulumi.StringOutput)
}

// Legal name of last updater of the stream resource
func (o GetStreamsDataChangeLogOutput) UpdatedByFullName() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.UpdatedByFullName }).(pulumi.StringOutput)
}

// Last update time of the stream resource
func (o GetStreamsDataChangeLogOutput) UpdatedDateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataChangeLog) string { return v.UpdatedDateTime }).(pulumi.StringOutput)
}

type GetStreamsDataProject struct {
	// Equinix Subscriber-assigned project ID
	ProjectId string `pulumi:"projectId"`
}

// GetStreamsDataProjectInput is an input type that accepts GetStreamsDataProjectArgs and GetStreamsDataProjectOutput values.
// You can construct a concrete instance of `GetStreamsDataProjectInput` via:
//
//	GetStreamsDataProjectArgs{...}
type GetStreamsDataProjectInput interface {
	pulumi.Input

	ToGetStreamsDataProjectOutput() GetStreamsDataProjectOutput
	ToGetStreamsDataProjectOutputWithContext(context.Context) GetStreamsDataProjectOutput
}

type GetStreamsDataProjectArgs struct {
	// Equinix Subscriber-assigned project ID
	ProjectId pulumi.StringInput `pulumi:"projectId"`
}

func (GetStreamsDataProjectArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsDataProject)(nil)).Elem()
}

func (i GetStreamsDataProjectArgs) ToGetStreamsDataProjectOutput() GetStreamsDataProjectOutput {
	return i.ToGetStreamsDataProjectOutputWithContext(context.Background())
}

func (i GetStreamsDataProjectArgs) ToGetStreamsDataProjectOutputWithContext(ctx context.Context) GetStreamsDataProjectOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsDataProjectOutput)
}

type GetStreamsDataProjectOutput struct{ *pulumi.OutputState }

func (GetStreamsDataProjectOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsDataProject)(nil)).Elem()
}

func (o GetStreamsDataProjectOutput) ToGetStreamsDataProjectOutput() GetStreamsDataProjectOutput {
	return o
}

func (o GetStreamsDataProjectOutput) ToGetStreamsDataProjectOutputWithContext(ctx context.Context) GetStreamsDataProjectOutput {
	return o
}

// Equinix Subscriber-assigned project ID
func (o GetStreamsDataProjectOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsDataProject) string { return v.ProjectId }).(pulumi.StringOutput)
}

type GetStreamsPagination struct {
	// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
	Limit int `pulumi:"limit"`
	// The URL relative to the next item in the response
	Next string `pulumi:"next"`
	// Index of the first item returned in the response. The default is 0
	Offset int `pulumi:"offset"`
	// The URL relative to the previous item in the response
	Previous string `pulumi:"previous"`
	// The total number of streams available to the user making the request
	Total int `pulumi:"total"`
}

// GetStreamsPaginationInput is an input type that accepts GetStreamsPaginationArgs and GetStreamsPaginationOutput values.
// You can construct a concrete instance of `GetStreamsPaginationInput` via:
//
//	GetStreamsPaginationArgs{...}
type GetStreamsPaginationInput interface {
	pulumi.Input

	ToGetStreamsPaginationOutput() GetStreamsPaginationOutput
	ToGetStreamsPaginationOutputWithContext(context.Context) GetStreamsPaginationOutput
}

type GetStreamsPaginationArgs struct {
	// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
	Limit pulumi.IntInput `pulumi:"limit"`
	// The URL relative to the next item in the response
	Next pulumi.StringInput `pulumi:"next"`
	// Index of the first item returned in the response. The default is 0
	Offset pulumi.IntInput `pulumi:"offset"`
	// The URL relative to the previous item in the response
	Previous pulumi.StringInput `pulumi:"previous"`
	// The total number of streams available to the user making the request
	Total pulumi.IntInput `pulumi:"total"`
}

func (GetStreamsPaginationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsPagination)(nil)).Elem()
}

func (i GetStreamsPaginationArgs) ToGetStreamsPaginationOutput() GetStreamsPaginationOutput {
	return i.ToGetStreamsPaginationOutputWithContext(context.Background())
}

func (i GetStreamsPaginationArgs) ToGetStreamsPaginationOutputWithContext(ctx context.Context) GetStreamsPaginationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetStreamsPaginationOutput)
}

type GetStreamsPaginationOutput struct{ *pulumi.OutputState }

func (GetStreamsPaginationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamsPagination)(nil)).Elem()
}

func (o GetStreamsPaginationOutput) ToGetStreamsPaginationOutput() GetStreamsPaginationOutput {
	return o
}

func (o GetStreamsPaginationOutput) ToGetStreamsPaginationOutputWithContext(ctx context.Context) GetStreamsPaginationOutput {
	return o
}

// Maximum number of search results returned per page. Number must be between 1 and 100, and the default is 20
func (o GetStreamsPaginationOutput) Limit() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsPagination) int { return v.Limit }).(pulumi.IntOutput)
}

// The URL relative to the next item in the response
func (o GetStreamsPaginationOutput) Next() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsPagination) string { return v.Next }).(pulumi.StringOutput)
}

// Index of the first item returned in the response. The default is 0
func (o GetStreamsPaginationOutput) Offset() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsPagination) int { return v.Offset }).(pulumi.IntOutput)
}

// The URL relative to the previous item in the response
func (o GetStreamsPaginationOutput) Previous() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamsPagination) string { return v.Previous }).(pulumi.StringOutput)
}

// The total number of streams available to the user making the request
func (o GetStreamsPaginationOutput) Total() pulumi.IntOutput {
	return o.ApplyT(func(v GetStreamsPagination) int { return v.Total }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamSubscriptionsDataSinkInput)(nil)).Elem(), GetStreamSubscriptionsDataSinkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamSubscriptionsDataSinkCredentialInput)(nil)).Elem(), GetStreamSubscriptionsDataSinkCredentialArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamSubscriptionsDataSinkSettingsInput)(nil)).Elem(), GetStreamSubscriptionsDataSinkSettingsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamSubscriptionsPaginationInput)(nil)).Elem(), GetStreamSubscriptionsPaginationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsDataInput)(nil)).Elem(), GetStreamsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsDataArrayInput)(nil)).Elem(), GetStreamsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsDataChangeLogInput)(nil)).Elem(), GetStreamsDataChangeLogArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsDataProjectInput)(nil)).Elem(), GetStreamsDataProjectArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetStreamsPaginationInput)(nil)).Elem(), GetStreamsPaginationArgs{})
	pulumi.RegisterOutputType(GetStreamSubscriptionsDataSinkOutput{})
	pulumi.RegisterOutputType(GetStreamSubscriptionsDataSinkCredentialOutput{})
	pulumi.RegisterOutputType(GetStreamSubscriptionsDataSinkSettingsOutput{})
	pulumi.RegisterOutputType(GetStreamSubscriptionsPaginationOutput{})
	pulumi.RegisterOutputType(GetStreamsDataOutput{})
	pulumi.RegisterOutputType(GetStreamsDataArrayOutput{})
	pulumi.RegisterOutputType(GetStreamsDataChangeLogOutput{})
	pulumi.RegisterOutputType(GetStreamsDataProjectOutput{})
	pulumi.RegisterOutputType(GetStreamsPaginationOutput{})
}
