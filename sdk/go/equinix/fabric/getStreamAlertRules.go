// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/equinix/pulumi-equinix/sdk/go/equinix/fabric"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := fabric.GetStreamAlertRules(ctx, &fabric.GetStreamAlertRulesArgs{
//				StreamId: "<uuid_of_stream>",
//				Pagination: fabric.GetStreamAlertRulesPagination{
//					Limit:  5,
//					Offset: 1,
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("streamAlertRulesType", data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Type)
//			ctx.Export("streamAlertRulesId", data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Uuid)
//			ctx.Export("streamAlertRulesState", data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].State)
//			ctx.Export("streamAlertRulesStreamId", data.Equinix_fabric_stream_alert_rules.Alert_rules.Data[0].Stream_id)
//			return nil
//		})
//	}
//
// ```
func GetStreamAlertRules(ctx *pulumi.Context, args *GetStreamAlertRulesArgs, opts ...pulumi.InvokeOption) (*GetStreamAlertRulesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetStreamAlertRulesResult
	err := ctx.Invoke("equinix:fabric/getStreamAlertRules:getStreamAlertRules", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getStreamAlertRules.
type GetStreamAlertRulesArgs struct {
	// Pagination details for the returned stream alert rules list
	Pagination GetStreamAlertRulesPagination `pulumi:"pagination"`
	// The uuid of the stream that is the target of the stream alert rule
	StreamId string `pulumi:"streamId"`
}

// A collection of values returned by getStreamAlertRules.
type GetStreamAlertRulesResult struct {
	// Returned list of stream objects
	Datas []GetStreamAlertRulesData `pulumi:"datas"`
	// The unique identifier of the resource
	Id string `pulumi:"id"`
	// Pagination details for the returned stream alert rules list
	Pagination GetStreamAlertRulesPagination `pulumi:"pagination"`
	// The uuid of the stream that is the target of the stream alert rule
	StreamId string `pulumi:"streamId"`
}

func GetStreamAlertRulesOutput(ctx *pulumi.Context, args GetStreamAlertRulesOutputArgs, opts ...pulumi.InvokeOption) GetStreamAlertRulesResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetStreamAlertRulesResultOutput, error) {
			args := v.(GetStreamAlertRulesArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getStreamAlertRules:getStreamAlertRules", args, GetStreamAlertRulesResultOutput{}, options).(GetStreamAlertRulesResultOutput), nil
		}).(GetStreamAlertRulesResultOutput)
}

// A collection of arguments for invoking getStreamAlertRules.
type GetStreamAlertRulesOutputArgs struct {
	// Pagination details for the returned stream alert rules list
	Pagination GetStreamAlertRulesPaginationInput `pulumi:"pagination"`
	// The uuid of the stream that is the target of the stream alert rule
	StreamId pulumi.StringInput `pulumi:"streamId"`
}

func (GetStreamAlertRulesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamAlertRulesArgs)(nil)).Elem()
}

// A collection of values returned by getStreamAlertRules.
type GetStreamAlertRulesResultOutput struct{ *pulumi.OutputState }

func (GetStreamAlertRulesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetStreamAlertRulesResult)(nil)).Elem()
}

func (o GetStreamAlertRulesResultOutput) ToGetStreamAlertRulesResultOutput() GetStreamAlertRulesResultOutput {
	return o
}

func (o GetStreamAlertRulesResultOutput) ToGetStreamAlertRulesResultOutputWithContext(ctx context.Context) GetStreamAlertRulesResultOutput {
	return o
}

// Returned list of stream objects
func (o GetStreamAlertRulesResultOutput) Datas() GetStreamAlertRulesDataArrayOutput {
	return o.ApplyT(func(v GetStreamAlertRulesResult) []GetStreamAlertRulesData { return v.Datas }).(GetStreamAlertRulesDataArrayOutput)
}

// The unique identifier of the resource
func (o GetStreamAlertRulesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamAlertRulesResult) string { return v.Id }).(pulumi.StringOutput)
}

// Pagination details for the returned stream alert rules list
func (o GetStreamAlertRulesResultOutput) Pagination() GetStreamAlertRulesPaginationOutput {
	return o.ApplyT(func(v GetStreamAlertRulesResult) GetStreamAlertRulesPagination { return v.Pagination }).(GetStreamAlertRulesPaginationOutput)
}

// The uuid of the stream that is the target of the stream alert rule
func (o GetStreamAlertRulesResultOutput) StreamId() pulumi.StringOutput {
	return o.ApplyT(func(v GetStreamAlertRulesResult) string { return v.StreamId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetStreamAlertRulesResultOutput{})
}
