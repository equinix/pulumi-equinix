// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric V4 API compatible data resource that allow user to fetch connection for a given UUID
//
// Additional documentation:
// * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/Fabric/IMPLEMENTATION/fabric-connections-implement.htm
// * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#connections
func GetConnections(ctx *pulumi.Context, args *GetConnectionsArgs, opts ...pulumi.InvokeOption) (*GetConnectionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetConnectionsResult
	err := ctx.Invoke("equinix:fabric/getConnections:getConnections", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getConnections.
type GetConnectionsArgs struct {
	// Filters for the Data Source Search Request
	Filters []GetConnectionsFilter `pulumi:"filters"`
	// Determines if the filter list will be grouped by AND or by OR. One of [AND, OR]
	OuterOperator string `pulumi:"outerOperator"`
	// Pagination details for the Data Source Search Request
	Pagination *GetConnectionsPagination `pulumi:"pagination"`
	// Filters for the Data Source Search Request
	Sorts []GetConnectionsSort `pulumi:"sorts"`
}

// A collection of values returned by getConnections.
type GetConnectionsResult struct {
	// List of Cloud Routers
	Datas []GetConnectionsData `pulumi:"datas"`
	// Filters for the Data Source Search Request
	Filters []GetConnectionsFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Determines if the filter list will be grouped by AND or by OR. One of [AND, OR]
	OuterOperator string `pulumi:"outerOperator"`
	// Pagination details for the Data Source Search Request
	Pagination *GetConnectionsPagination `pulumi:"pagination"`
	// Filters for the Data Source Search Request
	Sorts []GetConnectionsSort `pulumi:"sorts"`
}

func GetConnectionsOutput(ctx *pulumi.Context, args GetConnectionsOutputArgs, opts ...pulumi.InvokeOption) GetConnectionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetConnectionsResultOutput, error) {
			args := v.(GetConnectionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getConnections:getConnections", args, GetConnectionsResultOutput{}, options).(GetConnectionsResultOutput), nil
		}).(GetConnectionsResultOutput)
}

// A collection of arguments for invoking getConnections.
type GetConnectionsOutputArgs struct {
	// Filters for the Data Source Search Request
	Filters GetConnectionsFilterArrayInput `pulumi:"filters"`
	// Determines if the filter list will be grouped by AND or by OR. One of [AND, OR]
	OuterOperator pulumi.StringInput `pulumi:"outerOperator"`
	// Pagination details for the Data Source Search Request
	Pagination GetConnectionsPaginationPtrInput `pulumi:"pagination"`
	// Filters for the Data Source Search Request
	Sorts GetConnectionsSortArrayInput `pulumi:"sorts"`
}

func (GetConnectionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsArgs)(nil)).Elem()
}

// A collection of values returned by getConnections.
type GetConnectionsResultOutput struct{ *pulumi.OutputState }

func (GetConnectionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionsResult)(nil)).Elem()
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutput() GetConnectionsResultOutput {
	return o
}

func (o GetConnectionsResultOutput) ToGetConnectionsResultOutputWithContext(ctx context.Context) GetConnectionsResultOutput {
	return o
}

// List of Cloud Routers
func (o GetConnectionsResultOutput) Datas() GetConnectionsDataArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsData { return v.Datas }).(GetConnectionsDataArrayOutput)
}

// Filters for the Data Source Search Request
func (o GetConnectionsResultOutput) Filters() GetConnectionsFilterArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsFilter { return v.Filters }).(GetConnectionsFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetConnectionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// Determines if the filter list will be grouped by AND or by OR. One of [AND, OR]
func (o GetConnectionsResultOutput) OuterOperator() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionsResult) string { return v.OuterOperator }).(pulumi.StringOutput)
}

// Pagination details for the Data Source Search Request
func (o GetConnectionsResultOutput) Pagination() GetConnectionsPaginationPtrOutput {
	return o.ApplyT(func(v GetConnectionsResult) *GetConnectionsPagination { return v.Pagination }).(GetConnectionsPaginationPtrOutput)
}

// Filters for the Data Source Search Request
func (o GetConnectionsResultOutput) Sorts() GetConnectionsSortArrayOutput {
	return o.ApplyT(func(v GetConnectionsResult) []GetConnectionsSort { return v.Sorts }).(GetConnectionsSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetConnectionsResultOutput{})
}
