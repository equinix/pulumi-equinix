// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetPort(ctx *pulumi.Context, args *GetPortArgs, opts ...pulumi.InvokeOption) (*GetPortResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetPortResult
	err := ctx.Invoke("equinix:fabric/getPort:getPort", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPort.
type GetPortArgs struct {
	// Equinix-assigned port identifier
	Uuid string `pulumi:"uuid"`
}

// A collection of values returned by getPort.
type GetPortResult struct {
	// Customer account information that is associated with this port
	Accounts []GetPortAccount `pulumi:"accounts"`
	// Port available bandwidth in Mbps
	AvailableBandwidth int `pulumi:"availableBandwidth"`
	// Port bandwidth in Mbps
	Bandwidth int `pulumi:"bandwidth"`
	// Captures port lifecycle change information
	ChangeLogs []GetPortChangeLog `pulumi:"changeLogs"`
	// Port description
	Description string `pulumi:"description"`
	// Port device
	Devices []GetPortDevice `pulumi:"devices"`
	// Port encapsulation protocol
	Encapsulations []GetPortEncapsulation `pulumi:"encapsulations"`
	// Port URI information
	Href string `pulumi:"href"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// Port Lag
	Lags []GetPortLag `pulumi:"lags"`
	// Port location information
	Locations []GetPortLocation `pulumi:"locations"`
	// Port name
	Name string `pulumi:"name"`
	// Port specific operational data
	Operations []GetPortOperation `pulumi:"operations"`
	// Port redundancy information
	Redundancies []GetPortRedundancy `pulumi:"redundancies"`
	// Port service type
	ServiceType string `pulumi:"serviceType"`
	// Port state
	State string `pulumi:"state"`
	// Port type
	Type string `pulumi:"type"`
	// Port used bandwidth in Mbps
	UsedBandwidth int `pulumi:"usedBandwidth"`
	// Equinix-assigned port identifier
	Uuid string `pulumi:"uuid"`
}

func GetPortOutput(ctx *pulumi.Context, args GetPortOutputArgs, opts ...pulumi.InvokeOption) GetPortResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPortResult, error) {
			args := v.(GetPortArgs)
			r, err := GetPort(ctx, &args, opts...)
			var s GetPortResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPortResultOutput)
}

// A collection of arguments for invoking getPort.
type GetPortOutputArgs struct {
	// Equinix-assigned port identifier
	Uuid pulumi.StringInput `pulumi:"uuid"`
}

func (GetPortOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortArgs)(nil)).Elem()
}

// A collection of values returned by getPort.
type GetPortResultOutput struct{ *pulumi.OutputState }

func (GetPortResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPortResult)(nil)).Elem()
}

func (o GetPortResultOutput) ToGetPortResultOutput() GetPortResultOutput {
	return o
}

func (o GetPortResultOutput) ToGetPortResultOutputWithContext(ctx context.Context) GetPortResultOutput {
	return o
}

// Customer account information that is associated with this port
func (o GetPortResultOutput) Accounts() GetPortAccountArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortAccount { return v.Accounts }).(GetPortAccountArrayOutput)
}

// Port available bandwidth in Mbps
func (o GetPortResultOutput) AvailableBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetPortResult) int { return v.AvailableBandwidth }).(pulumi.IntOutput)
}

// Port bandwidth in Mbps
func (o GetPortResultOutput) Bandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetPortResult) int { return v.Bandwidth }).(pulumi.IntOutput)
}

// Captures port lifecycle change information
func (o GetPortResultOutput) ChangeLogs() GetPortChangeLogArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortChangeLog { return v.ChangeLogs }).(GetPortChangeLogArrayOutput)
}

// Port description
func (o GetPortResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Description }).(pulumi.StringOutput)
}

// Port device
func (o GetPortResultOutput) Devices() GetPortDeviceArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortDevice { return v.Devices }).(GetPortDeviceArrayOutput)
}

// Port encapsulation protocol
func (o GetPortResultOutput) Encapsulations() GetPortEncapsulationArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortEncapsulation { return v.Encapsulations }).(GetPortEncapsulationArrayOutput)
}

// Port URI information
func (o GetPortResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Href }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPortResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Id }).(pulumi.StringOutput)
}

// Port Lag
func (o GetPortResultOutput) Lags() GetPortLagArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortLag { return v.Lags }).(GetPortLagArrayOutput)
}

// Port location information
func (o GetPortResultOutput) Locations() GetPortLocationArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortLocation { return v.Locations }).(GetPortLocationArrayOutput)
}

// Port name
func (o GetPortResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Name }).(pulumi.StringOutput)
}

// Port specific operational data
func (o GetPortResultOutput) Operations() GetPortOperationArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortOperation { return v.Operations }).(GetPortOperationArrayOutput)
}

// Port redundancy information
func (o GetPortResultOutput) Redundancies() GetPortRedundancyArrayOutput {
	return o.ApplyT(func(v GetPortResult) []GetPortRedundancy { return v.Redundancies }).(GetPortRedundancyArrayOutput)
}

// Port service type
func (o GetPortResultOutput) ServiceType() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.ServiceType }).(pulumi.StringOutput)
}

// Port state
func (o GetPortResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.State }).(pulumi.StringOutput)
}

// Port type
func (o GetPortResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Type }).(pulumi.StringOutput)
}

// Port used bandwidth in Mbps
func (o GetPortResultOutput) UsedBandwidth() pulumi.IntOutput {
	return o.ApplyT(func(v GetPortResult) int { return v.UsedBandwidth }).(pulumi.IntOutput)
}

// Equinix-assigned port identifier
func (o GetPortResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v GetPortResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPortResultOutput{})
}
