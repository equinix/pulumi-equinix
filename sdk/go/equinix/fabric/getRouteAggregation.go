// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package fabric

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Route Aggregation by UUID
// Additional Documentation:
// * API: https://developer.equinix.com/catalog/fabricv4#tag/Route-Aggregations
//
// ## Example Usage
func LookupRouteAggregation(ctx *pulumi.Context, args *LookupRouteAggregationArgs, opts ...pulumi.InvokeOption) (*LookupRouteAggregationResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteAggregationResult
	err := ctx.Invoke("equinix:fabric/getRouteAggregation:getRouteAggregation", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteAggregation.
type LookupRouteAggregationArgs struct {
	// The uuid of the route aggregation this data source should retrieve
	RouteAggregationId string `pulumi:"routeAggregationId"`
}

// A collection of values returned by getRouteAggregation.
type LookupRouteAggregationResult struct {
	// Current state of latest Route Aggregation change
	Change GetRouteAggregationChange `pulumi:"change"`
	// Details of the last change on the route aggregation resource
	ChangeLog GetRouteAggregationChangeLog `pulumi:"changeLog"`
	// Number of Connections attached to route aggregation
	ConnectionsCount int `pulumi:"connectionsCount"`
	// Customer-provided route aggregation description
	Description string `pulumi:"description"`
	// Equinix auto generated URI to the route aggregation resource
	Href string `pulumi:"href"`
	// The unique identifier of the resource
	Id string `pulumi:"id"`
	// Customer provided name of the route aggregation
	Name string `pulumi:"name"`
	// Equinix Project attribute object
	Project GetRouteAggregationProject `pulumi:"project"`
	// The uuid of the route aggregation this data source should retrieve
	RouteAggregationId string `pulumi:"routeAggregationId"`
	// Number of Rules attached to route aggregation
	RulesCount int `pulumi:"rulesCount"`
	// Value representing provisioning status for the route aggregation resource
	State string `pulumi:"state"`
	// Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
	Type string `pulumi:"type"`
	// Equinix-assigned unique id for the route aggregation resource
	Uuid string `pulumi:"uuid"`
}

func LookupRouteAggregationOutput(ctx *pulumi.Context, args LookupRouteAggregationOutputArgs, opts ...pulumi.InvokeOption) LookupRouteAggregationResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupRouteAggregationResultOutput, error) {
			args := v.(LookupRouteAggregationArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("equinix:fabric/getRouteAggregation:getRouteAggregation", args, LookupRouteAggregationResultOutput{}, options).(LookupRouteAggregationResultOutput), nil
		}).(LookupRouteAggregationResultOutput)
}

// A collection of arguments for invoking getRouteAggregation.
type LookupRouteAggregationOutputArgs struct {
	// The uuid of the route aggregation this data source should retrieve
	RouteAggregationId pulumi.StringInput `pulumi:"routeAggregationId"`
}

func (LookupRouteAggregationOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteAggregationArgs)(nil)).Elem()
}

// A collection of values returned by getRouteAggregation.
type LookupRouteAggregationResultOutput struct{ *pulumi.OutputState }

func (LookupRouteAggregationResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteAggregationResult)(nil)).Elem()
}

func (o LookupRouteAggregationResultOutput) ToLookupRouteAggregationResultOutput() LookupRouteAggregationResultOutput {
	return o
}

func (o LookupRouteAggregationResultOutput) ToLookupRouteAggregationResultOutputWithContext(ctx context.Context) LookupRouteAggregationResultOutput {
	return o
}

// Current state of latest Route Aggregation change
func (o LookupRouteAggregationResultOutput) Change() GetRouteAggregationChangeOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) GetRouteAggregationChange { return v.Change }).(GetRouteAggregationChangeOutput)
}

// Details of the last change on the route aggregation resource
func (o LookupRouteAggregationResultOutput) ChangeLog() GetRouteAggregationChangeLogOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) GetRouteAggregationChangeLog { return v.ChangeLog }).(GetRouteAggregationChangeLogOutput)
}

// Number of Connections attached to route aggregation
func (o LookupRouteAggregationResultOutput) ConnectionsCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) int { return v.ConnectionsCount }).(pulumi.IntOutput)
}

// Customer-provided route aggregation description
func (o LookupRouteAggregationResultOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Description }).(pulumi.StringOutput)
}

// Equinix auto generated URI to the route aggregation resource
func (o LookupRouteAggregationResultOutput) Href() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Href }).(pulumi.StringOutput)
}

// The unique identifier of the resource
func (o LookupRouteAggregationResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Id }).(pulumi.StringOutput)
}

// Customer provided name of the route aggregation
func (o LookupRouteAggregationResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Name }).(pulumi.StringOutput)
}

// Equinix Project attribute object
func (o LookupRouteAggregationResultOutput) Project() GetRouteAggregationProjectOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) GetRouteAggregationProject { return v.Project }).(GetRouteAggregationProjectOutput)
}

// The uuid of the route aggregation this data source should retrieve
func (o LookupRouteAggregationResultOutput) RouteAggregationId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.RouteAggregationId }).(pulumi.StringOutput)
}

// Number of Rules attached to route aggregation
func (o LookupRouteAggregationResultOutput) RulesCount() pulumi.IntOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) int { return v.RulesCount }).(pulumi.IntOutput)
}

// Value representing provisioning status for the route aggregation resource
func (o LookupRouteAggregationResultOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.State }).(pulumi.StringOutput)
}

// Equinix defined Route Aggregation Type; BGP*IPv4*PREFIX*AGGREGATION, BGP*IPv6*PREFIX*AGGREGATION
func (o LookupRouteAggregationResultOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Type }).(pulumi.StringOutput)
}

// Equinix-assigned unique id for the route aggregation resource
func (o LookupRouteAggregationResultOutput) Uuid() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteAggregationResult) string { return v.Uuid }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteAggregationResultOutput{})
}
