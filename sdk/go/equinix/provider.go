// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package equinix

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// The provider type for the equinix package. By default, resources use package-wide configuration
// settings, however an explicit `Provider` instance may be created and passed during resource
// construction to achieve fine-grained programmatic control over provider settings. See the
// [documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.
type Provider struct {
	pulumi.ProviderResourceState

	// The Equinix Metal API auth key for API operations
	AuthToken pulumi.StringPtrOutput `pulumi:"authToken"`
	// API Consumer Key available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTID` shell environment variable.
	ClientId pulumi.StringPtrOutput `pulumi:"clientId"`
	// API Consumer secret available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTSECRET` shell environment variable.
	ClientSecret pulumi.StringPtrOutput `pulumi:"clientSecret"`
	// The Equinix API base URL to point out desired environment. This argument can also be specified with the
	// `EQUINIX_API_ENDPOINT` shell environment variable. (Defaults to `https://api.equinix.com`)
	Endpoint pulumi.StringPtrOutput `pulumi:"endpoint"`
	// API tokens are generated from API Consumer clients using the [OAuth2
	// API](https://developer.equinix.com/dev-docs/fabric/getting-started/getting-access-token#request-access-and-refresh-tokens).
	// This argument can also be specified with the `EQUINIX_API_TOKEN` shell environment variable.
	Token pulumi.StringPtrOutput `pulumi:"token"`
}

// NewProvider registers a new resource with the given unique name, arguments, and options.
func NewProvider(ctx *pulumi.Context,
	name string, args *ProviderArgs, opts ...pulumi.ResourceOption) (*Provider, error) {
	if args == nil {
		args = &ProviderArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource Provider
	err := ctx.RegisterResource("pulumi:providers:equinix", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type providerArgs struct {
	// The Equinix Metal API auth key for API operations
	AuthToken *string `pulumi:"authToken"`
	// API Consumer Key available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTID` shell environment variable.
	ClientId *string `pulumi:"clientId"`
	// API Consumer secret available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTSECRET` shell environment variable.
	ClientSecret *string `pulumi:"clientSecret"`
	// The Equinix API base URL to point out desired environment. This argument can also be specified with the
	// `EQUINIX_API_ENDPOINT` shell environment variable. (Defaults to `https://api.equinix.com`)
	Endpoint *string `pulumi:"endpoint"`
	// Maximum number of retries in case of network failure.
	MaxRetries *int `pulumi:"maxRetries"`
	// Maximum number of seconds to wait before retrying a request.
	MaxRetryWaitSeconds *int `pulumi:"maxRetryWaitSeconds"`
	// The duration of time, in seconds, that the Equinix Platform API Client should wait before canceling an API request.
	// Canceled requests may still result in provisioned resources. (Defaults to `30`)
	RequestTimeout *int `pulumi:"requestTimeout"`
	// The maximum number of records in a single response for REST queries that produce paginated responses. (Default is client
	// specific)
	ResponseMaxPageSize *int `pulumi:"responseMaxPageSize"`
	// API tokens are generated from API Consumer clients using the [OAuth2
	// API](https://developer.equinix.com/dev-docs/fabric/getting-started/getting-access-token#request-access-and-refresh-tokens).
	// This argument can also be specified with the `EQUINIX_API_TOKEN` shell environment variable.
	Token *string `pulumi:"token"`
}

// The set of arguments for constructing a Provider resource.
type ProviderArgs struct {
	// The Equinix Metal API auth key for API operations
	AuthToken pulumi.StringPtrInput
	// API Consumer Key available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTID` shell environment variable.
	ClientId pulumi.StringPtrInput
	// API Consumer secret available under "My Apps" in developer portal. This argument can also be specified with the
	// `EQUINIX_API_CLIENTSECRET` shell environment variable.
	ClientSecret pulumi.StringPtrInput
	// The Equinix API base URL to point out desired environment. This argument can also be specified with the
	// `EQUINIX_API_ENDPOINT` shell environment variable. (Defaults to `https://api.equinix.com`)
	Endpoint pulumi.StringPtrInput
	// Maximum number of retries in case of network failure.
	MaxRetries pulumi.IntPtrInput
	// Maximum number of seconds to wait before retrying a request.
	MaxRetryWaitSeconds pulumi.IntPtrInput
	// The duration of time, in seconds, that the Equinix Platform API Client should wait before canceling an API request.
	// Canceled requests may still result in provisioned resources. (Defaults to `30`)
	RequestTimeout pulumi.IntPtrInput
	// The maximum number of records in a single response for REST queries that produce paginated responses. (Default is client
	// specific)
	ResponseMaxPageSize pulumi.IntPtrInput
	// API tokens are generated from API Consumer clients using the [OAuth2
	// API](https://developer.equinix.com/dev-docs/fabric/getting-started/getting-access-token#request-access-and-refresh-tokens).
	// This argument can also be specified with the `EQUINIX_API_TOKEN` shell environment variable.
	Token pulumi.StringPtrInput
}

func (ProviderArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*providerArgs)(nil)).Elem()
}

type ProviderInput interface {
	pulumi.Input

	ToProviderOutput() ProviderOutput
	ToProviderOutputWithContext(ctx context.Context) ProviderOutput
}

func (*Provider) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (i *Provider) ToProviderOutput() ProviderOutput {
	return i.ToProviderOutputWithContext(context.Background())
}

func (i *Provider) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProviderOutput)
}

type ProviderOutput struct{ *pulumi.OutputState }

func (ProviderOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**Provider)(nil)).Elem()
}

func (o ProviderOutput) ToProviderOutput() ProviderOutput {
	return o
}

func (o ProviderOutput) ToProviderOutputWithContext(ctx context.Context) ProviderOutput {
	return o
}

// The Equinix Metal API auth key for API operations
func (o ProviderOutput) AuthToken() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.AuthToken }).(pulumi.StringPtrOutput)
}

// API Consumer Key available under "My Apps" in developer portal. This argument can also be specified with the
// `EQUINIX_API_CLIENTID` shell environment variable.
func (o ProviderOutput) ClientId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientId }).(pulumi.StringPtrOutput)
}

// API Consumer secret available under "My Apps" in developer portal. This argument can also be specified with the
// `EQUINIX_API_CLIENTSECRET` shell environment variable.
func (o ProviderOutput) ClientSecret() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.ClientSecret }).(pulumi.StringPtrOutput)
}

// The Equinix API base URL to point out desired environment. This argument can also be specified with the
// `EQUINIX_API_ENDPOINT` shell environment variable. (Defaults to `https://api.equinix.com`)
func (o ProviderOutput) Endpoint() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Endpoint }).(pulumi.StringPtrOutput)
}

// API tokens are generated from API Consumer clients using the [OAuth2
// API](https://developer.equinix.com/dev-docs/fabric/getting-started/getting-access-token#request-access-and-refresh-tokens).
// This argument can also be specified with the `EQUINIX_API_TOKEN` shell environment variable.
func (o ProviderOutput) Token() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *Provider) pulumi.StringPtrOutput { return v.Token }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ProviderInput)(nil)).Elem(), &Provider{})
	pulumi.RegisterOutputType(ProviderOutput{})
}
