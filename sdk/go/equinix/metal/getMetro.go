// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package metal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Provides an Equinix Metal metro datasource.
func GetMetro(ctx *pulumi.Context, args *GetMetroArgs, opts ...pulumi.InvokeOption) (*GetMetroResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv GetMetroResult
	err := ctx.Invoke("equinix:metal/getMetro:getMetro", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetro.
type GetMetroArgs struct {
	// One or more device plans for which the metro must have capacity.
	Capacities []GetMetroCapacity `pulumi:"capacities"`
	// The metro code to search for.
	Code string `pulumi:"code"`
}

// A collection of values returned by getMetro.
type GetMetroResult struct {
	Capacities []GetMetroCapacity `pulumi:"capacities"`
	Code       string             `pulumi:"code"`
	// The country of the metro.
	Country string `pulumi:"country"`
	// The ID of the metro.
	Id string `pulumi:"id"`
	// The name of the metro.
	Name string `pulumi:"name"`
}

func GetMetroOutput(ctx *pulumi.Context, args GetMetroOutputArgs, opts ...pulumi.InvokeOption) GetMetroResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetroResult, error) {
			args := v.(GetMetroArgs)
			r, err := GetMetro(ctx, &args, opts...)
			var s GetMetroResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetroResultOutput)
}

// A collection of arguments for invoking getMetro.
type GetMetroOutputArgs struct {
	// One or more device plans for which the metro must have capacity.
	Capacities GetMetroCapacityArrayInput `pulumi:"capacities"`
	// The metro code to search for.
	Code pulumi.StringInput `pulumi:"code"`
}

func (GetMetroOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetroArgs)(nil)).Elem()
}

// A collection of values returned by getMetro.
type GetMetroResultOutput struct{ *pulumi.OutputState }

func (GetMetroResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetroResult)(nil)).Elem()
}

func (o GetMetroResultOutput) ToGetMetroResultOutput() GetMetroResultOutput {
	return o
}

func (o GetMetroResultOutput) ToGetMetroResultOutputWithContext(ctx context.Context) GetMetroResultOutput {
	return o
}

func (o GetMetroResultOutput) Capacities() GetMetroCapacityArrayOutput {
	return o.ApplyT(func(v GetMetroResult) []GetMetroCapacity { return v.Capacities }).(GetMetroCapacityArrayOutput)
}

func (o GetMetroResultOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetroResult) string { return v.Code }).(pulumi.StringOutput)
}

// The country of the metro.
func (o GetMetroResultOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetroResult) string { return v.Country }).(pulumi.StringOutput)
}

// The ID of the metro.
func (o GetMetroResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetroResult) string { return v.Id }).(pulumi.StringOutput)
}

// The name of the metro.
func (o GetMetroResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetroResult) string { return v.Name }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetroResultOutput{})
}
