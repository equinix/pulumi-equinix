// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package metal

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type ConnectionPort struct {
	Id         *string `pulumi:"id"`
	LinkStatus *string `pulumi:"linkStatus"`
	// Name of the connection resource
	Name *string `pulumi:"name"`
	Role *string `pulumi:"role"`
	// Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
	Speed *int `pulumi:"speed"`
	// Status of the connection resource.
	Status            *string       `pulumi:"status"`
	VirtualCircuitIds []interface{} `pulumi:"virtualCircuitIds"`
}

// ConnectionPortInput is an input type that accepts ConnectionPortArgs and ConnectionPortOutput values.
// You can construct a concrete instance of `ConnectionPortInput` via:
//
//	ConnectionPortArgs{...}
type ConnectionPortInput interface {
	pulumi.Input

	ToConnectionPortOutput() ConnectionPortOutput
	ToConnectionPortOutputWithContext(context.Context) ConnectionPortOutput
}

type ConnectionPortArgs struct {
	Id         pulumi.StringPtrInput `pulumi:"id"`
	LinkStatus pulumi.StringPtrInput `pulumi:"linkStatus"`
	// Name of the connection resource
	Name pulumi.StringPtrInput `pulumi:"name"`
	Role pulumi.StringPtrInput `pulumi:"role"`
	// Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
	Speed pulumi.IntPtrInput `pulumi:"speed"`
	// Status of the connection resource.
	Status            pulumi.StringPtrInput `pulumi:"status"`
	VirtualCircuitIds pulumi.ArrayInput     `pulumi:"virtualCircuitIds"`
}

func (ConnectionPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPort)(nil)).Elem()
}

func (i ConnectionPortArgs) ToConnectionPortOutput() ConnectionPortOutput {
	return i.ToConnectionPortOutputWithContext(context.Background())
}

func (i ConnectionPortArgs) ToConnectionPortOutputWithContext(ctx context.Context) ConnectionPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPortOutput)
}

// ConnectionPortArrayInput is an input type that accepts ConnectionPortArray and ConnectionPortArrayOutput values.
// You can construct a concrete instance of `ConnectionPortArrayInput` via:
//
//	ConnectionPortArray{ ConnectionPortArgs{...} }
type ConnectionPortArrayInput interface {
	pulumi.Input

	ToConnectionPortArrayOutput() ConnectionPortArrayOutput
	ToConnectionPortArrayOutputWithContext(context.Context) ConnectionPortArrayOutput
}

type ConnectionPortArray []ConnectionPortInput

func (ConnectionPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionPort)(nil)).Elem()
}

func (i ConnectionPortArray) ToConnectionPortArrayOutput() ConnectionPortArrayOutput {
	return i.ToConnectionPortArrayOutputWithContext(context.Background())
}

func (i ConnectionPortArray) ToConnectionPortArrayOutputWithContext(ctx context.Context) ConnectionPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionPortArrayOutput)
}

type ConnectionPortOutput struct{ *pulumi.OutputState }

func (ConnectionPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionPort)(nil)).Elem()
}

func (o ConnectionPortOutput) ToConnectionPortOutput() ConnectionPortOutput {
	return o
}

func (o ConnectionPortOutput) ToConnectionPortOutputWithContext(ctx context.Context) ConnectionPortOutput {
	return o
}

func (o ConnectionPortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ConnectionPortOutput) LinkStatus() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *string { return v.LinkStatus }).(pulumi.StringPtrOutput)
}

// Name of the connection resource
func (o ConnectionPortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

func (o ConnectionPortOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *string { return v.Role }).(pulumi.StringPtrOutput)
}

// Connection speed - one of 50Mbps, 200Mbps, 500Mbps, 1Gbps, 2Gbps, 5Gbps, 10Gbps.
func (o ConnectionPortOutput) Speed() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *int { return v.Speed }).(pulumi.IntPtrOutput)
}

// Status of the connection resource.
func (o ConnectionPortOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionPort) *string { return v.Status }).(pulumi.StringPtrOutput)
}

func (o ConnectionPortOutput) VirtualCircuitIds() pulumi.ArrayOutput {
	return o.ApplyT(func(v ConnectionPort) []interface{} { return v.VirtualCircuitIds }).(pulumi.ArrayOutput)
}

type ConnectionPortArrayOutput struct{ *pulumi.OutputState }

func (ConnectionPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionPort)(nil)).Elem()
}

func (o ConnectionPortArrayOutput) ToConnectionPortArrayOutput() ConnectionPortArrayOutput {
	return o
}

func (o ConnectionPortArrayOutput) ToConnectionPortArrayOutputWithContext(ctx context.Context) ConnectionPortArrayOutput {
	return o
}

func (o ConnectionPortArrayOutput) Index(i pulumi.IntInput) ConnectionPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionPort {
		return vs[0].([]ConnectionPort)[vs[1].(int)]
	}).(ConnectionPortOutput)
}

type ConnectionServiceToken struct {
	ExpiresAt       *string `pulumi:"expiresAt"`
	Id              *string `pulumi:"id"`
	MaxAllowedSpeed *string `pulumi:"maxAllowedSpeed"`
	Role            *string `pulumi:"role"`
	State           *string `pulumi:"state"`
	// Connection type - dedicated or shared.
	Type *string `pulumi:"type"`
}

// ConnectionServiceTokenInput is an input type that accepts ConnectionServiceTokenArgs and ConnectionServiceTokenOutput values.
// You can construct a concrete instance of `ConnectionServiceTokenInput` via:
//
//	ConnectionServiceTokenArgs{...}
type ConnectionServiceTokenInput interface {
	pulumi.Input

	ToConnectionServiceTokenOutput() ConnectionServiceTokenOutput
	ToConnectionServiceTokenOutputWithContext(context.Context) ConnectionServiceTokenOutput
}

type ConnectionServiceTokenArgs struct {
	ExpiresAt       pulumi.StringPtrInput `pulumi:"expiresAt"`
	Id              pulumi.StringPtrInput `pulumi:"id"`
	MaxAllowedSpeed pulumi.StringPtrInput `pulumi:"maxAllowedSpeed"`
	Role            pulumi.StringPtrInput `pulumi:"role"`
	State           pulumi.StringPtrInput `pulumi:"state"`
	// Connection type - dedicated or shared.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (ConnectionServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionServiceToken)(nil)).Elem()
}

func (i ConnectionServiceTokenArgs) ToConnectionServiceTokenOutput() ConnectionServiceTokenOutput {
	return i.ToConnectionServiceTokenOutputWithContext(context.Background())
}

func (i ConnectionServiceTokenArgs) ToConnectionServiceTokenOutputWithContext(ctx context.Context) ConnectionServiceTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionServiceTokenOutput)
}

// ConnectionServiceTokenArrayInput is an input type that accepts ConnectionServiceTokenArray and ConnectionServiceTokenArrayOutput values.
// You can construct a concrete instance of `ConnectionServiceTokenArrayInput` via:
//
//	ConnectionServiceTokenArray{ ConnectionServiceTokenArgs{...} }
type ConnectionServiceTokenArrayInput interface {
	pulumi.Input

	ToConnectionServiceTokenArrayOutput() ConnectionServiceTokenArrayOutput
	ToConnectionServiceTokenArrayOutputWithContext(context.Context) ConnectionServiceTokenArrayOutput
}

type ConnectionServiceTokenArray []ConnectionServiceTokenInput

func (ConnectionServiceTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionServiceToken)(nil)).Elem()
}

func (i ConnectionServiceTokenArray) ToConnectionServiceTokenArrayOutput() ConnectionServiceTokenArrayOutput {
	return i.ToConnectionServiceTokenArrayOutputWithContext(context.Background())
}

func (i ConnectionServiceTokenArray) ToConnectionServiceTokenArrayOutputWithContext(ctx context.Context) ConnectionServiceTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ConnectionServiceTokenArrayOutput)
}

type ConnectionServiceTokenOutput struct{ *pulumi.OutputState }

func (ConnectionServiceTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ConnectionServiceToken)(nil)).Elem()
}

func (o ConnectionServiceTokenOutput) ToConnectionServiceTokenOutput() ConnectionServiceTokenOutput {
	return o
}

func (o ConnectionServiceTokenOutput) ToConnectionServiceTokenOutputWithContext(ctx context.Context) ConnectionServiceTokenOutput {
	return o
}

func (o ConnectionServiceTokenOutput) ExpiresAt() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.ExpiresAt }).(pulumi.StringPtrOutput)
}

func (o ConnectionServiceTokenOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o ConnectionServiceTokenOutput) MaxAllowedSpeed() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.MaxAllowedSpeed }).(pulumi.StringPtrOutput)
}

func (o ConnectionServiceTokenOutput) Role() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.Role }).(pulumi.StringPtrOutput)
}

func (o ConnectionServiceTokenOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Connection type - dedicated or shared.
func (o ConnectionServiceTokenOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ConnectionServiceToken) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type ConnectionServiceTokenArrayOutput struct{ *pulumi.OutputState }

func (ConnectionServiceTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ConnectionServiceToken)(nil)).Elem()
}

func (o ConnectionServiceTokenArrayOutput) ToConnectionServiceTokenArrayOutput() ConnectionServiceTokenArrayOutput {
	return o
}

func (o ConnectionServiceTokenArrayOutput) ToConnectionServiceTokenArrayOutputWithContext(ctx context.Context) ConnectionServiceTokenArrayOutput {
	return o
}

func (o ConnectionServiceTokenArrayOutput) Index(i pulumi.IntInput) ConnectionServiceTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ConnectionServiceToken {
		return vs[0].([]ConnectionServiceToken)[vs[1].(int)]
	}).(ConnectionServiceTokenOutput)
}

type DeviceBehavior struct {
	// List of attributes that are allowed to change without recreating the instance. Supported attributes: `customData`, `userData`"
	AllowChanges []string `pulumi:"allowChanges"`
}

// DeviceBehaviorInput is an input type that accepts DeviceBehaviorArgs and DeviceBehaviorOutput values.
// You can construct a concrete instance of `DeviceBehaviorInput` via:
//
//	DeviceBehaviorArgs{...}
type DeviceBehaviorInput interface {
	pulumi.Input

	ToDeviceBehaviorOutput() DeviceBehaviorOutput
	ToDeviceBehaviorOutputWithContext(context.Context) DeviceBehaviorOutput
}

type DeviceBehaviorArgs struct {
	// List of attributes that are allowed to change without recreating the instance. Supported attributes: `customData`, `userData`"
	AllowChanges pulumi.StringArrayInput `pulumi:"allowChanges"`
}

func (DeviceBehaviorArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceBehavior)(nil)).Elem()
}

func (i DeviceBehaviorArgs) ToDeviceBehaviorOutput() DeviceBehaviorOutput {
	return i.ToDeviceBehaviorOutputWithContext(context.Background())
}

func (i DeviceBehaviorArgs) ToDeviceBehaviorOutputWithContext(ctx context.Context) DeviceBehaviorOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceBehaviorOutput)
}

func (i DeviceBehaviorArgs) ToDeviceBehaviorPtrOutput() DeviceBehaviorPtrOutput {
	return i.ToDeviceBehaviorPtrOutputWithContext(context.Background())
}

func (i DeviceBehaviorArgs) ToDeviceBehaviorPtrOutputWithContext(ctx context.Context) DeviceBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceBehaviorOutput).ToDeviceBehaviorPtrOutputWithContext(ctx)
}

// DeviceBehaviorPtrInput is an input type that accepts DeviceBehaviorArgs, DeviceBehaviorPtr and DeviceBehaviorPtrOutput values.
// You can construct a concrete instance of `DeviceBehaviorPtrInput` via:
//
//	        DeviceBehaviorArgs{...}
//
//	or:
//
//	        nil
type DeviceBehaviorPtrInput interface {
	pulumi.Input

	ToDeviceBehaviorPtrOutput() DeviceBehaviorPtrOutput
	ToDeviceBehaviorPtrOutputWithContext(context.Context) DeviceBehaviorPtrOutput
}

type deviceBehaviorPtrType DeviceBehaviorArgs

func DeviceBehaviorPtr(v *DeviceBehaviorArgs) DeviceBehaviorPtrInput {
	return (*deviceBehaviorPtrType)(v)
}

func (*deviceBehaviorPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceBehavior)(nil)).Elem()
}

func (i *deviceBehaviorPtrType) ToDeviceBehaviorPtrOutput() DeviceBehaviorPtrOutput {
	return i.ToDeviceBehaviorPtrOutputWithContext(context.Background())
}

func (i *deviceBehaviorPtrType) ToDeviceBehaviorPtrOutputWithContext(ctx context.Context) DeviceBehaviorPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceBehaviorPtrOutput)
}

type DeviceBehaviorOutput struct{ *pulumi.OutputState }

func (DeviceBehaviorOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceBehavior)(nil)).Elem()
}

func (o DeviceBehaviorOutput) ToDeviceBehaviorOutput() DeviceBehaviorOutput {
	return o
}

func (o DeviceBehaviorOutput) ToDeviceBehaviorOutputWithContext(ctx context.Context) DeviceBehaviorOutput {
	return o
}

func (o DeviceBehaviorOutput) ToDeviceBehaviorPtrOutput() DeviceBehaviorPtrOutput {
	return o.ToDeviceBehaviorPtrOutputWithContext(context.Background())
}

func (o DeviceBehaviorOutput) ToDeviceBehaviorPtrOutputWithContext(ctx context.Context) DeviceBehaviorPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceBehavior) *DeviceBehavior {
		return &v
	}).(DeviceBehaviorPtrOutput)
}

// List of attributes that are allowed to change without recreating the instance. Supported attributes: `customData`, `userData`"
func (o DeviceBehaviorOutput) AllowChanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceBehavior) []string { return v.AllowChanges }).(pulumi.StringArrayOutput)
}

type DeviceBehaviorPtrOutput struct{ *pulumi.OutputState }

func (DeviceBehaviorPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceBehavior)(nil)).Elem()
}

func (o DeviceBehaviorPtrOutput) ToDeviceBehaviorPtrOutput() DeviceBehaviorPtrOutput {
	return o
}

func (o DeviceBehaviorPtrOutput) ToDeviceBehaviorPtrOutputWithContext(ctx context.Context) DeviceBehaviorPtrOutput {
	return o
}

func (o DeviceBehaviorPtrOutput) Elem() DeviceBehaviorOutput {
	return o.ApplyT(func(v *DeviceBehavior) DeviceBehavior {
		if v != nil {
			return *v
		}
		var ret DeviceBehavior
		return ret
	}).(DeviceBehaviorOutput)
}

// List of attributes that are allowed to change without recreating the instance. Supported attributes: `customData`, `userData`"
func (o DeviceBehaviorPtrOutput) AllowChanges() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DeviceBehavior) []string {
		if v == nil {
			return nil
		}
		return v.AllowChanges
	}).(pulumi.StringArrayOutput)
}

type DeviceIpAddress struct {
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr *int `pulumi:"cidr"`
	// List of UUIDs of IP block reservations
	// from which the public IPv4 address should be taken.
	ReservationIds []string `pulumi:"reservationIds"`
	// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
	Type string `pulumi:"type"`
}

// DeviceIpAddressInput is an input type that accepts DeviceIpAddressArgs and DeviceIpAddressOutput values.
// You can construct a concrete instance of `DeviceIpAddressInput` via:
//
//	DeviceIpAddressArgs{...}
type DeviceIpAddressInput interface {
	pulumi.Input

	ToDeviceIpAddressOutput() DeviceIpAddressOutput
	ToDeviceIpAddressOutputWithContext(context.Context) DeviceIpAddressOutput
}

type DeviceIpAddressArgs struct {
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr pulumi.IntPtrInput `pulumi:"cidr"`
	// List of UUIDs of IP block reservations
	// from which the public IPv4 address should be taken.
	ReservationIds pulumi.StringArrayInput `pulumi:"reservationIds"`
	// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (DeviceIpAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceIpAddress)(nil)).Elem()
}

func (i DeviceIpAddressArgs) ToDeviceIpAddressOutput() DeviceIpAddressOutput {
	return i.ToDeviceIpAddressOutputWithContext(context.Background())
}

func (i DeviceIpAddressArgs) ToDeviceIpAddressOutputWithContext(ctx context.Context) DeviceIpAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceIpAddressOutput)
}

// DeviceIpAddressArrayInput is an input type that accepts DeviceIpAddressArray and DeviceIpAddressArrayOutput values.
// You can construct a concrete instance of `DeviceIpAddressArrayInput` via:
//
//	DeviceIpAddressArray{ DeviceIpAddressArgs{...} }
type DeviceIpAddressArrayInput interface {
	pulumi.Input

	ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput
	ToDeviceIpAddressArrayOutputWithContext(context.Context) DeviceIpAddressArrayOutput
}

type DeviceIpAddressArray []DeviceIpAddressInput

func (DeviceIpAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceIpAddress)(nil)).Elem()
}

func (i DeviceIpAddressArray) ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput {
	return i.ToDeviceIpAddressArrayOutputWithContext(context.Background())
}

func (i DeviceIpAddressArray) ToDeviceIpAddressArrayOutputWithContext(ctx context.Context) DeviceIpAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceIpAddressArrayOutput)
}

type DeviceIpAddressOutput struct{ *pulumi.OutputState }

func (DeviceIpAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceIpAddress)(nil)).Elem()
}

func (o DeviceIpAddressOutput) ToDeviceIpAddressOutput() DeviceIpAddressOutput {
	return o
}

func (o DeviceIpAddressOutput) ToDeviceIpAddressOutputWithContext(ctx context.Context) DeviceIpAddressOutput {
	return o
}

// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
func (o DeviceIpAddressOutput) Cidr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceIpAddress) *int { return v.Cidr }).(pulumi.IntPtrOutput)
}

// List of UUIDs of IP block reservations
// from which the public IPv4 address should be taken.
func (o DeviceIpAddressOutput) ReservationIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v DeviceIpAddress) []string { return v.ReservationIds }).(pulumi.StringArrayOutput)
}

// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
func (o DeviceIpAddressOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v DeviceIpAddress) string { return v.Type }).(pulumi.StringOutput)
}

type DeviceIpAddressArrayOutput struct{ *pulumi.OutputState }

func (DeviceIpAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceIpAddress)(nil)).Elem()
}

func (o DeviceIpAddressArrayOutput) ToDeviceIpAddressArrayOutput() DeviceIpAddressArrayOutput {
	return o
}

func (o DeviceIpAddressArrayOutput) ToDeviceIpAddressArrayOutputWithContext(ctx context.Context) DeviceIpAddressArrayOutput {
	return o
}

func (o DeviceIpAddressArrayOutput) Index(i pulumi.IntInput) DeviceIpAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceIpAddress {
		return vs[0].([]DeviceIpAddress)[vs[1].(int)]
	}).(DeviceIpAddressOutput)
}

type DeviceNetwork struct {
	// IPv4 or IPv6 address string.
	Address *string `pulumi:"address"`
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr *int `pulumi:"cidr"`
	// IP version. One of `4`, `6`.
	Family *int `pulumi:"family"`
	// Address of router.
	Gateway *string `pulumi:"gateway"`
	// Whether the address is routable from the Internet.
	Public *bool `pulumi:"public"`
}

// DeviceNetworkInput is an input type that accepts DeviceNetworkArgs and DeviceNetworkOutput values.
// You can construct a concrete instance of `DeviceNetworkInput` via:
//
//	DeviceNetworkArgs{...}
type DeviceNetworkInput interface {
	pulumi.Input

	ToDeviceNetworkOutput() DeviceNetworkOutput
	ToDeviceNetworkOutputWithContext(context.Context) DeviceNetworkOutput
}

type DeviceNetworkArgs struct {
	// IPv4 or IPv6 address string.
	Address pulumi.StringPtrInput `pulumi:"address"`
	// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
	Cidr pulumi.IntPtrInput `pulumi:"cidr"`
	// IP version. One of `4`, `6`.
	Family pulumi.IntPtrInput `pulumi:"family"`
	// Address of router.
	Gateway pulumi.StringPtrInput `pulumi:"gateway"`
	// Whether the address is routable from the Internet.
	Public pulumi.BoolPtrInput `pulumi:"public"`
}

func (DeviceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceNetwork)(nil)).Elem()
}

func (i DeviceNetworkArgs) ToDeviceNetworkOutput() DeviceNetworkOutput {
	return i.ToDeviceNetworkOutputWithContext(context.Background())
}

func (i DeviceNetworkArgs) ToDeviceNetworkOutputWithContext(ctx context.Context) DeviceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceNetworkOutput)
}

// DeviceNetworkArrayInput is an input type that accepts DeviceNetworkArray and DeviceNetworkArrayOutput values.
// You can construct a concrete instance of `DeviceNetworkArrayInput` via:
//
//	DeviceNetworkArray{ DeviceNetworkArgs{...} }
type DeviceNetworkArrayInput interface {
	pulumi.Input

	ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput
	ToDeviceNetworkArrayOutputWithContext(context.Context) DeviceNetworkArrayOutput
}

type DeviceNetworkArray []DeviceNetworkInput

func (DeviceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceNetwork)(nil)).Elem()
}

func (i DeviceNetworkArray) ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput {
	return i.ToDeviceNetworkArrayOutputWithContext(context.Background())
}

func (i DeviceNetworkArray) ToDeviceNetworkArrayOutputWithContext(ctx context.Context) DeviceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceNetworkArrayOutput)
}

type DeviceNetworkOutput struct{ *pulumi.OutputState }

func (DeviceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceNetwork)(nil)).Elem()
}

func (o DeviceNetworkOutput) ToDeviceNetworkOutput() DeviceNetworkOutput {
	return o
}

func (o DeviceNetworkOutput) ToDeviceNetworkOutputWithContext(ctx context.Context) DeviceNetworkOutput {
	return o
}

// IPv4 or IPv6 address string.
func (o DeviceNetworkOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *string { return v.Address }).(pulumi.StringPtrOutput)
}

// CIDR suffix for IP address block to be assigned, i.e. amount of addresses.
func (o DeviceNetworkOutput) Cidr() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *int { return v.Cidr }).(pulumi.IntPtrOutput)
}

// IP version. One of `4`, `6`.
func (o DeviceNetworkOutput) Family() pulumi.IntPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *int { return v.Family }).(pulumi.IntPtrOutput)
}

// Address of router.
func (o DeviceNetworkOutput) Gateway() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *string { return v.Gateway }).(pulumi.StringPtrOutput)
}

// Whether the address is routable from the Internet.
func (o DeviceNetworkOutput) Public() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceNetwork) *bool { return v.Public }).(pulumi.BoolPtrOutput)
}

type DeviceNetworkArrayOutput struct{ *pulumi.OutputState }

func (DeviceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DeviceNetwork)(nil)).Elem()
}

func (o DeviceNetworkArrayOutput) ToDeviceNetworkArrayOutput() DeviceNetworkArrayOutput {
	return o
}

func (o DeviceNetworkArrayOutput) ToDeviceNetworkArrayOutputWithContext(ctx context.Context) DeviceNetworkArrayOutput {
	return o
}

func (o DeviceNetworkArrayOutput) Index(i pulumi.IntInput) DeviceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DeviceNetwork {
		return vs[0].([]DeviceNetwork)[vs[1].(int)]
	}).(DeviceNetworkOutput)
}

type DevicePort struct {
	// Whether this port is part of a bond in bonded network setup.
	Bonded *bool `pulumi:"bonded"`
	// ID of the port.
	Id *string `pulumi:"id"`
	// MAC address assigned to the port.
	Mac *string `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`).
	Name *string `pulumi:"name"`
	// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
	Type *string `pulumi:"type"`
}

// DevicePortInput is an input type that accepts DevicePortArgs and DevicePortOutput values.
// You can construct a concrete instance of `DevicePortInput` via:
//
//	DevicePortArgs{...}
type DevicePortInput interface {
	pulumi.Input

	ToDevicePortOutput() DevicePortOutput
	ToDevicePortOutputWithContext(context.Context) DevicePortOutput
}

type DevicePortArgs struct {
	// Whether this port is part of a bond in bonded network setup.
	Bonded pulumi.BoolPtrInput `pulumi:"bonded"`
	// ID of the port.
	Id pulumi.StringPtrInput `pulumi:"id"`
	// MAC address assigned to the port.
	Mac pulumi.StringPtrInput `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`).
	Name pulumi.StringPtrInput `pulumi:"name"`
	// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (DevicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePort)(nil)).Elem()
}

func (i DevicePortArgs) ToDevicePortOutput() DevicePortOutput {
	return i.ToDevicePortOutputWithContext(context.Background())
}

func (i DevicePortArgs) ToDevicePortOutputWithContext(ctx context.Context) DevicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePortOutput)
}

// DevicePortArrayInput is an input type that accepts DevicePortArray and DevicePortArrayOutput values.
// You can construct a concrete instance of `DevicePortArrayInput` via:
//
//	DevicePortArray{ DevicePortArgs{...} }
type DevicePortArrayInput interface {
	pulumi.Input

	ToDevicePortArrayOutput() DevicePortArrayOutput
	ToDevicePortArrayOutputWithContext(context.Context) DevicePortArrayOutput
}

type DevicePortArray []DevicePortInput

func (DevicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePort)(nil)).Elem()
}

func (i DevicePortArray) ToDevicePortArrayOutput() DevicePortArrayOutput {
	return i.ToDevicePortArrayOutputWithContext(context.Background())
}

func (i DevicePortArray) ToDevicePortArrayOutputWithContext(ctx context.Context) DevicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DevicePortArrayOutput)
}

type DevicePortOutput struct{ *pulumi.OutputState }

func (DevicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DevicePort)(nil)).Elem()
}

func (o DevicePortOutput) ToDevicePortOutput() DevicePortOutput {
	return o
}

func (o DevicePortOutput) ToDevicePortOutputWithContext(ctx context.Context) DevicePortOutput {
	return o
}

// Whether this port is part of a bond in bonded network setup.
func (o DevicePortOutput) Bonded() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DevicePort) *bool { return v.Bonded }).(pulumi.BoolPtrOutput)
}

// ID of the port.
func (o DevicePortOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Id }).(pulumi.StringPtrOutput)
}

// MAC address assigned to the port.
func (o DevicePortOutput) Mac() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Mac }).(pulumi.StringPtrOutput)
}

// Name of the port (e.g. `eth0`, or `bond0`).
func (o DevicePortOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// One of `privateIpv4`, `publicIpv4`, `publicIpv6`.
func (o DevicePortOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v DevicePort) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type DevicePortArrayOutput struct{ *pulumi.OutputState }

func (DevicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]DevicePort)(nil)).Elem()
}

func (o DevicePortArrayOutput) ToDevicePortArrayOutput() DevicePortArrayOutput {
	return o
}

func (o DevicePortArrayOutput) ToDevicePortArrayOutputWithContext(ctx context.Context) DevicePortArrayOutput {
	return o
}

func (o DevicePortArrayOutput) Index(i pulumi.IntInput) DevicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) DevicePort {
		return vs[0].([]DevicePort)[vs[1].(int)]
	}).(DevicePortOutput)
}

type DeviceReinstall struct {
	// Whether the OS disk should be filled with `00h` bytes before reinstall.
	// Defaults to `false`.
	DeprovisionFast *bool `pulumi:"deprovisionFast"`
	// Whether the provider should favour reinstall over destroy and create. Defaults to
	// `false`.
	Enabled *bool `pulumi:"enabled"`
	// Whether the non-OS disks should be kept or wiped during reinstall.
	// Defaults to `false`.
	PreserveData *bool `pulumi:"preserveData"`
}

// DeviceReinstallInput is an input type that accepts DeviceReinstallArgs and DeviceReinstallOutput values.
// You can construct a concrete instance of `DeviceReinstallInput` via:
//
//	DeviceReinstallArgs{...}
type DeviceReinstallInput interface {
	pulumi.Input

	ToDeviceReinstallOutput() DeviceReinstallOutput
	ToDeviceReinstallOutputWithContext(context.Context) DeviceReinstallOutput
}

type DeviceReinstallArgs struct {
	// Whether the OS disk should be filled with `00h` bytes before reinstall.
	// Defaults to `false`.
	DeprovisionFast pulumi.BoolPtrInput `pulumi:"deprovisionFast"`
	// Whether the provider should favour reinstall over destroy and create. Defaults to
	// `false`.
	Enabled pulumi.BoolPtrInput `pulumi:"enabled"`
	// Whether the non-OS disks should be kept or wiped during reinstall.
	// Defaults to `false`.
	PreserveData pulumi.BoolPtrInput `pulumi:"preserveData"`
}

func (DeviceReinstallArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceReinstall)(nil)).Elem()
}

func (i DeviceReinstallArgs) ToDeviceReinstallOutput() DeviceReinstallOutput {
	return i.ToDeviceReinstallOutputWithContext(context.Background())
}

func (i DeviceReinstallArgs) ToDeviceReinstallOutputWithContext(ctx context.Context) DeviceReinstallOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceReinstallOutput)
}

func (i DeviceReinstallArgs) ToDeviceReinstallPtrOutput() DeviceReinstallPtrOutput {
	return i.ToDeviceReinstallPtrOutputWithContext(context.Background())
}

func (i DeviceReinstallArgs) ToDeviceReinstallPtrOutputWithContext(ctx context.Context) DeviceReinstallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceReinstallOutput).ToDeviceReinstallPtrOutputWithContext(ctx)
}

// DeviceReinstallPtrInput is an input type that accepts DeviceReinstallArgs, DeviceReinstallPtr and DeviceReinstallPtrOutput values.
// You can construct a concrete instance of `DeviceReinstallPtrInput` via:
//
//	        DeviceReinstallArgs{...}
//
//	or:
//
//	        nil
type DeviceReinstallPtrInput interface {
	pulumi.Input

	ToDeviceReinstallPtrOutput() DeviceReinstallPtrOutput
	ToDeviceReinstallPtrOutputWithContext(context.Context) DeviceReinstallPtrOutput
}

type deviceReinstallPtrType DeviceReinstallArgs

func DeviceReinstallPtr(v *DeviceReinstallArgs) DeviceReinstallPtrInput {
	return (*deviceReinstallPtrType)(v)
}

func (*deviceReinstallPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceReinstall)(nil)).Elem()
}

func (i *deviceReinstallPtrType) ToDeviceReinstallPtrOutput() DeviceReinstallPtrOutput {
	return i.ToDeviceReinstallPtrOutputWithContext(context.Background())
}

func (i *deviceReinstallPtrType) ToDeviceReinstallPtrOutputWithContext(ctx context.Context) DeviceReinstallPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceReinstallPtrOutput)
}

type DeviceReinstallOutput struct{ *pulumi.OutputState }

func (DeviceReinstallOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*DeviceReinstall)(nil)).Elem()
}

func (o DeviceReinstallOutput) ToDeviceReinstallOutput() DeviceReinstallOutput {
	return o
}

func (o DeviceReinstallOutput) ToDeviceReinstallOutputWithContext(ctx context.Context) DeviceReinstallOutput {
	return o
}

func (o DeviceReinstallOutput) ToDeviceReinstallPtrOutput() DeviceReinstallPtrOutput {
	return o.ToDeviceReinstallPtrOutputWithContext(context.Background())
}

func (o DeviceReinstallOutput) ToDeviceReinstallPtrOutputWithContext(ctx context.Context) DeviceReinstallPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v DeviceReinstall) *DeviceReinstall {
		return &v
	}).(DeviceReinstallPtrOutput)
}

// Whether the OS disk should be filled with `00h` bytes before reinstall.
// Defaults to `false`.
func (o DeviceReinstallOutput) DeprovisionFast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceReinstall) *bool { return v.DeprovisionFast }).(pulumi.BoolPtrOutput)
}

// Whether the provider should favour reinstall over destroy and create. Defaults to
// `false`.
func (o DeviceReinstallOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceReinstall) *bool { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// Whether the non-OS disks should be kept or wiped during reinstall.
// Defaults to `false`.
func (o DeviceReinstallOutput) PreserveData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v DeviceReinstall) *bool { return v.PreserveData }).(pulumi.BoolPtrOutput)
}

type DeviceReinstallPtrOutput struct{ *pulumi.OutputState }

func (DeviceReinstallPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceReinstall)(nil)).Elem()
}

func (o DeviceReinstallPtrOutput) ToDeviceReinstallPtrOutput() DeviceReinstallPtrOutput {
	return o
}

func (o DeviceReinstallPtrOutput) ToDeviceReinstallPtrOutputWithContext(ctx context.Context) DeviceReinstallPtrOutput {
	return o
}

func (o DeviceReinstallPtrOutput) Elem() DeviceReinstallOutput {
	return o.ApplyT(func(v *DeviceReinstall) DeviceReinstall {
		if v != nil {
			return *v
		}
		var ret DeviceReinstall
		return ret
	}).(DeviceReinstallOutput)
}

// Whether the OS disk should be filled with `00h` bytes before reinstall.
// Defaults to `false`.
func (o DeviceReinstallPtrOutput) DeprovisionFast() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceReinstall) *bool {
		if v == nil {
			return nil
		}
		return v.DeprovisionFast
	}).(pulumi.BoolPtrOutput)
}

// Whether the provider should favour reinstall over destroy and create. Defaults to
// `false`.
func (o DeviceReinstallPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceReinstall) *bool {
		if v == nil {
			return nil
		}
		return v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Whether the non-OS disks should be kept or wiped during reinstall.
// Defaults to `false`.
func (o DeviceReinstallPtrOutput) PreserveData() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DeviceReinstall) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveData
	}).(pulumi.BoolPtrOutput)
}

type OrganizationAddress struct {
	// Postal address.
	Address string `pulumi:"address"`
	// City name.
	City string `pulumi:"city"`
	// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
	Country string `pulumi:"country"`
	// State name.
	State *string `pulumi:"state"`
	// Zip Code.
	ZipCode string `pulumi:"zipCode"`
}

// OrganizationAddressInput is an input type that accepts OrganizationAddressArgs and OrganizationAddressOutput values.
// You can construct a concrete instance of `OrganizationAddressInput` via:
//
//	OrganizationAddressArgs{...}
type OrganizationAddressInput interface {
	pulumi.Input

	ToOrganizationAddressOutput() OrganizationAddressOutput
	ToOrganizationAddressOutputWithContext(context.Context) OrganizationAddressOutput
}

type OrganizationAddressArgs struct {
	// Postal address.
	Address pulumi.StringInput `pulumi:"address"`
	// City name.
	City pulumi.StringInput `pulumi:"city"`
	// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
	Country pulumi.StringInput `pulumi:"country"`
	// State name.
	State pulumi.StringPtrInput `pulumi:"state"`
	// Zip Code.
	ZipCode pulumi.StringInput `pulumi:"zipCode"`
}

func (OrganizationAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAddress)(nil)).Elem()
}

func (i OrganizationAddressArgs) ToOrganizationAddressOutput() OrganizationAddressOutput {
	return i.ToOrganizationAddressOutputWithContext(context.Background())
}

func (i OrganizationAddressArgs) ToOrganizationAddressOutputWithContext(ctx context.Context) OrganizationAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAddressOutput)
}

func (i OrganizationAddressArgs) ToOrganizationAddressPtrOutput() OrganizationAddressPtrOutput {
	return i.ToOrganizationAddressPtrOutputWithContext(context.Background())
}

func (i OrganizationAddressArgs) ToOrganizationAddressPtrOutputWithContext(ctx context.Context) OrganizationAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAddressOutput).ToOrganizationAddressPtrOutputWithContext(ctx)
}

// OrganizationAddressPtrInput is an input type that accepts OrganizationAddressArgs, OrganizationAddressPtr and OrganizationAddressPtrOutput values.
// You can construct a concrete instance of `OrganizationAddressPtrInput` via:
//
//	        OrganizationAddressArgs{...}
//
//	or:
//
//	        nil
type OrganizationAddressPtrInput interface {
	pulumi.Input

	ToOrganizationAddressPtrOutput() OrganizationAddressPtrOutput
	ToOrganizationAddressPtrOutputWithContext(context.Context) OrganizationAddressPtrOutput
}

type organizationAddressPtrType OrganizationAddressArgs

func OrganizationAddressPtr(v *OrganizationAddressArgs) OrganizationAddressPtrInput {
	return (*organizationAddressPtrType)(v)
}

func (*organizationAddressPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationAddress)(nil)).Elem()
}

func (i *organizationAddressPtrType) ToOrganizationAddressPtrOutput() OrganizationAddressPtrOutput {
	return i.ToOrganizationAddressPtrOutputWithContext(context.Background())
}

func (i *organizationAddressPtrType) ToOrganizationAddressPtrOutputWithContext(ctx context.Context) OrganizationAddressPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrganizationAddressPtrOutput)
}

type OrganizationAddressOutput struct{ *pulumi.OutputState }

func (OrganizationAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrganizationAddress)(nil)).Elem()
}

func (o OrganizationAddressOutput) ToOrganizationAddressOutput() OrganizationAddressOutput {
	return o
}

func (o OrganizationAddressOutput) ToOrganizationAddressOutputWithContext(ctx context.Context) OrganizationAddressOutput {
	return o
}

func (o OrganizationAddressOutput) ToOrganizationAddressPtrOutput() OrganizationAddressPtrOutput {
	return o.ToOrganizationAddressPtrOutputWithContext(context.Background())
}

func (o OrganizationAddressOutput) ToOrganizationAddressPtrOutputWithContext(ctx context.Context) OrganizationAddressPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v OrganizationAddress) *OrganizationAddress {
		return &v
	}).(OrganizationAddressPtrOutput)
}

// Postal address.
func (o OrganizationAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAddress) string { return v.Address }).(pulumi.StringOutput)
}

// City name.
func (o OrganizationAddressOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAddress) string { return v.City }).(pulumi.StringOutput)
}

// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
func (o OrganizationAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAddress) string { return v.Country }).(pulumi.StringOutput)
}

// State name.
func (o OrganizationAddressOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrganizationAddress) *string { return v.State }).(pulumi.StringPtrOutput)
}

// Zip Code.
func (o OrganizationAddressOutput) ZipCode() pulumi.StringOutput {
	return o.ApplyT(func(v OrganizationAddress) string { return v.ZipCode }).(pulumi.StringOutput)
}

type OrganizationAddressPtrOutput struct{ *pulumi.OutputState }

func (OrganizationAddressPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OrganizationAddress)(nil)).Elem()
}

func (o OrganizationAddressPtrOutput) ToOrganizationAddressPtrOutput() OrganizationAddressPtrOutput {
	return o
}

func (o OrganizationAddressPtrOutput) ToOrganizationAddressPtrOutputWithContext(ctx context.Context) OrganizationAddressPtrOutput {
	return o
}

func (o OrganizationAddressPtrOutput) Elem() OrganizationAddressOutput {
	return o.ApplyT(func(v *OrganizationAddress) OrganizationAddress {
		if v != nil {
			return *v
		}
		var ret OrganizationAddress
		return ret
	}).(OrganizationAddressOutput)
}

// Postal address.
func (o OrganizationAddressPtrOutput) Address() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Address
	}).(pulumi.StringPtrOutput)
}

// City name.
func (o OrganizationAddressPtrOutput) City() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAddress) *string {
		if v == nil {
			return nil
		}
		return &v.City
	}).(pulumi.StringPtrOutput)
}

// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
func (o OrganizationAddressPtrOutput) Country() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAddress) *string {
		if v == nil {
			return nil
		}
		return &v.Country
	}).(pulumi.StringPtrOutput)
}

// State name.
func (o OrganizationAddressPtrOutput) State() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAddress) *string {
		if v == nil {
			return nil
		}
		return v.State
	}).(pulumi.StringPtrOutput)
}

// Zip Code.
func (o OrganizationAddressPtrOutput) ZipCode() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OrganizationAddress) *string {
		if v == nil {
			return nil
		}
		return &v.ZipCode
	}).(pulumi.StringPtrOutput)
}

type ProjectBgpConfig struct {
	// Autonomous System Number for local BGP deployment.
	Asn int `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the
	// `public` will need to be reviewed by Equinix Metal engineers.
	DeploymentType string `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server.
	MaxPrefix *int `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum).
	Md5 *string `pulumi:"md5"`
	// status of BGP configuration in the project.
	Status *string `pulumi:"status"`
}

// ProjectBgpConfigInput is an input type that accepts ProjectBgpConfigArgs and ProjectBgpConfigOutput values.
// You can construct a concrete instance of `ProjectBgpConfigInput` via:
//
//	ProjectBgpConfigArgs{...}
type ProjectBgpConfigInput interface {
	pulumi.Input

	ToProjectBgpConfigOutput() ProjectBgpConfigOutput
	ToProjectBgpConfigOutputWithContext(context.Context) ProjectBgpConfigOutput
}

type ProjectBgpConfigArgs struct {
	// Autonomous System Number for local BGP deployment.
	Asn pulumi.IntInput `pulumi:"asn"`
	// `private` or `public`, the `private` is likely to be usable immediately, the
	// `public` will need to be reviewed by Equinix Metal engineers.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server.
	MaxPrefix pulumi.IntPtrInput `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum).
	Md5 pulumi.StringPtrInput `pulumi:"md5"`
	// status of BGP configuration in the project.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (ProjectBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBgpConfig)(nil)).Elem()
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigOutput() ProjectBgpConfigOutput {
	return i.ToProjectBgpConfigOutputWithContext(context.Background())
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigOutputWithContext(ctx context.Context) ProjectBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigOutput)
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return i.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (i ProjectBgpConfigArgs) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigOutput).ToProjectBgpConfigPtrOutputWithContext(ctx)
}

// ProjectBgpConfigPtrInput is an input type that accepts ProjectBgpConfigArgs, ProjectBgpConfigPtr and ProjectBgpConfigPtrOutput values.
// You can construct a concrete instance of `ProjectBgpConfigPtrInput` via:
//
//	        ProjectBgpConfigArgs{...}
//
//	or:
//
//	        nil
type ProjectBgpConfigPtrInput interface {
	pulumi.Input

	ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput
	ToProjectBgpConfigPtrOutputWithContext(context.Context) ProjectBgpConfigPtrOutput
}

type projectBgpConfigPtrType ProjectBgpConfigArgs

func ProjectBgpConfigPtr(v *ProjectBgpConfigArgs) ProjectBgpConfigPtrInput {
	return (*projectBgpConfigPtrType)(v)
}

func (*projectBgpConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBgpConfig)(nil)).Elem()
}

func (i *projectBgpConfigPtrType) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return i.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (i *projectBgpConfigPtrType) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ProjectBgpConfigPtrOutput)
}

type ProjectBgpConfigOutput struct{ *pulumi.OutputState }

func (ProjectBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ProjectBgpConfig)(nil)).Elem()
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigOutput() ProjectBgpConfigOutput {
	return o
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigOutputWithContext(ctx context.Context) ProjectBgpConfigOutput {
	return o
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return o.ToProjectBgpConfigPtrOutputWithContext(context.Background())
}

func (o ProjectBgpConfigOutput) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ProjectBgpConfig) *ProjectBgpConfig {
		return &v
	}).(ProjectBgpConfigPtrOutput)
}

// Autonomous System Number for local BGP deployment.
func (o ProjectBgpConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v ProjectBgpConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// `private` or `public`, the `private` is likely to be usable immediately, the
// `public` will need to be reviewed by Equinix Metal engineers.
func (o ProjectBgpConfigOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v ProjectBgpConfig) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// The maximum number of route filters allowed per server.
func (o ProjectBgpConfigOutput) MaxPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *int { return v.MaxPrefix }).(pulumi.IntPtrOutput)
}

// Password for BGP session in plaintext (not a checksum).
func (o ProjectBgpConfigOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *string { return v.Md5 }).(pulumi.StringPtrOutput)
}

// status of BGP configuration in the project.
func (o ProjectBgpConfigOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ProjectBgpConfig) *string { return v.Status }).(pulumi.StringPtrOutput)
}

type ProjectBgpConfigPtrOutput struct{ *pulumi.OutputState }

func (ProjectBgpConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ProjectBgpConfig)(nil)).Elem()
}

func (o ProjectBgpConfigPtrOutput) ToProjectBgpConfigPtrOutput() ProjectBgpConfigPtrOutput {
	return o
}

func (o ProjectBgpConfigPtrOutput) ToProjectBgpConfigPtrOutputWithContext(ctx context.Context) ProjectBgpConfigPtrOutput {
	return o
}

func (o ProjectBgpConfigPtrOutput) Elem() ProjectBgpConfigOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) ProjectBgpConfig {
		if v != nil {
			return *v
		}
		var ret ProjectBgpConfig
		return ret
	}).(ProjectBgpConfigOutput)
}

// Autonomous System Number for local BGP deployment.
func (o ProjectBgpConfigPtrOutput) Asn() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *int {
		if v == nil {
			return nil
		}
		return &v.Asn
	}).(pulumi.IntPtrOutput)
}

// `private` or `public`, the `private` is likely to be usable immediately, the
// `public` will need to be reviewed by Equinix Metal engineers.
func (o ProjectBgpConfigPtrOutput) DeploymentType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return &v.DeploymentType
	}).(pulumi.StringPtrOutput)
}

// The maximum number of route filters allowed per server.
func (o ProjectBgpConfigPtrOutput) MaxPrefix() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *int {
		if v == nil {
			return nil
		}
		return v.MaxPrefix
	}).(pulumi.IntPtrOutput)
}

// Password for BGP session in plaintext (not a checksum).
func (o ProjectBgpConfigPtrOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Md5
	}).(pulumi.StringPtrOutput)
}

// status of BGP configuration in the project.
func (o ProjectBgpConfigPtrOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ProjectBgpConfig) *string {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.StringPtrOutput)
}

type SpotMarketRequestInstanceParameters struct {
	AlwaysPxe     *bool    `pulumi:"alwaysPxe"`
	BillingCycle  string   `pulumi:"billingCycle"`
	Customdata    *string  `pulumi:"customdata"`
	Description   *string  `pulumi:"description"`
	Features      []string `pulumi:"features"`
	Hostname      string   `pulumi:"hostname"`
	IpxeScriptUrl *string  `pulumi:"ipxeScriptUrl"`
	// Blocks deletion of the SpotMarketRequest device until the lock is disabled.
	Locked           *bool    `pulumi:"locked"`
	OperatingSystem  string   `pulumi:"operatingSystem"`
	Plan             string   `pulumi:"plan"`
	ProjectSshKeys   []string `pulumi:"projectSshKeys"`
	Tags             []string `pulumi:"tags"`
	TermintationTime *string  `pulumi:"termintationTime"`
	UserSshKeys      []string `pulumi:"userSshKeys"`
	Userdata         *string  `pulumi:"userdata"`
}

// SpotMarketRequestInstanceParametersInput is an input type that accepts SpotMarketRequestInstanceParametersArgs and SpotMarketRequestInstanceParametersOutput values.
// You can construct a concrete instance of `SpotMarketRequestInstanceParametersInput` via:
//
//	SpotMarketRequestInstanceParametersArgs{...}
type SpotMarketRequestInstanceParametersInput interface {
	pulumi.Input

	ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput
	ToSpotMarketRequestInstanceParametersOutputWithContext(context.Context) SpotMarketRequestInstanceParametersOutput
}

type SpotMarketRequestInstanceParametersArgs struct {
	AlwaysPxe     pulumi.BoolPtrInput     `pulumi:"alwaysPxe"`
	BillingCycle  pulumi.StringInput      `pulumi:"billingCycle"`
	Customdata    pulumi.StringPtrInput   `pulumi:"customdata"`
	Description   pulumi.StringPtrInput   `pulumi:"description"`
	Features      pulumi.StringArrayInput `pulumi:"features"`
	Hostname      pulumi.StringInput      `pulumi:"hostname"`
	IpxeScriptUrl pulumi.StringPtrInput   `pulumi:"ipxeScriptUrl"`
	// Blocks deletion of the SpotMarketRequest device until the lock is disabled.
	Locked           pulumi.BoolPtrInput     `pulumi:"locked"`
	OperatingSystem  pulumi.StringInput      `pulumi:"operatingSystem"`
	Plan             pulumi.StringInput      `pulumi:"plan"`
	ProjectSshKeys   pulumi.StringArrayInput `pulumi:"projectSshKeys"`
	Tags             pulumi.StringArrayInput `pulumi:"tags"`
	TermintationTime pulumi.StringPtrInput   `pulumi:"termintationTime"`
	UserSshKeys      pulumi.StringArrayInput `pulumi:"userSshKeys"`
	Userdata         pulumi.StringPtrInput   `pulumi:"userdata"`
}

func (SpotMarketRequestInstanceParametersArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput {
	return i.ToSpotMarketRequestInstanceParametersOutputWithContext(context.Background())
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersOutput)
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return i.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (i SpotMarketRequestInstanceParametersArgs) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersOutput).ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx)
}

// SpotMarketRequestInstanceParametersPtrInput is an input type that accepts SpotMarketRequestInstanceParametersArgs, SpotMarketRequestInstanceParametersPtr and SpotMarketRequestInstanceParametersPtrOutput values.
// You can construct a concrete instance of `SpotMarketRequestInstanceParametersPtrInput` via:
//
//	        SpotMarketRequestInstanceParametersArgs{...}
//
//	or:
//
//	        nil
type SpotMarketRequestInstanceParametersPtrInput interface {
	pulumi.Input

	ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput
	ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Context) SpotMarketRequestInstanceParametersPtrOutput
}

type spotMarketRequestInstanceParametersPtrType SpotMarketRequestInstanceParametersArgs

func SpotMarketRequestInstanceParametersPtr(v *SpotMarketRequestInstanceParametersArgs) SpotMarketRequestInstanceParametersPtrInput {
	return (*spotMarketRequestInstanceParametersPtrType)(v)
}

func (*spotMarketRequestInstanceParametersPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (i *spotMarketRequestInstanceParametersPtrType) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return i.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (i *spotMarketRequestInstanceParametersPtrType) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SpotMarketRequestInstanceParametersPtrOutput)
}

type SpotMarketRequestInstanceParametersOutput struct{ *pulumi.OutputState }

func (SpotMarketRequestInstanceParametersOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersOutput() SpotMarketRequestInstanceParametersOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return o.ToSpotMarketRequestInstanceParametersPtrOutputWithContext(context.Background())
}

func (o SpotMarketRequestInstanceParametersOutput) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v SpotMarketRequestInstanceParameters) *SpotMarketRequestInstanceParameters {
		return &v
	}).(SpotMarketRequestInstanceParametersPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) AlwaysPxe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *bool { return v.AlwaysPxe }).(pulumi.BoolPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) BillingCycle() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.BillingCycle }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Customdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Customdata }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.Features }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Hostname() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.Hostname }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) IpxeScriptUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.IpxeScriptUrl }).(pulumi.StringPtrOutput)
}

// Blocks deletion of the SpotMarketRequest device until the lock is disabled.
func (o SpotMarketRequestInstanceParametersOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *bool { return v.Locked }).(pulumi.BoolPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) OperatingSystem() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.OperatingSystem }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) string { return v.Plan }).(pulumi.StringOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) ProjectSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.ProjectSshKeys }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.Tags }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) TermintationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.TermintationTime }).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) UserSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) []string { return v.UserSshKeys }).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersOutput) Userdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SpotMarketRequestInstanceParameters) *string { return v.Userdata }).(pulumi.StringPtrOutput)
}

type SpotMarketRequestInstanceParametersPtrOutput struct{ *pulumi.OutputState }

func (SpotMarketRequestInstanceParametersPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**SpotMarketRequestInstanceParameters)(nil)).Elem()
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ToSpotMarketRequestInstanceParametersPtrOutput() SpotMarketRequestInstanceParametersPtrOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ToSpotMarketRequestInstanceParametersPtrOutputWithContext(ctx context.Context) SpotMarketRequestInstanceParametersPtrOutput {
	return o
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Elem() SpotMarketRequestInstanceParametersOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) SpotMarketRequestInstanceParameters {
		if v != nil {
			return *v
		}
		var ret SpotMarketRequestInstanceParameters
		return ret
	}).(SpotMarketRequestInstanceParametersOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) AlwaysPxe() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *bool {
		if v == nil {
			return nil
		}
		return v.AlwaysPxe
	}).(pulumi.BoolPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) BillingCycle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.BillingCycle
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Customdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Customdata
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Features() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.Features
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Hostname() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Hostname
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) IpxeScriptUrl() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.IpxeScriptUrl
	}).(pulumi.StringPtrOutput)
}

// Blocks deletion of the SpotMarketRequest device until the lock is disabled.
func (o SpotMarketRequestInstanceParametersPtrOutput) Locked() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *bool {
		if v == nil {
			return nil
		}
		return v.Locked
	}).(pulumi.BoolPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) OperatingSystem() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.OperatingSystem
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Plan() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return &v.Plan
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) ProjectSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.ProjectSshKeys
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Tags() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.Tags
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) TermintationTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.TermintationTime
	}).(pulumi.StringPtrOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) UserSshKeys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) []string {
		if v == nil {
			return nil
		}
		return v.UserSshKeys
	}).(pulumi.StringArrayOutput)
}

func (o SpotMarketRequestInstanceParametersPtrOutput) Userdata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *SpotMarketRequestInstanceParameters) *string {
		if v == nil {
			return nil
		}
		return v.Userdata
	}).(pulumi.StringPtrOutput)
}

type GetConnectionPort struct {
	// Port UUID.
	Id string `pulumi:"id"`
	// Port link status.
	LinkStatus string `pulumi:"linkStatus"`
	// Port name.
	Name string `pulumi:"name"`
	// Port role - primary or secondary.
	Role string `pulumi:"role"`
	// Port speed in bits per second.
	Speed int `pulumi:"speed"`
	// Port status.
	Status string `pulumi:"status"`
	// List of IDs of virtual cicruits attached to this port.
	VirtualCircuitIds []interface{} `pulumi:"virtualCircuitIds"`
}

// GetConnectionPortInput is an input type that accepts GetConnectionPortArgs and GetConnectionPortOutput values.
// You can construct a concrete instance of `GetConnectionPortInput` via:
//
//	GetConnectionPortArgs{...}
type GetConnectionPortInput interface {
	pulumi.Input

	ToGetConnectionPortOutput() GetConnectionPortOutput
	ToGetConnectionPortOutputWithContext(context.Context) GetConnectionPortOutput
}

type GetConnectionPortArgs struct {
	// Port UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// Port link status.
	LinkStatus pulumi.StringInput `pulumi:"linkStatus"`
	// Port name.
	Name pulumi.StringInput `pulumi:"name"`
	// Port role - primary or secondary.
	Role pulumi.StringInput `pulumi:"role"`
	// Port speed in bits per second.
	Speed pulumi.IntInput `pulumi:"speed"`
	// Port status.
	Status pulumi.StringInput `pulumi:"status"`
	// List of IDs of virtual cicruits attached to this port.
	VirtualCircuitIds pulumi.ArrayInput `pulumi:"virtualCircuitIds"`
}

func (GetConnectionPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionPort)(nil)).Elem()
}

func (i GetConnectionPortArgs) ToGetConnectionPortOutput() GetConnectionPortOutput {
	return i.ToGetConnectionPortOutputWithContext(context.Background())
}

func (i GetConnectionPortArgs) ToGetConnectionPortOutputWithContext(ctx context.Context) GetConnectionPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionPortOutput)
}

// GetConnectionPortArrayInput is an input type that accepts GetConnectionPortArray and GetConnectionPortArrayOutput values.
// You can construct a concrete instance of `GetConnectionPortArrayInput` via:
//
//	GetConnectionPortArray{ GetConnectionPortArgs{...} }
type GetConnectionPortArrayInput interface {
	pulumi.Input

	ToGetConnectionPortArrayOutput() GetConnectionPortArrayOutput
	ToGetConnectionPortArrayOutputWithContext(context.Context) GetConnectionPortArrayOutput
}

type GetConnectionPortArray []GetConnectionPortInput

func (GetConnectionPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionPort)(nil)).Elem()
}

func (i GetConnectionPortArray) ToGetConnectionPortArrayOutput() GetConnectionPortArrayOutput {
	return i.ToGetConnectionPortArrayOutputWithContext(context.Background())
}

func (i GetConnectionPortArray) ToGetConnectionPortArrayOutputWithContext(ctx context.Context) GetConnectionPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionPortArrayOutput)
}

type GetConnectionPortOutput struct{ *pulumi.OutputState }

func (GetConnectionPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionPort)(nil)).Elem()
}

func (o GetConnectionPortOutput) ToGetConnectionPortOutput() GetConnectionPortOutput {
	return o
}

func (o GetConnectionPortOutput) ToGetConnectionPortOutputWithContext(ctx context.Context) GetConnectionPortOutput {
	return o
}

// Port UUID.
func (o GetConnectionPortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionPort) string { return v.Id }).(pulumi.StringOutput)
}

// Port link status.
func (o GetConnectionPortOutput) LinkStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionPort) string { return v.LinkStatus }).(pulumi.StringOutput)
}

// Port name.
func (o GetConnectionPortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionPort) string { return v.Name }).(pulumi.StringOutput)
}

// Port role - primary or secondary.
func (o GetConnectionPortOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionPort) string { return v.Role }).(pulumi.StringOutput)
}

// Port speed in bits per second.
func (o GetConnectionPortOutput) Speed() pulumi.IntOutput {
	return o.ApplyT(func(v GetConnectionPort) int { return v.Speed }).(pulumi.IntOutput)
}

// Port status.
func (o GetConnectionPortOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionPort) string { return v.Status }).(pulumi.StringOutput)
}

// List of IDs of virtual cicruits attached to this port.
func (o GetConnectionPortOutput) VirtualCircuitIds() pulumi.ArrayOutput {
	return o.ApplyT(func(v GetConnectionPort) []interface{} { return v.VirtualCircuitIds }).(pulumi.ArrayOutput)
}

type GetConnectionPortArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionPort)(nil)).Elem()
}

func (o GetConnectionPortArrayOutput) ToGetConnectionPortArrayOutput() GetConnectionPortArrayOutput {
	return o
}

func (o GetConnectionPortArrayOutput) ToGetConnectionPortArrayOutputWithContext(ctx context.Context) GetConnectionPortArrayOutput {
	return o
}

func (o GetConnectionPortArrayOutput) Index(i pulumi.IntInput) GetConnectionPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionPort {
		return vs[0].([]GetConnectionPort)[vs[1].(int)]
	}).(GetConnectionPortOutput)
}

type GetConnectionServiceToken struct {
	// Expiration date of the service token.
	ExpiresAt string `pulumi:"expiresAt"`
	// Port UUID.
	Id string `pulumi:"id"`
	// Maximum allowed speed for the service token, string like in the `speed` attribute.
	MaxAllowedSpeed string `pulumi:"maxAllowedSpeed"`
	// Port role - primary or secondary.
	Role  string `pulumi:"role"`
	State string `pulumi:"state"`
	// Token type, `aSide` or `zSide`.
	Type string `pulumi:"type"`
}

// GetConnectionServiceTokenInput is an input type that accepts GetConnectionServiceTokenArgs and GetConnectionServiceTokenOutput values.
// You can construct a concrete instance of `GetConnectionServiceTokenInput` via:
//
//	GetConnectionServiceTokenArgs{...}
type GetConnectionServiceTokenInput interface {
	pulumi.Input

	ToGetConnectionServiceTokenOutput() GetConnectionServiceTokenOutput
	ToGetConnectionServiceTokenOutputWithContext(context.Context) GetConnectionServiceTokenOutput
}

type GetConnectionServiceTokenArgs struct {
	// Expiration date of the service token.
	ExpiresAt pulumi.StringInput `pulumi:"expiresAt"`
	// Port UUID.
	Id pulumi.StringInput `pulumi:"id"`
	// Maximum allowed speed for the service token, string like in the `speed` attribute.
	MaxAllowedSpeed pulumi.StringInput `pulumi:"maxAllowedSpeed"`
	// Port role - primary or secondary.
	Role  pulumi.StringInput `pulumi:"role"`
	State pulumi.StringInput `pulumi:"state"`
	// Token type, `aSide` or `zSide`.
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetConnectionServiceTokenArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionServiceToken)(nil)).Elem()
}

func (i GetConnectionServiceTokenArgs) ToGetConnectionServiceTokenOutput() GetConnectionServiceTokenOutput {
	return i.ToGetConnectionServiceTokenOutputWithContext(context.Background())
}

func (i GetConnectionServiceTokenArgs) ToGetConnectionServiceTokenOutputWithContext(ctx context.Context) GetConnectionServiceTokenOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionServiceTokenOutput)
}

// GetConnectionServiceTokenArrayInput is an input type that accepts GetConnectionServiceTokenArray and GetConnectionServiceTokenArrayOutput values.
// You can construct a concrete instance of `GetConnectionServiceTokenArrayInput` via:
//
//	GetConnectionServiceTokenArray{ GetConnectionServiceTokenArgs{...} }
type GetConnectionServiceTokenArrayInput interface {
	pulumi.Input

	ToGetConnectionServiceTokenArrayOutput() GetConnectionServiceTokenArrayOutput
	ToGetConnectionServiceTokenArrayOutputWithContext(context.Context) GetConnectionServiceTokenArrayOutput
}

type GetConnectionServiceTokenArray []GetConnectionServiceTokenInput

func (GetConnectionServiceTokenArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionServiceToken)(nil)).Elem()
}

func (i GetConnectionServiceTokenArray) ToGetConnectionServiceTokenArrayOutput() GetConnectionServiceTokenArrayOutput {
	return i.ToGetConnectionServiceTokenArrayOutputWithContext(context.Background())
}

func (i GetConnectionServiceTokenArray) ToGetConnectionServiceTokenArrayOutputWithContext(ctx context.Context) GetConnectionServiceTokenArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetConnectionServiceTokenArrayOutput)
}

type GetConnectionServiceTokenOutput struct{ *pulumi.OutputState }

func (GetConnectionServiceTokenOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetConnectionServiceToken)(nil)).Elem()
}

func (o GetConnectionServiceTokenOutput) ToGetConnectionServiceTokenOutput() GetConnectionServiceTokenOutput {
	return o
}

func (o GetConnectionServiceTokenOutput) ToGetConnectionServiceTokenOutputWithContext(ctx context.Context) GetConnectionServiceTokenOutput {
	return o
}

// Expiration date of the service token.
func (o GetConnectionServiceTokenOutput) ExpiresAt() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.ExpiresAt }).(pulumi.StringOutput)
}

// Port UUID.
func (o GetConnectionServiceTokenOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.Id }).(pulumi.StringOutput)
}

// Maximum allowed speed for the service token, string like in the `speed` attribute.
func (o GetConnectionServiceTokenOutput) MaxAllowedSpeed() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.MaxAllowedSpeed }).(pulumi.StringOutput)
}

// Port role - primary or secondary.
func (o GetConnectionServiceTokenOutput) Role() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.Role }).(pulumi.StringOutput)
}

func (o GetConnectionServiceTokenOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.State }).(pulumi.StringOutput)
}

// Token type, `aSide` or `zSide`.
func (o GetConnectionServiceTokenOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetConnectionServiceToken) string { return v.Type }).(pulumi.StringOutput)
}

type GetConnectionServiceTokenArrayOutput struct{ *pulumi.OutputState }

func (GetConnectionServiceTokenArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetConnectionServiceToken)(nil)).Elem()
}

func (o GetConnectionServiceTokenArrayOutput) ToGetConnectionServiceTokenArrayOutput() GetConnectionServiceTokenArrayOutput {
	return o
}

func (o GetConnectionServiceTokenArrayOutput) ToGetConnectionServiceTokenArrayOutputWithContext(ctx context.Context) GetConnectionServiceTokenArrayOutput {
	return o
}

func (o GetConnectionServiceTokenArrayOutput) Index(i pulumi.IntInput) GetConnectionServiceTokenOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetConnectionServiceToken {
		return vs[0].([]GetConnectionServiceToken)[vs[1].(int)]
	}).(GetConnectionServiceTokenOutput)
}

type GetDeviceBgpNeighborsBgpNeighbor struct {
	// IP address version, 4 or 6.
	AddressFamily int `pulumi:"addressFamily"`
	// Local autonomous system number.
	CustomerAs int `pulumi:"customerAs"`
	// Local used peer IP address.
	CustomerIp string `pulumi:"customerIp"`
	// Whether BGP session is password enabled.
	Md5Enabled bool `pulumi:"md5Enabled"`
	// BGP session password in plaintext (not a checksum).
	Md5Password string `pulumi:"md5Password"`
	// Whether the neighbor is in EBGP multihop session.
	Multihop bool `pulumi:"multihop"`
	// Peer AS number (different than customerAs for EBGP).
	PeerAs int `pulumi:"peerAs"`
	// Array of IP addresses of this neighbor's peers.
	PeerIps []string `pulumi:"peerIps"`
	// Array of incoming routes.
	RoutesIns []GetDeviceBgpNeighborsBgpNeighborRoutesIn `pulumi:"routesIns"`
	// Array of outgoing routes in the same format.
	RoutesOuts []GetDeviceBgpNeighborsBgpNeighborRoutesOut `pulumi:"routesOuts"`
}

// GetDeviceBgpNeighborsBgpNeighborInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborArgs and GetDeviceBgpNeighborsBgpNeighborOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborArgs{...}
type GetDeviceBgpNeighborsBgpNeighborInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborOutput() GetDeviceBgpNeighborsBgpNeighborOutput
	ToGetDeviceBgpNeighborsBgpNeighborOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborOutput
}

type GetDeviceBgpNeighborsBgpNeighborArgs struct {
	// IP address version, 4 or 6.
	AddressFamily pulumi.IntInput `pulumi:"addressFamily"`
	// Local autonomous system number.
	CustomerAs pulumi.IntInput `pulumi:"customerAs"`
	// Local used peer IP address.
	CustomerIp pulumi.StringInput `pulumi:"customerIp"`
	// Whether BGP session is password enabled.
	Md5Enabled pulumi.BoolInput `pulumi:"md5Enabled"`
	// BGP session password in plaintext (not a checksum).
	Md5Password pulumi.StringInput `pulumi:"md5Password"`
	// Whether the neighbor is in EBGP multihop session.
	Multihop pulumi.BoolInput `pulumi:"multihop"`
	// Peer AS number (different than customerAs for EBGP).
	PeerAs pulumi.IntInput `pulumi:"peerAs"`
	// Array of IP addresses of this neighbor's peers.
	PeerIps pulumi.StringArrayInput `pulumi:"peerIps"`
	// Array of incoming routes.
	RoutesIns GetDeviceBgpNeighborsBgpNeighborRoutesInArrayInput `pulumi:"routesIns"`
	// Array of outgoing routes in the same format.
	RoutesOuts GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayInput `pulumi:"routesOuts"`
}

func (GetDeviceBgpNeighborsBgpNeighborArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighbor)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborArgs) ToGetDeviceBgpNeighborsBgpNeighborOutput() GetDeviceBgpNeighborsBgpNeighborOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborArgs) ToGetDeviceBgpNeighborsBgpNeighborOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborOutput)
}

// GetDeviceBgpNeighborsBgpNeighborArrayInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborArray and GetDeviceBgpNeighborsBgpNeighborArrayOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborArrayInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborArray{ GetDeviceBgpNeighborsBgpNeighborArgs{...} }
type GetDeviceBgpNeighborsBgpNeighborArrayInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborArrayOutput() GetDeviceBgpNeighborsBgpNeighborArrayOutput
	ToGetDeviceBgpNeighborsBgpNeighborArrayOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborArrayOutput
}

type GetDeviceBgpNeighborsBgpNeighborArray []GetDeviceBgpNeighborsBgpNeighborInput

func (GetDeviceBgpNeighborsBgpNeighborArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighbor)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborArray) ToGetDeviceBgpNeighborsBgpNeighborArrayOutput() GetDeviceBgpNeighborsBgpNeighborArrayOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborArrayOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborArray) ToGetDeviceBgpNeighborsBgpNeighborArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborArrayOutput)
}

type GetDeviceBgpNeighborsBgpNeighborOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighbor)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborOutput) ToGetDeviceBgpNeighborsBgpNeighborOutput() GetDeviceBgpNeighborsBgpNeighborOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborOutput) ToGetDeviceBgpNeighborsBgpNeighborOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborOutput {
	return o
}

// IP address version, 4 or 6.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) AddressFamily() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) int { return v.AddressFamily }).(pulumi.IntOutput)
}

// Local autonomous system number.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) CustomerAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) int { return v.CustomerAs }).(pulumi.IntOutput)
}

// Local used peer IP address.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) CustomerIp() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) string { return v.CustomerIp }).(pulumi.StringOutput)
}

// Whether BGP session is password enabled.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) Md5Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) bool { return v.Md5Enabled }).(pulumi.BoolOutput)
}

// BGP session password in plaintext (not a checksum).
func (o GetDeviceBgpNeighborsBgpNeighborOutput) Md5Password() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) string { return v.Md5Password }).(pulumi.StringOutput)
}

// Whether the neighbor is in EBGP multihop session.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) Multihop() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) bool { return v.Multihop }).(pulumi.BoolOutput)
}

// Peer AS number (different than customerAs for EBGP).
func (o GetDeviceBgpNeighborsBgpNeighborOutput) PeerAs() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) int { return v.PeerAs }).(pulumi.IntOutput)
}

// Array of IP addresses of this neighbor's peers.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) PeerIps() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) []string { return v.PeerIps }).(pulumi.StringArrayOutput)
}

// Array of incoming routes.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) RoutesIns() GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) []GetDeviceBgpNeighborsBgpNeighborRoutesIn {
		return v.RoutesIns
	}).(GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput)
}

// Array of outgoing routes in the same format.
func (o GetDeviceBgpNeighborsBgpNeighborOutput) RoutesOuts() GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighbor) []GetDeviceBgpNeighborsBgpNeighborRoutesOut {
		return v.RoutesOuts
	}).(GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput)
}

type GetDeviceBgpNeighborsBgpNeighborArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighbor)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborArrayOutput() GetDeviceBgpNeighborsBgpNeighborArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborArrayOutput) Index(i pulumi.IntInput) GetDeviceBgpNeighborsBgpNeighborOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceBgpNeighborsBgpNeighbor {
		return vs[0].([]GetDeviceBgpNeighborsBgpNeighbor)[vs[1].(int)]
	}).(GetDeviceBgpNeighborsBgpNeighborOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesIn struct {
	// (bool) Whether the route is exact.
	Exact bool `pulumi:"exact"`
	// CIDR expression of route (IP/mask).
	Route string `pulumi:"route"`
}

// GetDeviceBgpNeighborsBgpNeighborRoutesInInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborRoutesInArgs and GetDeviceBgpNeighborsBgpNeighborRoutesInOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborRoutesInInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborRoutesInArgs{...}
type GetDeviceBgpNeighborsBgpNeighborRoutesInInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInOutput
	ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInOutput
}

type GetDeviceBgpNeighborsBgpNeighborRoutesInArgs struct {
	// (bool) Whether the route is exact.
	Exact pulumi.BoolInput `pulumi:"exact"`
	// CIDR expression of route (IP/mask).
	Route pulumi.StringInput `pulumi:"route"`
}

func (GetDeviceBgpNeighborsBgpNeighborRoutesInArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesIn)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesInArgs) ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesInArgs) ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborRoutesInOutput)
}

// GetDeviceBgpNeighborsBgpNeighborRoutesInArrayInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborRoutesInArray and GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborRoutesInArrayInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborRoutesInArray{ GetDeviceBgpNeighborsBgpNeighborRoutesInArgs{...} }
type GetDeviceBgpNeighborsBgpNeighborRoutesInArrayInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput
	ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput
}

type GetDeviceBgpNeighborsBgpNeighborRoutesInArray []GetDeviceBgpNeighborsBgpNeighborRoutesInInput

func (GetDeviceBgpNeighborsBgpNeighborRoutesInArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighborRoutesIn)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesInArray) ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesInArray) ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesInOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborRoutesInOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesIn)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesInOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesInOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesInOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInOutput {
	return o
}

// (bool) Whether the route is exact.
func (o GetDeviceBgpNeighborsBgpNeighborRoutesInOutput) Exact() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighborRoutesIn) bool { return v.Exact }).(pulumi.BoolOutput)
}

// CIDR expression of route (IP/mask).
func (o GetDeviceBgpNeighborsBgpNeighborRoutesInOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighborRoutesIn) string { return v.Route }).(pulumi.StringOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighborRoutesIn)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput) Index(i pulumi.IntInput) GetDeviceBgpNeighborsBgpNeighborRoutesInOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceBgpNeighborsBgpNeighborRoutesIn {
		return vs[0].([]GetDeviceBgpNeighborsBgpNeighborRoutesIn)[vs[1].(int)]
	}).(GetDeviceBgpNeighborsBgpNeighborRoutesInOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesOut struct {
	// (bool) Whether the route is exact.
	Exact bool `pulumi:"exact"`
	// CIDR expression of route (IP/mask).
	Route string `pulumi:"route"`
}

// GetDeviceBgpNeighborsBgpNeighborRoutesOutInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs and GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborRoutesOutInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs{...}
type GetDeviceBgpNeighborsBgpNeighborRoutesOutInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput
	ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput
}

type GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs struct {
	// (bool) Whether the route is exact.
	Exact pulumi.BoolInput `pulumi:"exact"`
	// CIDR expression of route (IP/mask).
	Route pulumi.StringInput `pulumi:"route"`
}

func (GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesOut)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput)
}

// GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayInput is an input type that accepts GetDeviceBgpNeighborsBgpNeighborRoutesOutArray and GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput values.
// You can construct a concrete instance of `GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayInput` via:
//
//	GetDeviceBgpNeighborsBgpNeighborRoutesOutArray{ GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs{...} }
type GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayInput interface {
	pulumi.Input

	ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput
	ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutputWithContext(context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput
}

type GetDeviceBgpNeighborsBgpNeighborRoutesOutArray []GetDeviceBgpNeighborsBgpNeighborRoutesOutInput

func (GetDeviceBgpNeighborsBgpNeighborRoutesOutArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighborRoutesOut)(nil)).Elem()
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesOutArray) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput {
	return i.ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutputWithContext(context.Background())
}

func (i GetDeviceBgpNeighborsBgpNeighborRoutesOutArray) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesOut)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput {
	return o
}

// (bool) Whether the route is exact.
func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput) Exact() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighborRoutesOut) bool { return v.Exact }).(pulumi.BoolOutput)
}

// CIDR expression of route (IP/mask).
func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput) Route() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceBgpNeighborsBgpNeighborRoutesOut) string { return v.Route }).(pulumi.StringOutput)
}

type GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceBgpNeighborsBgpNeighborRoutesOut)(nil)).Elem()
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput() GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput) ToGetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutputWithContext(ctx context.Context) GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput {
	return o
}

func (o GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput) Index(i pulumi.IntInput) GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceBgpNeighborsBgpNeighborRoutesOut {
		return vs[0].([]GetDeviceBgpNeighborsBgpNeighborRoutesOut)[vs[1].(int)]
	}).(GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput)
}

type GetDeviceNetwork struct {
	// IPv4 or IPv6 address string.
	Address string `pulumi:"address"`
	// Bit length of the network mask of the address.
	Cidr int `pulumi:"cidr"`
	// IP version. One of `4`, `6`.
	Family int `pulumi:"family"`
	// Address of router.
	Gateway string `pulumi:"gateway"`
	// Whether the address is routable from the Internet.
	Public bool `pulumi:"public"`
}

// GetDeviceNetworkInput is an input type that accepts GetDeviceNetworkArgs and GetDeviceNetworkOutput values.
// You can construct a concrete instance of `GetDeviceNetworkInput` via:
//
//	GetDeviceNetworkArgs{...}
type GetDeviceNetworkInput interface {
	pulumi.Input

	ToGetDeviceNetworkOutput() GetDeviceNetworkOutput
	ToGetDeviceNetworkOutputWithContext(context.Context) GetDeviceNetworkOutput
}

type GetDeviceNetworkArgs struct {
	// IPv4 or IPv6 address string.
	Address pulumi.StringInput `pulumi:"address"`
	// Bit length of the network mask of the address.
	Cidr pulumi.IntInput `pulumi:"cidr"`
	// IP version. One of `4`, `6`.
	Family pulumi.IntInput `pulumi:"family"`
	// Address of router.
	Gateway pulumi.StringInput `pulumi:"gateway"`
	// Whether the address is routable from the Internet.
	Public pulumi.BoolInput `pulumi:"public"`
}

func (GetDeviceNetworkArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceNetwork)(nil)).Elem()
}

func (i GetDeviceNetworkArgs) ToGetDeviceNetworkOutput() GetDeviceNetworkOutput {
	return i.ToGetDeviceNetworkOutputWithContext(context.Background())
}

func (i GetDeviceNetworkArgs) ToGetDeviceNetworkOutputWithContext(ctx context.Context) GetDeviceNetworkOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceNetworkOutput)
}

// GetDeviceNetworkArrayInput is an input type that accepts GetDeviceNetworkArray and GetDeviceNetworkArrayOutput values.
// You can construct a concrete instance of `GetDeviceNetworkArrayInput` via:
//
//	GetDeviceNetworkArray{ GetDeviceNetworkArgs{...} }
type GetDeviceNetworkArrayInput interface {
	pulumi.Input

	ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput
	ToGetDeviceNetworkArrayOutputWithContext(context.Context) GetDeviceNetworkArrayOutput
}

type GetDeviceNetworkArray []GetDeviceNetworkInput

func (GetDeviceNetworkArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceNetwork)(nil)).Elem()
}

func (i GetDeviceNetworkArray) ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput {
	return i.ToGetDeviceNetworkArrayOutputWithContext(context.Background())
}

func (i GetDeviceNetworkArray) ToGetDeviceNetworkArrayOutputWithContext(ctx context.Context) GetDeviceNetworkArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDeviceNetworkArrayOutput)
}

type GetDeviceNetworkOutput struct{ *pulumi.OutputState }

func (GetDeviceNetworkOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDeviceNetwork)(nil)).Elem()
}

func (o GetDeviceNetworkOutput) ToGetDeviceNetworkOutput() GetDeviceNetworkOutput {
	return o
}

func (o GetDeviceNetworkOutput) ToGetDeviceNetworkOutputWithContext(ctx context.Context) GetDeviceNetworkOutput {
	return o
}

// IPv4 or IPv6 address string.
func (o GetDeviceNetworkOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceNetwork) string { return v.Address }).(pulumi.StringOutput)
}

// Bit length of the network mask of the address.
func (o GetDeviceNetworkOutput) Cidr() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceNetwork) int { return v.Cidr }).(pulumi.IntOutput)
}

// IP version. One of `4`, `6`.
func (o GetDeviceNetworkOutput) Family() pulumi.IntOutput {
	return o.ApplyT(func(v GetDeviceNetwork) int { return v.Family }).(pulumi.IntOutput)
}

// Address of router.
func (o GetDeviceNetworkOutput) Gateway() pulumi.StringOutput {
	return o.ApplyT(func(v GetDeviceNetwork) string { return v.Gateway }).(pulumi.StringOutput)
}

// Whether the address is routable from the Internet.
func (o GetDeviceNetworkOutput) Public() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDeviceNetwork) bool { return v.Public }).(pulumi.BoolOutput)
}

type GetDeviceNetworkArrayOutput struct{ *pulumi.OutputState }

func (GetDeviceNetworkArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDeviceNetwork)(nil)).Elem()
}

func (o GetDeviceNetworkArrayOutput) ToGetDeviceNetworkArrayOutput() GetDeviceNetworkArrayOutput {
	return o
}

func (o GetDeviceNetworkArrayOutput) ToGetDeviceNetworkArrayOutputWithContext(ctx context.Context) GetDeviceNetworkArrayOutput {
	return o
}

func (o GetDeviceNetworkArrayOutput) Index(i pulumi.IntInput) GetDeviceNetworkOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDeviceNetwork {
		return vs[0].([]GetDeviceNetwork)[vs[1].(int)]
	}).(GetDeviceNetworkOutput)
}

type GetDevicePort struct {
	// Whether this port is part of a bond in bonded network setup.
	Bonded bool `pulumi:"bonded"`
	// ID of the port.
	Id string `pulumi:"id"`
	// MAC address assigned to the port.
	Mac string `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`).
	Name string `pulumi:"name"`
	// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`).
	Type string `pulumi:"type"`
}

// GetDevicePortInput is an input type that accepts GetDevicePortArgs and GetDevicePortOutput values.
// You can construct a concrete instance of `GetDevicePortInput` via:
//
//	GetDevicePortArgs{...}
type GetDevicePortInput interface {
	pulumi.Input

	ToGetDevicePortOutput() GetDevicePortOutput
	ToGetDevicePortOutputWithContext(context.Context) GetDevicePortOutput
}

type GetDevicePortArgs struct {
	// Whether this port is part of a bond in bonded network setup.
	Bonded pulumi.BoolInput `pulumi:"bonded"`
	// ID of the port.
	Id pulumi.StringInput `pulumi:"id"`
	// MAC address assigned to the port.
	Mac pulumi.StringInput `pulumi:"mac"`
	// Name of the port (e.g. `eth0`, or `bond0`).
	Name pulumi.StringInput `pulumi:"name"`
	// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`).
	Type pulumi.StringInput `pulumi:"type"`
}

func (GetDevicePortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicePort)(nil)).Elem()
}

func (i GetDevicePortArgs) ToGetDevicePortOutput() GetDevicePortOutput {
	return i.ToGetDevicePortOutputWithContext(context.Background())
}

func (i GetDevicePortArgs) ToGetDevicePortOutputWithContext(ctx context.Context) GetDevicePortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicePortOutput)
}

// GetDevicePortArrayInput is an input type that accepts GetDevicePortArray and GetDevicePortArrayOutput values.
// You can construct a concrete instance of `GetDevicePortArrayInput` via:
//
//	GetDevicePortArray{ GetDevicePortArgs{...} }
type GetDevicePortArrayInput interface {
	pulumi.Input

	ToGetDevicePortArrayOutput() GetDevicePortArrayOutput
	ToGetDevicePortArrayOutputWithContext(context.Context) GetDevicePortArrayOutput
}

type GetDevicePortArray []GetDevicePortInput

func (GetDevicePortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicePort)(nil)).Elem()
}

func (i GetDevicePortArray) ToGetDevicePortArrayOutput() GetDevicePortArrayOutput {
	return i.ToGetDevicePortArrayOutputWithContext(context.Background())
}

func (i GetDevicePortArray) ToGetDevicePortArrayOutputWithContext(ctx context.Context) GetDevicePortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDevicePortArrayOutput)
}

type GetDevicePortOutput struct{ *pulumi.OutputState }

func (GetDevicePortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDevicePort)(nil)).Elem()
}

func (o GetDevicePortOutput) ToGetDevicePortOutput() GetDevicePortOutput {
	return o
}

func (o GetDevicePortOutput) ToGetDevicePortOutputWithContext(ctx context.Context) GetDevicePortOutput {
	return o
}

// Whether this port is part of a bond in bonded network setup.
func (o GetDevicePortOutput) Bonded() pulumi.BoolOutput {
	return o.ApplyT(func(v GetDevicePort) bool { return v.Bonded }).(pulumi.BoolOutput)
}

// ID of the port.
func (o GetDevicePortOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Id }).(pulumi.StringOutput)
}

// MAC address assigned to the port.
func (o GetDevicePortOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Mac }).(pulumi.StringOutput)
}

// Name of the port (e.g. `eth0`, or `bond0`).
func (o GetDevicePortOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Name }).(pulumi.StringOutput)
}

// Type of the port (e.g. `NetworkPort` or `NetworkBondPort`).
func (o GetDevicePortOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v GetDevicePort) string { return v.Type }).(pulumi.StringOutput)
}

type GetDevicePortArrayOutput struct{ *pulumi.OutputState }

func (GetDevicePortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDevicePort)(nil)).Elem()
}

func (o GetDevicePortArrayOutput) ToGetDevicePortArrayOutput() GetDevicePortArrayOutput {
	return o
}

func (o GetDevicePortArrayOutput) ToGetDevicePortArrayOutputWithContext(ctx context.Context) GetDevicePortArrayOutput {
	return o
}

func (o GetDevicePortArrayOutput) Index(i pulumi.IntInput) GetDevicePortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDevicePort {
		return vs[0].([]GetDevicePort)[vs[1].(int)]
	}).(GetDevicePortOutput)
}

type GetFacilityCapacity struct {
	// Device plan that must be available in selected location.
	Plan string `pulumi:"plan"`
	// Minimun number of devices that must be available in selected location.
	// Default is `1`.
	Quantity *int `pulumi:"quantity"`
}

// GetFacilityCapacityInput is an input type that accepts GetFacilityCapacityArgs and GetFacilityCapacityOutput values.
// You can construct a concrete instance of `GetFacilityCapacityInput` via:
//
//	GetFacilityCapacityArgs{...}
type GetFacilityCapacityInput interface {
	pulumi.Input

	ToGetFacilityCapacityOutput() GetFacilityCapacityOutput
	ToGetFacilityCapacityOutputWithContext(context.Context) GetFacilityCapacityOutput
}

type GetFacilityCapacityArgs struct {
	// Device plan that must be available in selected location.
	Plan pulumi.StringInput `pulumi:"plan"`
	// Minimun number of devices that must be available in selected location.
	// Default is `1`.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
}

func (GetFacilityCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFacilityCapacity)(nil)).Elem()
}

func (i GetFacilityCapacityArgs) ToGetFacilityCapacityOutput() GetFacilityCapacityOutput {
	return i.ToGetFacilityCapacityOutputWithContext(context.Background())
}

func (i GetFacilityCapacityArgs) ToGetFacilityCapacityOutputWithContext(ctx context.Context) GetFacilityCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFacilityCapacityOutput)
}

// GetFacilityCapacityArrayInput is an input type that accepts GetFacilityCapacityArray and GetFacilityCapacityArrayOutput values.
// You can construct a concrete instance of `GetFacilityCapacityArrayInput` via:
//
//	GetFacilityCapacityArray{ GetFacilityCapacityArgs{...} }
type GetFacilityCapacityArrayInput interface {
	pulumi.Input

	ToGetFacilityCapacityArrayOutput() GetFacilityCapacityArrayOutput
	ToGetFacilityCapacityArrayOutputWithContext(context.Context) GetFacilityCapacityArrayOutput
}

type GetFacilityCapacityArray []GetFacilityCapacityInput

func (GetFacilityCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFacilityCapacity)(nil)).Elem()
}

func (i GetFacilityCapacityArray) ToGetFacilityCapacityArrayOutput() GetFacilityCapacityArrayOutput {
	return i.ToGetFacilityCapacityArrayOutputWithContext(context.Background())
}

func (i GetFacilityCapacityArray) ToGetFacilityCapacityArrayOutputWithContext(ctx context.Context) GetFacilityCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFacilityCapacityArrayOutput)
}

type GetFacilityCapacityOutput struct{ *pulumi.OutputState }

func (GetFacilityCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFacilityCapacity)(nil)).Elem()
}

func (o GetFacilityCapacityOutput) ToGetFacilityCapacityOutput() GetFacilityCapacityOutput {
	return o
}

func (o GetFacilityCapacityOutput) ToGetFacilityCapacityOutputWithContext(ctx context.Context) GetFacilityCapacityOutput {
	return o
}

// Device plan that must be available in selected location.
func (o GetFacilityCapacityOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v GetFacilityCapacity) string { return v.Plan }).(pulumi.StringOutput)
}

// Minimun number of devices that must be available in selected location.
// Default is `1`.
func (o GetFacilityCapacityOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetFacilityCapacity) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type GetFacilityCapacityArrayOutput struct{ *pulumi.OutputState }

func (GetFacilityCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFacilityCapacity)(nil)).Elem()
}

func (o GetFacilityCapacityArrayOutput) ToGetFacilityCapacityArrayOutput() GetFacilityCapacityArrayOutput {
	return o
}

func (o GetFacilityCapacityArrayOutput) ToGetFacilityCapacityArrayOutputWithContext(ctx context.Context) GetFacilityCapacityArrayOutput {
	return o
}

func (o GetFacilityCapacityArrayOutput) Index(i pulumi.IntInput) GetFacilityCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFacilityCapacity {
		return vs[0].([]GetFacilityCapacity)[vs[1].(int)]
	}).(GetFacilityCapacityOutput)
}

type GetMetroCapacity struct {
	// Device plan that must be available in selected location.
	Plan string `pulumi:"plan"`
	// Minimun number of devices that must be available in selected location.
	// Default is `1`.
	Quantity *int `pulumi:"quantity"`
}

// GetMetroCapacityInput is an input type that accepts GetMetroCapacityArgs and GetMetroCapacityOutput values.
// You can construct a concrete instance of `GetMetroCapacityInput` via:
//
//	GetMetroCapacityArgs{...}
type GetMetroCapacityInput interface {
	pulumi.Input

	ToGetMetroCapacityOutput() GetMetroCapacityOutput
	ToGetMetroCapacityOutputWithContext(context.Context) GetMetroCapacityOutput
}

type GetMetroCapacityArgs struct {
	// Device plan that must be available in selected location.
	Plan pulumi.StringInput `pulumi:"plan"`
	// Minimun number of devices that must be available in selected location.
	// Default is `1`.
	Quantity pulumi.IntPtrInput `pulumi:"quantity"`
}

func (GetMetroCapacityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetroCapacity)(nil)).Elem()
}

func (i GetMetroCapacityArgs) ToGetMetroCapacityOutput() GetMetroCapacityOutput {
	return i.ToGetMetroCapacityOutputWithContext(context.Background())
}

func (i GetMetroCapacityArgs) ToGetMetroCapacityOutputWithContext(ctx context.Context) GetMetroCapacityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetroCapacityOutput)
}

// GetMetroCapacityArrayInput is an input type that accepts GetMetroCapacityArray and GetMetroCapacityArrayOutput values.
// You can construct a concrete instance of `GetMetroCapacityArrayInput` via:
//
//	GetMetroCapacityArray{ GetMetroCapacityArgs{...} }
type GetMetroCapacityArrayInput interface {
	pulumi.Input

	ToGetMetroCapacityArrayOutput() GetMetroCapacityArrayOutput
	ToGetMetroCapacityArrayOutputWithContext(context.Context) GetMetroCapacityArrayOutput
}

type GetMetroCapacityArray []GetMetroCapacityInput

func (GetMetroCapacityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetroCapacity)(nil)).Elem()
}

func (i GetMetroCapacityArray) ToGetMetroCapacityArrayOutput() GetMetroCapacityArrayOutput {
	return i.ToGetMetroCapacityArrayOutputWithContext(context.Background())
}

func (i GetMetroCapacityArray) ToGetMetroCapacityArrayOutputWithContext(ctx context.Context) GetMetroCapacityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMetroCapacityArrayOutput)
}

type GetMetroCapacityOutput struct{ *pulumi.OutputState }

func (GetMetroCapacityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetroCapacity)(nil)).Elem()
}

func (o GetMetroCapacityOutput) ToGetMetroCapacityOutput() GetMetroCapacityOutput {
	return o
}

func (o GetMetroCapacityOutput) ToGetMetroCapacityOutputWithContext(ctx context.Context) GetMetroCapacityOutput {
	return o
}

// Device plan that must be available in selected location.
func (o GetMetroCapacityOutput) Plan() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetroCapacity) string { return v.Plan }).(pulumi.StringOutput)
}

// Minimun number of devices that must be available in selected location.
// Default is `1`.
func (o GetMetroCapacityOutput) Quantity() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetMetroCapacity) *int { return v.Quantity }).(pulumi.IntPtrOutput)
}

type GetMetroCapacityArrayOutput struct{ *pulumi.OutputState }

func (GetMetroCapacityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMetroCapacity)(nil)).Elem()
}

func (o GetMetroCapacityArrayOutput) ToGetMetroCapacityArrayOutput() GetMetroCapacityArrayOutput {
	return o
}

func (o GetMetroCapacityArrayOutput) ToGetMetroCapacityArrayOutputWithContext(ctx context.Context) GetMetroCapacityArrayOutput {
	return o
}

func (o GetMetroCapacityArrayOutput) Index(i pulumi.IntInput) GetMetroCapacityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMetroCapacity {
		return vs[0].([]GetMetroCapacity)[vs[1].(int)]
	}).(GetMetroCapacityOutput)
}

type GetOrganizationAddress struct {
	// Postal address.
	Address string `pulumi:"address"`
	// City name.
	City string `pulumi:"city"`
	// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
	Country string `pulumi:"country"`
	// State name.
	State string `pulumi:"state"`
	// Zip Code.
	ZipCode string `pulumi:"zipCode"`
}

// GetOrganizationAddressInput is an input type that accepts GetOrganizationAddressArgs and GetOrganizationAddressOutput values.
// You can construct a concrete instance of `GetOrganizationAddressInput` via:
//
//	GetOrganizationAddressArgs{...}
type GetOrganizationAddressInput interface {
	pulumi.Input

	ToGetOrganizationAddressOutput() GetOrganizationAddressOutput
	ToGetOrganizationAddressOutputWithContext(context.Context) GetOrganizationAddressOutput
}

type GetOrganizationAddressArgs struct {
	// Postal address.
	Address pulumi.StringInput `pulumi:"address"`
	// City name.
	City pulumi.StringInput `pulumi:"city"`
	// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
	Country pulumi.StringInput `pulumi:"country"`
	// State name.
	State pulumi.StringInput `pulumi:"state"`
	// Zip Code.
	ZipCode pulumi.StringInput `pulumi:"zipCode"`
}

func (GetOrganizationAddressArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAddress)(nil)).Elem()
}

func (i GetOrganizationAddressArgs) ToGetOrganizationAddressOutput() GetOrganizationAddressOutput {
	return i.ToGetOrganizationAddressOutputWithContext(context.Background())
}

func (i GetOrganizationAddressArgs) ToGetOrganizationAddressOutputWithContext(ctx context.Context) GetOrganizationAddressOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAddressOutput)
}

// GetOrganizationAddressArrayInput is an input type that accepts GetOrganizationAddressArray and GetOrganizationAddressArrayOutput values.
// You can construct a concrete instance of `GetOrganizationAddressArrayInput` via:
//
//	GetOrganizationAddressArray{ GetOrganizationAddressArgs{...} }
type GetOrganizationAddressArrayInput interface {
	pulumi.Input

	ToGetOrganizationAddressArrayOutput() GetOrganizationAddressArrayOutput
	ToGetOrganizationAddressArrayOutputWithContext(context.Context) GetOrganizationAddressArrayOutput
}

type GetOrganizationAddressArray []GetOrganizationAddressInput

func (GetOrganizationAddressArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAddress)(nil)).Elem()
}

func (i GetOrganizationAddressArray) ToGetOrganizationAddressArrayOutput() GetOrganizationAddressArrayOutput {
	return i.ToGetOrganizationAddressArrayOutputWithContext(context.Background())
}

func (i GetOrganizationAddressArray) ToGetOrganizationAddressArrayOutputWithContext(ctx context.Context) GetOrganizationAddressArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrganizationAddressArrayOutput)
}

type GetOrganizationAddressOutput struct{ *pulumi.OutputState }

func (GetOrganizationAddressOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrganizationAddress)(nil)).Elem()
}

func (o GetOrganizationAddressOutput) ToGetOrganizationAddressOutput() GetOrganizationAddressOutput {
	return o
}

func (o GetOrganizationAddressOutput) ToGetOrganizationAddressOutputWithContext(ctx context.Context) GetOrganizationAddressOutput {
	return o
}

// Postal address.
func (o GetOrganizationAddressOutput) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAddress) string { return v.Address }).(pulumi.StringOutput)
}

// City name.
func (o GetOrganizationAddressOutput) City() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAddress) string { return v.City }).(pulumi.StringOutput)
}

// Two letter country code (ISO 3166-1 alpha-2), e.g. US.
func (o GetOrganizationAddressOutput) Country() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAddress) string { return v.Country }).(pulumi.StringOutput)
}

// State name.
func (o GetOrganizationAddressOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAddress) string { return v.State }).(pulumi.StringOutput)
}

// Zip Code.
func (o GetOrganizationAddressOutput) ZipCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrganizationAddress) string { return v.ZipCode }).(pulumi.StringOutput)
}

type GetOrganizationAddressArrayOutput struct{ *pulumi.OutputState }

func (GetOrganizationAddressArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrganizationAddress)(nil)).Elem()
}

func (o GetOrganizationAddressArrayOutput) ToGetOrganizationAddressArrayOutput() GetOrganizationAddressArrayOutput {
	return o
}

func (o GetOrganizationAddressArrayOutput) ToGetOrganizationAddressArrayOutputWithContext(ctx context.Context) GetOrganizationAddressArrayOutput {
	return o
}

func (o GetOrganizationAddressArrayOutput) Index(i pulumi.IntInput) GetOrganizationAddressOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrganizationAddress {
		return vs[0].([]GetOrganizationAddress)[vs[1].(int)]
	}).(GetOrganizationAddressOutput)
}

type GetPlansFilter struct {
	// If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values. Default is `false`.
	All *bool `pulumi:"all"`
	// The attribute used to filter. Filter attributes are case-sensitive
	Attribute string `pulumi:"attribute"`
	// The type of comparison to apply. One of: `in` , `re`, `substring`, `lessThan`, `lessThanOrEqual`, `greaterThan`, `greaterThanOrEqual`. Default is `in`.
	MatchBy *string `pulumi:"matchBy"`
	// The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
	Values []string `pulumi:"values"`
}

// GetPlansFilterInput is an input type that accepts GetPlansFilterArgs and GetPlansFilterOutput values.
// You can construct a concrete instance of `GetPlansFilterInput` via:
//
//	GetPlansFilterArgs{...}
type GetPlansFilterInput interface {
	pulumi.Input

	ToGetPlansFilterOutput() GetPlansFilterOutput
	ToGetPlansFilterOutputWithContext(context.Context) GetPlansFilterOutput
}

type GetPlansFilterArgs struct {
	// If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values. Default is `false`.
	All pulumi.BoolPtrInput `pulumi:"all"`
	// The attribute used to filter. Filter attributes are case-sensitive
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// The type of comparison to apply. One of: `in` , `re`, `substring`, `lessThan`, `lessThanOrEqual`, `greaterThan`, `greaterThanOrEqual`. Default is `in`.
	MatchBy pulumi.StringPtrInput `pulumi:"matchBy"`
	// The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
	Values pulumi.StringArrayInput `pulumi:"values"`
}

func (GetPlansFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansFilter)(nil)).Elem()
}

func (i GetPlansFilterArgs) ToGetPlansFilterOutput() GetPlansFilterOutput {
	return i.ToGetPlansFilterOutputWithContext(context.Background())
}

func (i GetPlansFilterArgs) ToGetPlansFilterOutputWithContext(ctx context.Context) GetPlansFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansFilterOutput)
}

// GetPlansFilterArrayInput is an input type that accepts GetPlansFilterArray and GetPlansFilterArrayOutput values.
// You can construct a concrete instance of `GetPlansFilterArrayInput` via:
//
//	GetPlansFilterArray{ GetPlansFilterArgs{...} }
type GetPlansFilterArrayInput interface {
	pulumi.Input

	ToGetPlansFilterArrayOutput() GetPlansFilterArrayOutput
	ToGetPlansFilterArrayOutputWithContext(context.Context) GetPlansFilterArrayOutput
}

type GetPlansFilterArray []GetPlansFilterInput

func (GetPlansFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansFilter)(nil)).Elem()
}

func (i GetPlansFilterArray) ToGetPlansFilterArrayOutput() GetPlansFilterArrayOutput {
	return i.ToGetPlansFilterArrayOutputWithContext(context.Background())
}

func (i GetPlansFilterArray) ToGetPlansFilterArrayOutputWithContext(ctx context.Context) GetPlansFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansFilterArrayOutput)
}

type GetPlansFilterOutput struct{ *pulumi.OutputState }

func (GetPlansFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansFilter)(nil)).Elem()
}

func (o GetPlansFilterOutput) ToGetPlansFilterOutput() GetPlansFilterOutput {
	return o
}

func (o GetPlansFilterOutput) ToGetPlansFilterOutputWithContext(ctx context.Context) GetPlansFilterOutput {
	return o
}

// If is set to true, the values are joined with an AND, and the requests returns only the results that match all specified values. Default is `false`.
func (o GetPlansFilterOutput) All() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetPlansFilter) *bool { return v.All }).(pulumi.BoolPtrOutput)
}

// The attribute used to filter. Filter attributes are case-sensitive
func (o GetPlansFilterOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansFilter) string { return v.Attribute }).(pulumi.StringOutput)
}

// The type of comparison to apply. One of: `in` , `re`, `substring`, `lessThan`, `lessThanOrEqual`, `greaterThan`, `greaterThanOrEqual`. Default is `in`.
func (o GetPlansFilterOutput) MatchBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlansFilter) *string { return v.MatchBy }).(pulumi.StringPtrOutput)
}

// The filter values. Filter values are case-sensitive. If you specify multiple values for a filter, the values are joined with an OR by default, and the request returns all results that match any of the specified values
func (o GetPlansFilterOutput) Values() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPlansFilter) []string { return v.Values }).(pulumi.StringArrayOutput)
}

type GetPlansFilterArrayOutput struct{ *pulumi.OutputState }

func (GetPlansFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansFilter)(nil)).Elem()
}

func (o GetPlansFilterArrayOutput) ToGetPlansFilterArrayOutput() GetPlansFilterArrayOutput {
	return o
}

func (o GetPlansFilterArrayOutput) ToGetPlansFilterArrayOutputWithContext(ctx context.Context) GetPlansFilterArrayOutput {
	return o
}

func (o GetPlansFilterArrayOutput) Index(i pulumi.IntInput) GetPlansFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPlansFilter {
		return vs[0].([]GetPlansFilter)[vs[1].(int)]
	}).(GetPlansFilterOutput)
}

type GetPlansPlan struct {
	// list of facilities where the plan is available
	AvailableInMetros []string `pulumi:"availableInMetros"`
	// list of facilities where the plan is available
	AvailableIns []string `pulumi:"availableIns"`
	// plan class
	Class string `pulumi:"class"`
	// list of deployment types, e.g. on_demand, spot_market
	DeploymentTypes []string `pulumi:"deploymentTypes"`
	// description of the plan
	Description string `pulumi:"description"`
	// id of the plan
	Id string `pulumi:"id"`
	// flag showing if it's a legacy plan
	Legacy bool `pulumi:"legacy"`
	// plan line, e.g. baremetal
	Line string `pulumi:"line"`
	// name of the plan
	Name string `pulumi:"name"`
	// plan hourly price
	PricingHour float64 `pulumi:"pricingHour"`
	// plan monthly price
	PricingMonth float64 `pulumi:"pricingMonth"`
	// plan slug
	Slug string `pulumi:"slug"`
}

// GetPlansPlanInput is an input type that accepts GetPlansPlanArgs and GetPlansPlanOutput values.
// You can construct a concrete instance of `GetPlansPlanInput` via:
//
//	GetPlansPlanArgs{...}
type GetPlansPlanInput interface {
	pulumi.Input

	ToGetPlansPlanOutput() GetPlansPlanOutput
	ToGetPlansPlanOutputWithContext(context.Context) GetPlansPlanOutput
}

type GetPlansPlanArgs struct {
	// list of facilities where the plan is available
	AvailableInMetros pulumi.StringArrayInput `pulumi:"availableInMetros"`
	// list of facilities where the plan is available
	AvailableIns pulumi.StringArrayInput `pulumi:"availableIns"`
	// plan class
	Class pulumi.StringInput `pulumi:"class"`
	// list of deployment types, e.g. on_demand, spot_market
	DeploymentTypes pulumi.StringArrayInput `pulumi:"deploymentTypes"`
	// description of the plan
	Description pulumi.StringInput `pulumi:"description"`
	// id of the plan
	Id pulumi.StringInput `pulumi:"id"`
	// flag showing if it's a legacy plan
	Legacy pulumi.BoolInput `pulumi:"legacy"`
	// plan line, e.g. baremetal
	Line pulumi.StringInput `pulumi:"line"`
	// name of the plan
	Name pulumi.StringInput `pulumi:"name"`
	// plan hourly price
	PricingHour pulumi.Float64Input `pulumi:"pricingHour"`
	// plan monthly price
	PricingMonth pulumi.Float64Input `pulumi:"pricingMonth"`
	// plan slug
	Slug pulumi.StringInput `pulumi:"slug"`
}

func (GetPlansPlanArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansPlan)(nil)).Elem()
}

func (i GetPlansPlanArgs) ToGetPlansPlanOutput() GetPlansPlanOutput {
	return i.ToGetPlansPlanOutputWithContext(context.Background())
}

func (i GetPlansPlanArgs) ToGetPlansPlanOutputWithContext(ctx context.Context) GetPlansPlanOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansPlanOutput)
}

// GetPlansPlanArrayInput is an input type that accepts GetPlansPlanArray and GetPlansPlanArrayOutput values.
// You can construct a concrete instance of `GetPlansPlanArrayInput` via:
//
//	GetPlansPlanArray{ GetPlansPlanArgs{...} }
type GetPlansPlanArrayInput interface {
	pulumi.Input

	ToGetPlansPlanArrayOutput() GetPlansPlanArrayOutput
	ToGetPlansPlanArrayOutputWithContext(context.Context) GetPlansPlanArrayOutput
}

type GetPlansPlanArray []GetPlansPlanInput

func (GetPlansPlanArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansPlan)(nil)).Elem()
}

func (i GetPlansPlanArray) ToGetPlansPlanArrayOutput() GetPlansPlanArrayOutput {
	return i.ToGetPlansPlanArrayOutputWithContext(context.Background())
}

func (i GetPlansPlanArray) ToGetPlansPlanArrayOutputWithContext(ctx context.Context) GetPlansPlanArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansPlanArrayOutput)
}

type GetPlansPlanOutput struct{ *pulumi.OutputState }

func (GetPlansPlanOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansPlan)(nil)).Elem()
}

func (o GetPlansPlanOutput) ToGetPlansPlanOutput() GetPlansPlanOutput {
	return o
}

func (o GetPlansPlanOutput) ToGetPlansPlanOutputWithContext(ctx context.Context) GetPlansPlanOutput {
	return o
}

// list of facilities where the plan is available
func (o GetPlansPlanOutput) AvailableInMetros() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPlansPlan) []string { return v.AvailableInMetros }).(pulumi.StringArrayOutput)
}

// list of facilities where the plan is available
func (o GetPlansPlanOutput) AvailableIns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPlansPlan) []string { return v.AvailableIns }).(pulumi.StringArrayOutput)
}

// plan class
func (o GetPlansPlanOutput) Class() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Class }).(pulumi.StringOutput)
}

// list of deployment types, e.g. on_demand, spot_market
func (o GetPlansPlanOutput) DeploymentTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetPlansPlan) []string { return v.DeploymentTypes }).(pulumi.StringArrayOutput)
}

// description of the plan
func (o GetPlansPlanOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Description }).(pulumi.StringOutput)
}

// id of the plan
func (o GetPlansPlanOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Id }).(pulumi.StringOutput)
}

// flag showing if it's a legacy plan
func (o GetPlansPlanOutput) Legacy() pulumi.BoolOutput {
	return o.ApplyT(func(v GetPlansPlan) bool { return v.Legacy }).(pulumi.BoolOutput)
}

// plan line, e.g. baremetal
func (o GetPlansPlanOutput) Line() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Line }).(pulumi.StringOutput)
}

// name of the plan
func (o GetPlansPlanOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Name }).(pulumi.StringOutput)
}

// plan hourly price
func (o GetPlansPlanOutput) PricingHour() pulumi.Float64Output {
	return o.ApplyT(func(v GetPlansPlan) float64 { return v.PricingHour }).(pulumi.Float64Output)
}

// plan monthly price
func (o GetPlansPlanOutput) PricingMonth() pulumi.Float64Output {
	return o.ApplyT(func(v GetPlansPlan) float64 { return v.PricingMonth }).(pulumi.Float64Output)
}

// plan slug
func (o GetPlansPlanOutput) Slug() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansPlan) string { return v.Slug }).(pulumi.StringOutput)
}

type GetPlansPlanArrayOutput struct{ *pulumi.OutputState }

func (GetPlansPlanArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansPlan)(nil)).Elem()
}

func (o GetPlansPlanArrayOutput) ToGetPlansPlanArrayOutput() GetPlansPlanArrayOutput {
	return o
}

func (o GetPlansPlanArrayOutput) ToGetPlansPlanArrayOutputWithContext(ctx context.Context) GetPlansPlanArrayOutput {
	return o
}

func (o GetPlansPlanArrayOutput) Index(i pulumi.IntInput) GetPlansPlanOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPlansPlan {
		return vs[0].([]GetPlansPlan)[vs[1].(int)]
	}).(GetPlansPlanOutput)
}

type GetPlansSort struct {
	// The attribute used to filter. Filter attributes are case-sensitive
	Attribute string `pulumi:"attribute"`
	// Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
	Direction *string `pulumi:"direction"`
}

// GetPlansSortInput is an input type that accepts GetPlansSortArgs and GetPlansSortOutput values.
// You can construct a concrete instance of `GetPlansSortInput` via:
//
//	GetPlansSortArgs{...}
type GetPlansSortInput interface {
	pulumi.Input

	ToGetPlansSortOutput() GetPlansSortOutput
	ToGetPlansSortOutputWithContext(context.Context) GetPlansSortOutput
}

type GetPlansSortArgs struct {
	// The attribute used to filter. Filter attributes are case-sensitive
	Attribute pulumi.StringInput `pulumi:"attribute"`
	// Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
	Direction pulumi.StringPtrInput `pulumi:"direction"`
}

func (GetPlansSortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansSort)(nil)).Elem()
}

func (i GetPlansSortArgs) ToGetPlansSortOutput() GetPlansSortOutput {
	return i.ToGetPlansSortOutputWithContext(context.Background())
}

func (i GetPlansSortArgs) ToGetPlansSortOutputWithContext(ctx context.Context) GetPlansSortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansSortOutput)
}

// GetPlansSortArrayInput is an input type that accepts GetPlansSortArray and GetPlansSortArrayOutput values.
// You can construct a concrete instance of `GetPlansSortArrayInput` via:
//
//	GetPlansSortArray{ GetPlansSortArgs{...} }
type GetPlansSortArrayInput interface {
	pulumi.Input

	ToGetPlansSortArrayOutput() GetPlansSortArrayOutput
	ToGetPlansSortArrayOutputWithContext(context.Context) GetPlansSortArrayOutput
}

type GetPlansSortArray []GetPlansSortInput

func (GetPlansSortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansSort)(nil)).Elem()
}

func (i GetPlansSortArray) ToGetPlansSortArrayOutput() GetPlansSortArrayOutput {
	return i.ToGetPlansSortArrayOutputWithContext(context.Background())
}

func (i GetPlansSortArray) ToGetPlansSortArrayOutputWithContext(ctx context.Context) GetPlansSortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPlansSortArrayOutput)
}

type GetPlansSortOutput struct{ *pulumi.OutputState }

func (GetPlansSortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansSort)(nil)).Elem()
}

func (o GetPlansSortOutput) ToGetPlansSortOutput() GetPlansSortOutput {
	return o
}

func (o GetPlansSortOutput) ToGetPlansSortOutputWithContext(ctx context.Context) GetPlansSortOutput {
	return o
}

// The attribute used to filter. Filter attributes are case-sensitive
func (o GetPlansSortOutput) Attribute() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansSort) string { return v.Attribute }).(pulumi.StringOutput)
}

// Sort results in ascending or descending order. Strings are sorted in alphabetical order. One of: asc, desc
func (o GetPlansSortOutput) Direction() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetPlansSort) *string { return v.Direction }).(pulumi.StringPtrOutput)
}

type GetPlansSortArrayOutput struct{ *pulumi.OutputState }

func (GetPlansSortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPlansSort)(nil)).Elem()
}

func (o GetPlansSortArrayOutput) ToGetPlansSortArrayOutput() GetPlansSortArrayOutput {
	return o
}

func (o GetPlansSortArrayOutput) ToGetPlansSortArrayOutputWithContext(ctx context.Context) GetPlansSortArrayOutput {
	return o
}

func (o GetPlansSortArrayOutput) Index(i pulumi.IntInput) GetPlansSortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPlansSort {
		return vs[0].([]GetPlansSort)[vs[1].(int)]
	}).(GetPlansSortOutput)
}

type GetProjectBgpConfig struct {
	// Autonomous System Number for local BGP deployment.
	Asn int `pulumi:"asn"`
	// One of `private`, `public`.
	DeploymentType string `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server.
	MaxPrefix int `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum).
	Md5 *string `pulumi:"md5"`
	// Status of BGP configuration in the project.
	Status string `pulumi:"status"`
}

// GetProjectBgpConfigInput is an input type that accepts GetProjectBgpConfigArgs and GetProjectBgpConfigOutput values.
// You can construct a concrete instance of `GetProjectBgpConfigInput` via:
//
//	GetProjectBgpConfigArgs{...}
type GetProjectBgpConfigInput interface {
	pulumi.Input

	ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput
	ToGetProjectBgpConfigOutputWithContext(context.Context) GetProjectBgpConfigOutput
}

type GetProjectBgpConfigArgs struct {
	// Autonomous System Number for local BGP deployment.
	Asn pulumi.IntInput `pulumi:"asn"`
	// One of `private`, `public`.
	DeploymentType pulumi.StringInput `pulumi:"deploymentType"`
	// The maximum number of route filters allowed per server.
	MaxPrefix pulumi.IntInput `pulumi:"maxPrefix"`
	// Password for BGP session in plaintext (not a checksum).
	Md5 pulumi.StringPtrInput `pulumi:"md5"`
	// Status of BGP configuration in the project.
	Status pulumi.StringInput `pulumi:"status"`
}

func (GetProjectBgpConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBgpConfig)(nil)).Elem()
}

func (i GetProjectBgpConfigArgs) ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput {
	return i.ToGetProjectBgpConfigOutputWithContext(context.Background())
}

func (i GetProjectBgpConfigArgs) ToGetProjectBgpConfigOutputWithContext(ctx context.Context) GetProjectBgpConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectBgpConfigOutput)
}

// GetProjectBgpConfigArrayInput is an input type that accepts GetProjectBgpConfigArray and GetProjectBgpConfigArrayOutput values.
// You can construct a concrete instance of `GetProjectBgpConfigArrayInput` via:
//
//	GetProjectBgpConfigArray{ GetProjectBgpConfigArgs{...} }
type GetProjectBgpConfigArrayInput interface {
	pulumi.Input

	ToGetProjectBgpConfigArrayOutput() GetProjectBgpConfigArrayOutput
	ToGetProjectBgpConfigArrayOutputWithContext(context.Context) GetProjectBgpConfigArrayOutput
}

type GetProjectBgpConfigArray []GetProjectBgpConfigInput

func (GetProjectBgpConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectBgpConfig)(nil)).Elem()
}

func (i GetProjectBgpConfigArray) ToGetProjectBgpConfigArrayOutput() GetProjectBgpConfigArrayOutput {
	return i.ToGetProjectBgpConfigArrayOutputWithContext(context.Background())
}

func (i GetProjectBgpConfigArray) ToGetProjectBgpConfigArrayOutputWithContext(ctx context.Context) GetProjectBgpConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetProjectBgpConfigArrayOutput)
}

type GetProjectBgpConfigOutput struct{ *pulumi.OutputState }

func (GetProjectBgpConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetProjectBgpConfig)(nil)).Elem()
}

func (o GetProjectBgpConfigOutput) ToGetProjectBgpConfigOutput() GetProjectBgpConfigOutput {
	return o
}

func (o GetProjectBgpConfigOutput) ToGetProjectBgpConfigOutputWithContext(ctx context.Context) GetProjectBgpConfigOutput {
	return o
}

// Autonomous System Number for local BGP deployment.
func (o GetProjectBgpConfigOutput) Asn() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) int { return v.Asn }).(pulumi.IntOutput)
}

// One of `private`, `public`.
func (o GetProjectBgpConfigOutput) DeploymentType() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) string { return v.DeploymentType }).(pulumi.StringOutput)
}

// The maximum number of route filters allowed per server.
func (o GetProjectBgpConfigOutput) MaxPrefix() pulumi.IntOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) int { return v.MaxPrefix }).(pulumi.IntOutput)
}

// Password for BGP session in plaintext (not a checksum).
func (o GetProjectBgpConfigOutput) Md5() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) *string { return v.Md5 }).(pulumi.StringPtrOutput)
}

// Status of BGP configuration in the project.
func (o GetProjectBgpConfigOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetProjectBgpConfig) string { return v.Status }).(pulumi.StringOutput)
}

type GetProjectBgpConfigArrayOutput struct{ *pulumi.OutputState }

func (GetProjectBgpConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetProjectBgpConfig)(nil)).Elem()
}

func (o GetProjectBgpConfigArrayOutput) ToGetProjectBgpConfigArrayOutput() GetProjectBgpConfigArrayOutput {
	return o
}

func (o GetProjectBgpConfigArrayOutput) ToGetProjectBgpConfigArrayOutputWithContext(ctx context.Context) GetProjectBgpConfigArrayOutput {
	return o
}

func (o GetProjectBgpConfigArrayOutput) Index(i pulumi.IntInput) GetProjectBgpConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetProjectBgpConfig {
		return vs[0].([]GetProjectBgpConfig)[vs[1].(int)]
	}).(GetProjectBgpConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionPortInput)(nil)).Elem(), ConnectionPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionPortArrayInput)(nil)).Elem(), ConnectionPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionServiceTokenInput)(nil)).Elem(), ConnectionServiceTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ConnectionServiceTokenArrayInput)(nil)).Elem(), ConnectionServiceTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceBehaviorInput)(nil)).Elem(), DeviceBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceBehaviorPtrInput)(nil)).Elem(), DeviceBehaviorArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceIpAddressInput)(nil)).Elem(), DeviceIpAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceIpAddressArrayInput)(nil)).Elem(), DeviceIpAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceNetworkInput)(nil)).Elem(), DeviceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceNetworkArrayInput)(nil)).Elem(), DeviceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePortInput)(nil)).Elem(), DevicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DevicePortArrayInput)(nil)).Elem(), DevicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceReinstallInput)(nil)).Elem(), DeviceReinstallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceReinstallPtrInput)(nil)).Elem(), DeviceReinstallArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAddressInput)(nil)).Elem(), OrganizationAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrganizationAddressPtrInput)(nil)).Elem(), OrganizationAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBgpConfigInput)(nil)).Elem(), ProjectBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ProjectBgpConfigPtrInput)(nil)).Elem(), ProjectBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotMarketRequestInstanceParametersInput)(nil)).Elem(), SpotMarketRequestInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SpotMarketRequestInstanceParametersPtrInput)(nil)).Elem(), SpotMarketRequestInstanceParametersArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionPortInput)(nil)).Elem(), GetConnectionPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionPortArrayInput)(nil)).Elem(), GetConnectionPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionServiceTokenInput)(nil)).Elem(), GetConnectionServiceTokenArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetConnectionServiceTokenArrayInput)(nil)).Elem(), GetConnectionServiceTokenArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborArrayInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesInInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborRoutesInArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesInArrayInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborRoutesInArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesOutInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborRoutesOutArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayInput)(nil)).Elem(), GetDeviceBgpNeighborsBgpNeighborRoutesOutArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceNetworkInput)(nil)).Elem(), GetDeviceNetworkArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDeviceNetworkArrayInput)(nil)).Elem(), GetDeviceNetworkArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicePortInput)(nil)).Elem(), GetDevicePortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDevicePortArrayInput)(nil)).Elem(), GetDevicePortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFacilityCapacityInput)(nil)).Elem(), GetFacilityCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFacilityCapacityArrayInput)(nil)).Elem(), GetFacilityCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetroCapacityInput)(nil)).Elem(), GetMetroCapacityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMetroCapacityArrayInput)(nil)).Elem(), GetMetroCapacityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationAddressInput)(nil)).Elem(), GetOrganizationAddressArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrganizationAddressArrayInput)(nil)).Elem(), GetOrganizationAddressArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansFilterInput)(nil)).Elem(), GetPlansFilterArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansFilterArrayInput)(nil)).Elem(), GetPlansFilterArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansPlanInput)(nil)).Elem(), GetPlansPlanArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansPlanArrayInput)(nil)).Elem(), GetPlansPlanArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansSortInput)(nil)).Elem(), GetPlansSortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPlansSortArrayInput)(nil)).Elem(), GetPlansSortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectBgpConfigInput)(nil)).Elem(), GetProjectBgpConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetProjectBgpConfigArrayInput)(nil)).Elem(), GetProjectBgpConfigArray{})
	pulumi.RegisterOutputType(ConnectionPortOutput{})
	pulumi.RegisterOutputType(ConnectionPortArrayOutput{})
	pulumi.RegisterOutputType(ConnectionServiceTokenOutput{})
	pulumi.RegisterOutputType(ConnectionServiceTokenArrayOutput{})
	pulumi.RegisterOutputType(DeviceBehaviorOutput{})
	pulumi.RegisterOutputType(DeviceBehaviorPtrOutput{})
	pulumi.RegisterOutputType(DeviceIpAddressOutput{})
	pulumi.RegisterOutputType(DeviceIpAddressArrayOutput{})
	pulumi.RegisterOutputType(DeviceNetworkOutput{})
	pulumi.RegisterOutputType(DeviceNetworkArrayOutput{})
	pulumi.RegisterOutputType(DevicePortOutput{})
	pulumi.RegisterOutputType(DevicePortArrayOutput{})
	pulumi.RegisterOutputType(DeviceReinstallOutput{})
	pulumi.RegisterOutputType(DeviceReinstallPtrOutput{})
	pulumi.RegisterOutputType(OrganizationAddressOutput{})
	pulumi.RegisterOutputType(OrganizationAddressPtrOutput{})
	pulumi.RegisterOutputType(ProjectBgpConfigOutput{})
	pulumi.RegisterOutputType(ProjectBgpConfigPtrOutput{})
	pulumi.RegisterOutputType(SpotMarketRequestInstanceParametersOutput{})
	pulumi.RegisterOutputType(SpotMarketRequestInstanceParametersPtrOutput{})
	pulumi.RegisterOutputType(GetConnectionPortOutput{})
	pulumi.RegisterOutputType(GetConnectionPortArrayOutput{})
	pulumi.RegisterOutputType(GetConnectionServiceTokenOutput{})
	pulumi.RegisterOutputType(GetConnectionServiceTokenArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborRoutesInOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborRoutesInArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborRoutesOutOutput{})
	pulumi.RegisterOutputType(GetDeviceBgpNeighborsBgpNeighborRoutesOutArrayOutput{})
	pulumi.RegisterOutputType(GetDeviceNetworkOutput{})
	pulumi.RegisterOutputType(GetDeviceNetworkArrayOutput{})
	pulumi.RegisterOutputType(GetDevicePortOutput{})
	pulumi.RegisterOutputType(GetDevicePortArrayOutput{})
	pulumi.RegisterOutputType(GetFacilityCapacityOutput{})
	pulumi.RegisterOutputType(GetFacilityCapacityArrayOutput{})
	pulumi.RegisterOutputType(GetMetroCapacityOutput{})
	pulumi.RegisterOutputType(GetMetroCapacityArrayOutput{})
	pulumi.RegisterOutputType(GetOrganizationAddressOutput{})
	pulumi.RegisterOutputType(GetOrganizationAddressArrayOutput{})
	pulumi.RegisterOutputType(GetPlansFilterOutput{})
	pulumi.RegisterOutputType(GetPlansFilterArrayOutput{})
	pulumi.RegisterOutputType(GetPlansPlanOutput{})
	pulumi.RegisterOutputType(GetPlansPlanArrayOutput{})
	pulumi.RegisterOutputType(GetPlansSortOutput{})
	pulumi.RegisterOutputType(GetPlansSortArrayOutput{})
	pulumi.RegisterOutputType(GetProjectBgpConfigOutput{})
	pulumi.RegisterOutputType(GetProjectBgpConfigArrayOutput{})
}
