// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package metal

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumix"
)

func GetPlans(ctx *pulumi.Context, args *GetPlansArgs, opts ...pulumi.InvokeOption) (*GetPlansResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetPlansResult
	err := ctx.Invoke("equinix:metal/getPlans:getPlans", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getPlans.
type GetPlansArgs struct {
	// One or more attribute/values pairs to filter off of
	Filters []GetPlansFilter `pulumi:"filters"`
	// One or more attribute/direction pairs on which to sort results. If multiple
	// sorts are provided, they will be applied in order
	Sorts []GetPlansSort `pulumi:"sorts"`
}

// A collection of values returned by getPlans.
type GetPlansResult struct {
	Filters []GetPlansFilter `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id    string         `pulumi:"id"`
	Plans []GetPlansPlan `pulumi:"plans"`
	Sorts []GetPlansSort `pulumi:"sorts"`
}

func GetPlansOutput(ctx *pulumi.Context, args GetPlansOutputArgs, opts ...pulumi.InvokeOption) GetPlansResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetPlansResult, error) {
			args := v.(GetPlansArgs)
			r, err := GetPlans(ctx, &args, opts...)
			var s GetPlansResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetPlansResultOutput)
}

// A collection of arguments for invoking getPlans.
type GetPlansOutputArgs struct {
	// One or more attribute/values pairs to filter off of
	Filters GetPlansFilterArrayInput `pulumi:"filters"`
	// One or more attribute/direction pairs on which to sort results. If multiple
	// sorts are provided, they will be applied in order
	Sorts GetPlansSortArrayInput `pulumi:"sorts"`
}

func (GetPlansOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansArgs)(nil)).Elem()
}

// A collection of values returned by getPlans.
type GetPlansResultOutput struct{ *pulumi.OutputState }

func (GetPlansResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPlansResult)(nil)).Elem()
}

func (o GetPlansResultOutput) ToGetPlansResultOutput() GetPlansResultOutput {
	return o
}

func (o GetPlansResultOutput) ToGetPlansResultOutputWithContext(ctx context.Context) GetPlansResultOutput {
	return o
}

func (o GetPlansResultOutput) ToOutput(ctx context.Context) pulumix.Output[GetPlansResult] {
	return pulumix.Output[GetPlansResult]{
		OutputState: o.OutputState,
	}
}

func (o GetPlansResultOutput) Filters() GetPlansFilterArrayOutput {
	return o.ApplyT(func(v GetPlansResult) []GetPlansFilter { return v.Filters }).(GetPlansFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetPlansResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetPlansResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetPlansResultOutput) Plans() GetPlansPlanArrayOutput {
	return o.ApplyT(func(v GetPlansResult) []GetPlansPlan { return v.Plans }).(GetPlansPlanArrayOutput)
}

func (o GetPlansResultOutput) Sorts() GetPlansSortArrayOutput {
	return o.ApplyT(func(v GetPlansResult) []GetPlansSort { return v.Sorts }).(GetPlansSortArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetPlansResultOutput{})
}
