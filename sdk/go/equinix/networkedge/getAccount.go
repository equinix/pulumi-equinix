// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package networkedge

import (
	"context"
	"reflect"

	"github.com/equinix/pulumi-equinix/sdk/go/equinix/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to get number and identifier of Equinix Network Edge billing account in a given metro location.
//
// Billing account reference is required to create Network Edge virtual device in corresponding metro location.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/equinix/pulumi-equinix/sdk/go/equinix/networkedge"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			dc, err := networkedge.GetAccount(ctx, &networkedge.GetAccountArgs{
//				MetroCode: "DC",
//				Status:    pulumi.StringRef("Active"),
//				ProjectId: pulumi.StringRef("a86d7112-d740-4758-9c9c-31e66373746b"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("number", dc.Number)
//			return nil
//		})
//	}
//
// ```
func GetAccount(ctx *pulumi.Context, args *GetAccountArgs, opts ...pulumi.InvokeOption) (*GetAccountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetAccountResult
	err := ctx.Invoke("equinix:networkedge/getAccount:getAccount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getAccount.
type GetAccountArgs struct {
	// Account location metro code.
	MetroCode string `pulumi:"metroCode"`
	// Account name for filtering.
	Name *string `pulumi:"name"`
	// Unique Identifier for the project resource where the account is scoped to.If you leave it out, all the billing accounts under all projects in your organization will be returned and it may return more than one account.
	ProjectId *string `pulumi:"projectId"`
	// Account status for filtering. Possible values are: `Active`, `Processing`, `Submitted`, `Staged`.
	Status *string `pulumi:"status"`
}

// A collection of values returned by getAccount.
type GetAccountResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id        string `pulumi:"id"`
	MetroCode string `pulumi:"metroCode"`
	Name      string `pulumi:"name"`
	// Account unique number.
	Number    string `pulumi:"number"`
	ProjectId string `pulumi:"projectId"`
	Status    string `pulumi:"status"`
	// Account unique identifier.
	UcmId string `pulumi:"ucmId"`
}

func GetAccountOutput(ctx *pulumi.Context, args GetAccountOutputArgs, opts ...pulumi.InvokeOption) GetAccountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetAccountResultOutput, error) {
			args := v.(GetAccountArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetAccountResult
			secret, err := ctx.InvokePackageRaw("equinix:networkedge/getAccount:getAccount", args, &rv, "", opts...)
			if err != nil {
				return GetAccountResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetAccountResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetAccountResultOutput), nil
			}
			return output, nil
		}).(GetAccountResultOutput)
}

// A collection of arguments for invoking getAccount.
type GetAccountOutputArgs struct {
	// Account location metro code.
	MetroCode pulumi.StringInput `pulumi:"metroCode"`
	// Account name for filtering.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// Unique Identifier for the project resource where the account is scoped to.If you leave it out, all the billing accounts under all projects in your organization will be returned and it may return more than one account.
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
	// Account status for filtering. Possible values are: `Active`, `Processing`, `Submitted`, `Staged`.
	Status pulumi.StringPtrInput `pulumi:"status"`
}

func (GetAccountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountArgs)(nil)).Elem()
}

// A collection of values returned by getAccount.
type GetAccountResultOutput struct{ *pulumi.OutputState }

func (GetAccountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAccountResult)(nil)).Elem()
}

func (o GetAccountResultOutput) ToGetAccountResultOutput() GetAccountResultOutput {
	return o
}

func (o GetAccountResultOutput) ToGetAccountResultOutputWithContext(ctx context.Context) GetAccountResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o GetAccountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetAccountResultOutput) MetroCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.MetroCode }).(pulumi.StringOutput)
}

func (o GetAccountResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Name }).(pulumi.StringOutput)
}

// Account unique number.
func (o GetAccountResultOutput) Number() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Number }).(pulumi.StringOutput)
}

func (o GetAccountResultOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.ProjectId }).(pulumi.StringOutput)
}

func (o GetAccountResultOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.Status }).(pulumi.StringOutput)
}

// Account unique identifier.
func (o GetAccountResultOutput) UcmId() pulumi.StringOutput {
	return o.ApplyT(func(v GetAccountResult) string { return v.UcmId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetAccountResultOutput{})
}
