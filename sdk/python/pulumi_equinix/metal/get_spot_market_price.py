# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities

__all__ = [
    'GetSpotMarketPriceResult',
    'AwaitableGetSpotMarketPriceResult',
    'get_spot_market_price',
    'get_spot_market_price_output',
]

@pulumi.output_type
class GetSpotMarketPriceResult:
    """
    A collection of values returned by getSpotMarketPrice.
    """
    def __init__(__self__, facility=None, id=None, metro=None, plan=None, price=None):
        if facility and not isinstance(facility, str):
            raise TypeError("Expected argument 'facility' to be a str")
        pulumi.set(__self__, "facility", facility)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if metro and not isinstance(metro, str):
            raise TypeError("Expected argument 'metro' to be a str")
        pulumi.set(__self__, "metro", metro)
        if plan and not isinstance(plan, str):
            raise TypeError("Expected argument 'plan' to be a str")
        pulumi.set(__self__, "plan", plan)
        if price and not isinstance(price, float):
            raise TypeError("Expected argument 'price' to be a float")
        pulumi.set(__self__, "price", price)

    @_builtins.property
    @pulumi.getter
    @_utilities.deprecated("""Use metro instead of facility.  For more information, read the migration guide: https://registry.terraform.io/providers/equinix/equinix/latest/docs/guides/migration_guide_facilities_to_metros_devices""")
    def facility(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "facility")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def metro(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "metro")

    @_builtins.property
    @pulumi.getter
    def plan(self) -> _builtins.str:
        return pulumi.get(self, "plan")

    @_builtins.property
    @pulumi.getter
    def price(self) -> _builtins.float:
        """
        Current spot market price for given plan in given facility.
        """
        return pulumi.get(self, "price")


class AwaitableGetSpotMarketPriceResult(GetSpotMarketPriceResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSpotMarketPriceResult(
            facility=self.facility,
            id=self.id,
            metro=self.metro,
            plan=self.plan,
            price=self.price)


def get_spot_market_price(facility: Optional[_builtins.str] = None,
                          metro: Optional[_builtins.str] = None,
                          plan: Optional[_builtins.str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSpotMarketPriceResult:
    """
    Use this data source to get Equinix Metal Spot Market Price for a plan.

    ## Example Usage

    Lookup by metro:

    ```python
    import pulumi
    import pulumi_equinix as equinix

    example = equinix.metal.get_spot_market_price(metro="sv",
        plan="c3.small.x86")
    ```


    :param _builtins.str facility: Name of the facility. Use metro instead; read the facility to metro migration guide
    :param _builtins.str metro: Name of the metro.
    :param _builtins.str plan: Name of the plan.
    """
    __args__ = dict()
    __args__['facility'] = facility
    __args__['metro'] = metro
    __args__['plan'] = plan
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('equinix:metal/getSpotMarketPrice:getSpotMarketPrice', __args__, opts=opts, typ=GetSpotMarketPriceResult).value

    return AwaitableGetSpotMarketPriceResult(
        facility=pulumi.get(__ret__, 'facility'),
        id=pulumi.get(__ret__, 'id'),
        metro=pulumi.get(__ret__, 'metro'),
        plan=pulumi.get(__ret__, 'plan'),
        price=pulumi.get(__ret__, 'price'))
def get_spot_market_price_output(facility: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 metro: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                 plan: Optional[pulumi.Input[_builtins.str]] = None,
                                 opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSpotMarketPriceResult]:
    """
    Use this data source to get Equinix Metal Spot Market Price for a plan.

    ## Example Usage

    Lookup by metro:

    ```python
    import pulumi
    import pulumi_equinix as equinix

    example = equinix.metal.get_spot_market_price(metro="sv",
        plan="c3.small.x86")
    ```


    :param _builtins.str facility: Name of the facility. Use metro instead; read the facility to metro migration guide
    :param _builtins.str metro: Name of the metro.
    :param _builtins.str plan: Name of the plan.
    """
    __args__ = dict()
    __args__['facility'] = facility
    __args__['metro'] = metro
    __args__['plan'] = plan
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('equinix:metal/getSpotMarketPrice:getSpotMarketPrice', __args__, opts=opts, typ=GetSpotMarketPriceResult)
    return __ret__.apply(lambda __response__: GetSpotMarketPriceResult(
        facility=pulumi.get(__response__, 'facility'),
        id=pulumi.get(__response__, 'id'),
        metro=pulumi.get(__response__, 'metro'),
        plan=pulumi.get(__response__, 'plan'),
        price=pulumi.get(__response__, 'price')))
