# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetCloudRoutersResult',
    'AwaitableGetCloudRoutersResult',
    'get_cloud_routers',
    'get_cloud_routers_output',
]

@pulumi.output_type
class GetCloudRoutersResult:
    """
    A collection of values returned by getCloudRouters.
    """
    def __init__(__self__, datas=None, filters=None, id=None, pagination=None, sort=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pagination and not isinstance(pagination, dict):
            raise TypeError("Expected argument 'pagination' to be a dict")
        pulumi.set(__self__, "pagination", pagination)
        if sort and not isinstance(sort, dict):
            raise TypeError("Expected argument 'sort' to be a dict")
        pulumi.set(__self__, "sort", sort)

    @property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.GetCloudRoutersDataResult']:
        """
        List of Cloud Routers
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def filters(self) -> Sequence['outputs.GetCloudRoutersFilterResult']:
        """
        Filters for the Data Source Search Request. Maximum of 8 total filters.
        """
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def pagination(self) -> Optional['outputs.GetCloudRoutersPaginationResult']:
        """
        Pagination details for the Data Source Search Request
        """
        return pulumi.get(self, "pagination")

    @property
    @pulumi.getter
    def sort(self) -> Optional['outputs.GetCloudRoutersSortResult']:
        """
        Filters for the Data Source Search Request
        """
        return pulumi.get(self, "sort")


class AwaitableGetCloudRoutersResult(GetCloudRoutersResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCloudRoutersResult(
            datas=self.datas,
            filters=self.filters,
            id=self.id,
            pagination=self.pagination,
            sort=self.sort)


def get_cloud_routers(filters: Optional[Sequence[Union['GetCloudRoutersFilterArgs', 'GetCloudRoutersFilterArgsDict']]] = None,
                      pagination: Optional[Union['GetCloudRoutersPaginationArgs', 'GetCloudRoutersPaginationArgsDict']] = None,
                      sort: Optional[Union['GetCloudRoutersSortArgs', 'GetCloudRoutersSortArgsDict']] = None,
                      opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetCloudRoutersResult:
    """
    Fabric V4 API compatible data resource that allow user to fetch Fabric Cloud Routers matching custom search criteria

    Additional documentation:
    * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks
    * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers


    :param Sequence[Union['GetCloudRoutersFilterArgs', 'GetCloudRoutersFilterArgsDict']] filters: Filters for the Data Source Search Request. Maximum of 8 total filters.
    :param Union['GetCloudRoutersPaginationArgs', 'GetCloudRoutersPaginationArgsDict'] pagination: Pagination details for the Data Source Search Request
    :param Union['GetCloudRoutersSortArgs', 'GetCloudRoutersSortArgsDict'] sort: Filters for the Data Source Search Request
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['pagination'] = pagination
    __args__['sort'] = sort
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('equinix:fabric/getCloudRouters:getCloudRouters', __args__, opts=opts, typ=GetCloudRoutersResult).value

    return AwaitableGetCloudRoutersResult(
        datas=pulumi.get(__ret__, 'datas'),
        filters=pulumi.get(__ret__, 'filters'),
        id=pulumi.get(__ret__, 'id'),
        pagination=pulumi.get(__ret__, 'pagination'),
        sort=pulumi.get(__ret__, 'sort'))


@_utilities.lift_output_func(get_cloud_routers)
def get_cloud_routers_output(filters: Optional[pulumi.Input[Sequence[Union['GetCloudRoutersFilterArgs', 'GetCloudRoutersFilterArgsDict']]]] = None,
                             pagination: Optional[pulumi.Input[Optional[Union['GetCloudRoutersPaginationArgs', 'GetCloudRoutersPaginationArgsDict']]]] = None,
                             sort: Optional[pulumi.Input[Optional[Union['GetCloudRoutersSortArgs', 'GetCloudRoutersSortArgsDict']]]] = None,
                             opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetCloudRoutersResult]:
    """
    Fabric V4 API compatible data resource that allow user to fetch Fabric Cloud Routers matching custom search criteria

    Additional documentation:
    * Getting Started: https://docs.equinix.com/en-us/Content/Interconnection/FCR/FCR-intro.htm#HowItWorks
    * API: https://developer.equinix.com/dev-docs/fabric/api-reference/fabric-v4-apis#fabric-cloud-routers


    :param Sequence[Union['GetCloudRoutersFilterArgs', 'GetCloudRoutersFilterArgsDict']] filters: Filters for the Data Source Search Request. Maximum of 8 total filters.
    :param Union['GetCloudRoutersPaginationArgs', 'GetCloudRoutersPaginationArgsDict'] pagination: Pagination details for the Data Source Search Request
    :param Union['GetCloudRoutersSortArgs', 'GetCloudRoutersSortArgsDict'] sort: Filters for the Data Source Search Request
    """
    ...
