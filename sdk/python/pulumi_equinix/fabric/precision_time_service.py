# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['PrecisionTimeServiceArgs', 'PrecisionTimeService']

@pulumi.input_type
class PrecisionTimeServiceArgs:
    def __init__(__self__, *,
                 connections: pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]],
                 ipv4: pulumi.Input['PrecisionTimeServiceIpv4Args'],
                 package: pulumi.Input['PrecisionTimeServicePackageArgs'],
                 type: pulumi.Input[str],
                 name: Optional[pulumi.Input[str]] = None,
                 ntp_advanced_configurations: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]] = None,
                 ptp_advanced_configuration: Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']] = None,
                 timeouts: Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']] = None):
        """
        The set of arguments for constructing a PrecisionTimeService resource.
        :param pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]] connections: An array of objects with unique identifiers of connections.
        :param pulumi.Input['PrecisionTimeServiceIpv4Args'] ipv4: An object that has Network IP Configurations for Timing Master Servers.
        :param pulumi.Input['PrecisionTimeServicePackageArgs'] package: Precision Time Service Package Details
        :param pulumi.Input[str] type: Choose type of Precision Time Service
        :param pulumi.Input[str] name: Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        :param pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]] ntp_advanced_configurations: NTP Advanced configuration
        :param pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs'] ptp_advanced_configuration: PTP Advanced Configuration
        """
        pulumi.set(__self__, "connections", connections)
        pulumi.set(__self__, "ipv4", ipv4)
        pulumi.set(__self__, "package", package)
        pulumi.set(__self__, "type", type)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if ntp_advanced_configurations is not None:
            pulumi.set(__self__, "ntp_advanced_configurations", ntp_advanced_configurations)
        if ptp_advanced_configuration is not None:
            pulumi.set(__self__, "ptp_advanced_configuration", ptp_advanced_configuration)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)

    @property
    @pulumi.getter
    def connections(self) -> pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]]:
        """
        An array of objects with unique identifiers of connections.
        """
        return pulumi.get(self, "connections")

    @connections.setter
    def connections(self, value: pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]]):
        pulumi.set(self, "connections", value)

    @property
    @pulumi.getter
    def ipv4(self) -> pulumi.Input['PrecisionTimeServiceIpv4Args']:
        """
        An object that has Network IP Configurations for Timing Master Servers.
        """
        return pulumi.get(self, "ipv4")

    @ipv4.setter
    def ipv4(self, value: pulumi.Input['PrecisionTimeServiceIpv4Args']):
        pulumi.set(self, "ipv4", value)

    @property
    @pulumi.getter
    def package(self) -> pulumi.Input['PrecisionTimeServicePackageArgs']:
        """
        Precision Time Service Package Details
        """
        return pulumi.get(self, "package")

    @package.setter
    def package(self, value: pulumi.Input['PrecisionTimeServicePackageArgs']):
        pulumi.set(self, "package", value)

    @property
    @pulumi.getter
    def type(self) -> pulumi.Input[str]:
        """
        Choose type of Precision Time Service
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: pulumi.Input[str]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="ntpAdvancedConfigurations")
    def ntp_advanced_configurations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]]:
        """
        NTP Advanced configuration
        """
        return pulumi.get(self, "ntp_advanced_configurations")

    @ntp_advanced_configurations.setter
    def ntp_advanced_configurations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]]):
        pulumi.set(self, "ntp_advanced_configurations", value)

    @property
    @pulumi.getter(name="ptpAdvancedConfiguration")
    def ptp_advanced_configuration(self) -> Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']]:
        """
        PTP Advanced Configuration
        """
        return pulumi.get(self, "ptp_advanced_configuration")

    @ptp_advanced_configuration.setter
    def ptp_advanced_configuration(self, value: Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']]):
        pulumi.set(self, "ptp_advanced_configuration", value)

    @property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)


@pulumi.input_type
class _PrecisionTimeServiceState:
    def __init__(__self__, *,
                 account: Optional[pulumi.Input['PrecisionTimeServiceAccountArgs']] = None,
                 change_log: Optional[pulumi.Input['PrecisionTimeServiceChangeLogArgs']] = None,
                 connections: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]]] = None,
                 href: Optional[pulumi.Input[str]] = None,
                 ipv4: Optional[pulumi.Input['PrecisionTimeServiceIpv4Args']] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ntp_advanced_configurations: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]] = None,
                 order: Optional[pulumi.Input['PrecisionTimeServiceOrderArgs']] = None,
                 package: Optional[pulumi.Input['PrecisionTimeServicePackageArgs']] = None,
                 precision_time_price: Optional[pulumi.Input['PrecisionTimeServicePrecisionTimePriceArgs']] = None,
                 project: Optional[pulumi.Input['PrecisionTimeServiceProjectArgs']] = None,
                 ptp_advanced_configuration: Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']] = None,
                 state: Optional[pulumi.Input[str]] = None,
                 timeouts: Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 uuid: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PrecisionTimeService resources.
        :param pulumi.Input['PrecisionTimeServiceAccountArgs'] account: Equinix User Account associated with Precision Time Service
        :param pulumi.Input['PrecisionTimeServiceChangeLogArgs'] change_log: Details of the last change on the route aggregation resource
        :param pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]] connections: An array of objects with unique identifiers of connections.
        :param pulumi.Input[str] href: Equinix generated Portal link for the created Precision Time Service
        :param pulumi.Input['PrecisionTimeServiceIpv4Args'] ipv4: An object that has Network IP Configurations for Timing Master Servers.
        :param pulumi.Input[str] name: Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        :param pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]] ntp_advanced_configurations: NTP Advanced configuration
        :param pulumi.Input['PrecisionTimeServiceOrderArgs'] order: Precision Time Order
        :param pulumi.Input['PrecisionTimeServicePackageArgs'] package: Precision Time Service Package Details
        :param pulumi.Input['PrecisionTimeServicePrecisionTimePriceArgs'] precision_time_price: Precision Time Service Price
        :param pulumi.Input['PrecisionTimeServiceProjectArgs'] project: Equinix Project attribute object
        :param pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs'] ptp_advanced_configuration: PTP Advanced Configuration
        :param pulumi.Input[str] state: Indicator of the state of this Precision Time Service
        :param pulumi.Input[str] type: Choose type of Precision Time Service
        :param pulumi.Input[str] uuid: Equinix generated id for the Precision Time Service
        """
        if account is not None:
            pulumi.set(__self__, "account", account)
        if change_log is not None:
            pulumi.set(__self__, "change_log", change_log)
        if connections is not None:
            pulumi.set(__self__, "connections", connections)
        if href is not None:
            pulumi.set(__self__, "href", href)
        if ipv4 is not None:
            pulumi.set(__self__, "ipv4", ipv4)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if ntp_advanced_configurations is not None:
            pulumi.set(__self__, "ntp_advanced_configurations", ntp_advanced_configurations)
        if order is not None:
            pulumi.set(__self__, "order", order)
        if package is not None:
            pulumi.set(__self__, "package", package)
        if precision_time_price is not None:
            pulumi.set(__self__, "precision_time_price", precision_time_price)
        if project is not None:
            pulumi.set(__self__, "project", project)
        if ptp_advanced_configuration is not None:
            pulumi.set(__self__, "ptp_advanced_configuration", ptp_advanced_configuration)
        if state is not None:
            pulumi.set(__self__, "state", state)
        if timeouts is not None:
            pulumi.set(__self__, "timeouts", timeouts)
        if type is not None:
            pulumi.set(__self__, "type", type)
        if uuid is not None:
            pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter
    def account(self) -> Optional[pulumi.Input['PrecisionTimeServiceAccountArgs']]:
        """
        Equinix User Account associated with Precision Time Service
        """
        return pulumi.get(self, "account")

    @account.setter
    def account(self, value: Optional[pulumi.Input['PrecisionTimeServiceAccountArgs']]):
        pulumi.set(self, "account", value)

    @property
    @pulumi.getter(name="changeLog")
    def change_log(self) -> Optional[pulumi.Input['PrecisionTimeServiceChangeLogArgs']]:
        """
        Details of the last change on the route aggregation resource
        """
        return pulumi.get(self, "change_log")

    @change_log.setter
    def change_log(self, value: Optional[pulumi.Input['PrecisionTimeServiceChangeLogArgs']]):
        pulumi.set(self, "change_log", value)

    @property
    @pulumi.getter
    def connections(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]]]:
        """
        An array of objects with unique identifiers of connections.
        """
        return pulumi.get(self, "connections")

    @connections.setter
    def connections(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceConnectionArgs']]]]):
        pulumi.set(self, "connections", value)

    @property
    @pulumi.getter
    def href(self) -> Optional[pulumi.Input[str]]:
        """
        Equinix generated Portal link for the created Precision Time Service
        """
        return pulumi.get(self, "href")

    @href.setter
    def href(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "href", value)

    @property
    @pulumi.getter
    def ipv4(self) -> Optional[pulumi.Input['PrecisionTimeServiceIpv4Args']]:
        """
        An object that has Network IP Configurations for Timing Master Servers.
        """
        return pulumi.get(self, "ipv4")

    @ipv4.setter
    def ipv4(self, value: Optional[pulumi.Input['PrecisionTimeServiceIpv4Args']]):
        pulumi.set(self, "ipv4", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="ntpAdvancedConfigurations")
    def ntp_advanced_configurations(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]]:
        """
        NTP Advanced configuration
        """
        return pulumi.get(self, "ntp_advanced_configurations")

    @ntp_advanced_configurations.setter
    def ntp_advanced_configurations(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['PrecisionTimeServiceNtpAdvancedConfigurationArgs']]]]):
        pulumi.set(self, "ntp_advanced_configurations", value)

    @property
    @pulumi.getter
    def order(self) -> Optional[pulumi.Input['PrecisionTimeServiceOrderArgs']]:
        """
        Precision Time Order
        """
        return pulumi.get(self, "order")

    @order.setter
    def order(self, value: Optional[pulumi.Input['PrecisionTimeServiceOrderArgs']]):
        pulumi.set(self, "order", value)

    @property
    @pulumi.getter
    def package(self) -> Optional[pulumi.Input['PrecisionTimeServicePackageArgs']]:
        """
        Precision Time Service Package Details
        """
        return pulumi.get(self, "package")

    @package.setter
    def package(self, value: Optional[pulumi.Input['PrecisionTimeServicePackageArgs']]):
        pulumi.set(self, "package", value)

    @property
    @pulumi.getter(name="precisionTimePrice")
    def precision_time_price(self) -> Optional[pulumi.Input['PrecisionTimeServicePrecisionTimePriceArgs']]:
        """
        Precision Time Service Price
        """
        return pulumi.get(self, "precision_time_price")

    @precision_time_price.setter
    def precision_time_price(self, value: Optional[pulumi.Input['PrecisionTimeServicePrecisionTimePriceArgs']]):
        pulumi.set(self, "precision_time_price", value)

    @property
    @pulumi.getter
    def project(self) -> Optional[pulumi.Input['PrecisionTimeServiceProjectArgs']]:
        """
        Equinix Project attribute object
        """
        return pulumi.get(self, "project")

    @project.setter
    def project(self, value: Optional[pulumi.Input['PrecisionTimeServiceProjectArgs']]):
        pulumi.set(self, "project", value)

    @property
    @pulumi.getter(name="ptpAdvancedConfiguration")
    def ptp_advanced_configuration(self) -> Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']]:
        """
        PTP Advanced Configuration
        """
        return pulumi.get(self, "ptp_advanced_configuration")

    @ptp_advanced_configuration.setter
    def ptp_advanced_configuration(self, value: Optional[pulumi.Input['PrecisionTimeServicePtpAdvancedConfigurationArgs']]):
        pulumi.set(self, "ptp_advanced_configuration", value)

    @property
    @pulumi.getter
    def state(self) -> Optional[pulumi.Input[str]]:
        """
        Indicator of the state of this Precision Time Service
        """
        return pulumi.get(self, "state")

    @state.setter
    def state(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "state", value)

    @property
    @pulumi.getter
    def timeouts(self) -> Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']]:
        return pulumi.get(self, "timeouts")

    @timeouts.setter
    def timeouts(self, value: Optional[pulumi.Input['PrecisionTimeServiceTimeoutsArgs']]):
        pulumi.set(self, "timeouts", value)

    @property
    @pulumi.getter
    def type(self) -> Optional[pulumi.Input[str]]:
        """
        Choose type of Precision Time Service
        """
        return pulumi.get(self, "type")

    @type.setter
    def type(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "type", value)

    @property
    @pulumi.getter
    def uuid(self) -> Optional[pulumi.Input[str]]:
        """
        Equinix generated id for the Precision Time Service
        """
        return pulumi.get(self, "uuid")

    @uuid.setter
    def uuid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "uuid", value)


class PrecisionTimeService(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 connections: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceConnectionArgs', 'PrecisionTimeServiceConnectionArgsDict']]]]] = None,
                 ipv4: Optional[pulumi.Input[Union['PrecisionTimeServiceIpv4Args', 'PrecisionTimeServiceIpv4ArgsDict']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ntp_advanced_configurations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceNtpAdvancedConfigurationArgs', 'PrecisionTimeServiceNtpAdvancedConfigurationArgsDict']]]]] = None,
                 package: Optional[pulumi.Input[Union['PrecisionTimeServicePackageArgs', 'PrecisionTimeServicePackageArgsDict']]] = None,
                 ptp_advanced_configuration: Optional[pulumi.Input[Union['PrecisionTimeServicePtpAdvancedConfigurationArgs', 'PrecisionTimeServicePtpAdvancedConfigurationArgsDict']]] = None,
                 timeouts: Optional[pulumi.Input[Union['PrecisionTimeServiceTimeoutsArgs', 'PrecisionTimeServiceTimeoutsArgsDict']]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Fabric V4 API compatible resource allows creation and management of Equinix Fabric Precision Time Service

        Additional Documentation:
        * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceConnectionArgs', 'PrecisionTimeServiceConnectionArgsDict']]]] connections: An array of objects with unique identifiers of connections.
        :param pulumi.Input[Union['PrecisionTimeServiceIpv4Args', 'PrecisionTimeServiceIpv4ArgsDict']] ipv4: An object that has Network IP Configurations for Timing Master Servers.
        :param pulumi.Input[str] name: Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        :param pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceNtpAdvancedConfigurationArgs', 'PrecisionTimeServiceNtpAdvancedConfigurationArgsDict']]]] ntp_advanced_configurations: NTP Advanced configuration
        :param pulumi.Input[Union['PrecisionTimeServicePackageArgs', 'PrecisionTimeServicePackageArgsDict']] package: Precision Time Service Package Details
        :param pulumi.Input[Union['PrecisionTimeServicePtpAdvancedConfigurationArgs', 'PrecisionTimeServicePtpAdvancedConfigurationArgsDict']] ptp_advanced_configuration: PTP Advanced Configuration
        :param pulumi.Input[str] type: Choose type of Precision Time Service
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PrecisionTimeServiceArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Fabric V4 API compatible resource allows creation and management of Equinix Fabric Precision Time Service

        Additional Documentation:
        * API: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/API-Reference/API-Precision-Time.htm

        :param str resource_name: The name of the resource.
        :param PrecisionTimeServiceArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PrecisionTimeServiceArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 connections: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceConnectionArgs', 'PrecisionTimeServiceConnectionArgsDict']]]]] = None,
                 ipv4: Optional[pulumi.Input[Union['PrecisionTimeServiceIpv4Args', 'PrecisionTimeServiceIpv4ArgsDict']]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 ntp_advanced_configurations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceNtpAdvancedConfigurationArgs', 'PrecisionTimeServiceNtpAdvancedConfigurationArgsDict']]]]] = None,
                 package: Optional[pulumi.Input[Union['PrecisionTimeServicePackageArgs', 'PrecisionTimeServicePackageArgsDict']]] = None,
                 ptp_advanced_configuration: Optional[pulumi.Input[Union['PrecisionTimeServicePtpAdvancedConfigurationArgs', 'PrecisionTimeServicePtpAdvancedConfigurationArgsDict']]] = None,
                 timeouts: Optional[pulumi.Input[Union['PrecisionTimeServiceTimeoutsArgs', 'PrecisionTimeServiceTimeoutsArgsDict']]] = None,
                 type: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PrecisionTimeServiceArgs.__new__(PrecisionTimeServiceArgs)

            if connections is None and not opts.urn:
                raise TypeError("Missing required property 'connections'")
            __props__.__dict__["connections"] = connections
            if ipv4 is None and not opts.urn:
                raise TypeError("Missing required property 'ipv4'")
            __props__.__dict__["ipv4"] = ipv4
            __props__.__dict__["name"] = name
            __props__.__dict__["ntp_advanced_configurations"] = ntp_advanced_configurations
            if package is None and not opts.urn:
                raise TypeError("Missing required property 'package'")
            __props__.__dict__["package"] = package
            __props__.__dict__["ptp_advanced_configuration"] = ptp_advanced_configuration
            __props__.__dict__["timeouts"] = timeouts
            if type is None and not opts.urn:
                raise TypeError("Missing required property 'type'")
            __props__.__dict__["type"] = type
            __props__.__dict__["account"] = None
            __props__.__dict__["change_log"] = None
            __props__.__dict__["href"] = None
            __props__.__dict__["order"] = None
            __props__.__dict__["precision_time_price"] = None
            __props__.__dict__["project"] = None
            __props__.__dict__["state"] = None
            __props__.__dict__["uuid"] = None
        super(PrecisionTimeService, __self__).__init__(
            'equinix:fabric/precisionTimeService:PrecisionTimeService',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            account: Optional[pulumi.Input[Union['PrecisionTimeServiceAccountArgs', 'PrecisionTimeServiceAccountArgsDict']]] = None,
            change_log: Optional[pulumi.Input[Union['PrecisionTimeServiceChangeLogArgs', 'PrecisionTimeServiceChangeLogArgsDict']]] = None,
            connections: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceConnectionArgs', 'PrecisionTimeServiceConnectionArgsDict']]]]] = None,
            href: Optional[pulumi.Input[str]] = None,
            ipv4: Optional[pulumi.Input[Union['PrecisionTimeServiceIpv4Args', 'PrecisionTimeServiceIpv4ArgsDict']]] = None,
            name: Optional[pulumi.Input[str]] = None,
            ntp_advanced_configurations: Optional[pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceNtpAdvancedConfigurationArgs', 'PrecisionTimeServiceNtpAdvancedConfigurationArgsDict']]]]] = None,
            order: Optional[pulumi.Input[Union['PrecisionTimeServiceOrderArgs', 'PrecisionTimeServiceOrderArgsDict']]] = None,
            package: Optional[pulumi.Input[Union['PrecisionTimeServicePackageArgs', 'PrecisionTimeServicePackageArgsDict']]] = None,
            precision_time_price: Optional[pulumi.Input[Union['PrecisionTimeServicePrecisionTimePriceArgs', 'PrecisionTimeServicePrecisionTimePriceArgsDict']]] = None,
            project: Optional[pulumi.Input[Union['PrecisionTimeServiceProjectArgs', 'PrecisionTimeServiceProjectArgsDict']]] = None,
            ptp_advanced_configuration: Optional[pulumi.Input[Union['PrecisionTimeServicePtpAdvancedConfigurationArgs', 'PrecisionTimeServicePtpAdvancedConfigurationArgsDict']]] = None,
            state: Optional[pulumi.Input[str]] = None,
            timeouts: Optional[pulumi.Input[Union['PrecisionTimeServiceTimeoutsArgs', 'PrecisionTimeServiceTimeoutsArgsDict']]] = None,
            type: Optional[pulumi.Input[str]] = None,
            uuid: Optional[pulumi.Input[str]] = None) -> 'PrecisionTimeService':
        """
        Get an existing PrecisionTimeService resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[Union['PrecisionTimeServiceAccountArgs', 'PrecisionTimeServiceAccountArgsDict']] account: Equinix User Account associated with Precision Time Service
        :param pulumi.Input[Union['PrecisionTimeServiceChangeLogArgs', 'PrecisionTimeServiceChangeLogArgsDict']] change_log: Details of the last change on the route aggregation resource
        :param pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceConnectionArgs', 'PrecisionTimeServiceConnectionArgsDict']]]] connections: An array of objects with unique identifiers of connections.
        :param pulumi.Input[str] href: Equinix generated Portal link for the created Precision Time Service
        :param pulumi.Input[Union['PrecisionTimeServiceIpv4Args', 'PrecisionTimeServiceIpv4ArgsDict']] ipv4: An object that has Network IP Configurations for Timing Master Servers.
        :param pulumi.Input[str] name: Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        :param pulumi.Input[Sequence[pulumi.Input[Union['PrecisionTimeServiceNtpAdvancedConfigurationArgs', 'PrecisionTimeServiceNtpAdvancedConfigurationArgsDict']]]] ntp_advanced_configurations: NTP Advanced configuration
        :param pulumi.Input[Union['PrecisionTimeServiceOrderArgs', 'PrecisionTimeServiceOrderArgsDict']] order: Precision Time Order
        :param pulumi.Input[Union['PrecisionTimeServicePackageArgs', 'PrecisionTimeServicePackageArgsDict']] package: Precision Time Service Package Details
        :param pulumi.Input[Union['PrecisionTimeServicePrecisionTimePriceArgs', 'PrecisionTimeServicePrecisionTimePriceArgsDict']] precision_time_price: Precision Time Service Price
        :param pulumi.Input[Union['PrecisionTimeServiceProjectArgs', 'PrecisionTimeServiceProjectArgsDict']] project: Equinix Project attribute object
        :param pulumi.Input[Union['PrecisionTimeServicePtpAdvancedConfigurationArgs', 'PrecisionTimeServicePtpAdvancedConfigurationArgsDict']] ptp_advanced_configuration: PTP Advanced Configuration
        :param pulumi.Input[str] state: Indicator of the state of this Precision Time Service
        :param pulumi.Input[str] type: Choose type of Precision Time Service
        :param pulumi.Input[str] uuid: Equinix generated id for the Precision Time Service
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PrecisionTimeServiceState.__new__(_PrecisionTimeServiceState)

        __props__.__dict__["account"] = account
        __props__.__dict__["change_log"] = change_log
        __props__.__dict__["connections"] = connections
        __props__.__dict__["href"] = href
        __props__.__dict__["ipv4"] = ipv4
        __props__.__dict__["name"] = name
        __props__.__dict__["ntp_advanced_configurations"] = ntp_advanced_configurations
        __props__.__dict__["order"] = order
        __props__.__dict__["package"] = package
        __props__.__dict__["precision_time_price"] = precision_time_price
        __props__.__dict__["project"] = project
        __props__.__dict__["ptp_advanced_configuration"] = ptp_advanced_configuration
        __props__.__dict__["state"] = state
        __props__.__dict__["timeouts"] = timeouts
        __props__.__dict__["type"] = type
        __props__.__dict__["uuid"] = uuid
        return PrecisionTimeService(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def account(self) -> pulumi.Output['outputs.PrecisionTimeServiceAccount']:
        """
        Equinix User Account associated with Precision Time Service
        """
        return pulumi.get(self, "account")

    @property
    @pulumi.getter(name="changeLog")
    def change_log(self) -> pulumi.Output['outputs.PrecisionTimeServiceChangeLog']:
        """
        Details of the last change on the route aggregation resource
        """
        return pulumi.get(self, "change_log")

    @property
    @pulumi.getter
    def connections(self) -> pulumi.Output[Sequence['outputs.PrecisionTimeServiceConnection']]:
        """
        An array of objects with unique identifiers of connections.
        """
        return pulumi.get(self, "connections")

    @property
    @pulumi.getter
    def href(self) -> pulumi.Output[str]:
        """
        Equinix generated Portal link for the created Precision Time Service
        """
        return pulumi.get(self, "href")

    @property
    @pulumi.getter
    def ipv4(self) -> pulumi.Output['outputs.PrecisionTimeServiceIpv4']:
        """
        An object that has Network IP Configurations for Timing Master Servers.
        """
        return pulumi.get(self, "ipv4")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        Name of Precision Time Service. Applicable values: Maximum: 24 characters; Allowed characters: alpha-numeric, hyphens ('-') and underscores ('_')
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="ntpAdvancedConfigurations")
    def ntp_advanced_configurations(self) -> pulumi.Output[Optional[Sequence['outputs.PrecisionTimeServiceNtpAdvancedConfiguration']]]:
        """
        NTP Advanced configuration
        """
        return pulumi.get(self, "ntp_advanced_configurations")

    @property
    @pulumi.getter
    def order(self) -> pulumi.Output['outputs.PrecisionTimeServiceOrder']:
        """
        Precision Time Order
        """
        return pulumi.get(self, "order")

    @property
    @pulumi.getter
    def package(self) -> pulumi.Output['outputs.PrecisionTimeServicePackage']:
        """
        Precision Time Service Package Details
        """
        return pulumi.get(self, "package")

    @property
    @pulumi.getter(name="precisionTimePrice")
    def precision_time_price(self) -> pulumi.Output['outputs.PrecisionTimeServicePrecisionTimePrice']:
        """
        Precision Time Service Price
        """
        return pulumi.get(self, "precision_time_price")

    @property
    @pulumi.getter
    def project(self) -> pulumi.Output['outputs.PrecisionTimeServiceProject']:
        """
        Equinix Project attribute object
        """
        return pulumi.get(self, "project")

    @property
    @pulumi.getter(name="ptpAdvancedConfiguration")
    def ptp_advanced_configuration(self) -> pulumi.Output[Optional['outputs.PrecisionTimeServicePtpAdvancedConfiguration']]:
        """
        PTP Advanced Configuration
        """
        return pulumi.get(self, "ptp_advanced_configuration")

    @property
    @pulumi.getter
    def state(self) -> pulumi.Output[str]:
        """
        Indicator of the state of this Precision Time Service
        """
        return pulumi.get(self, "state")

    @property
    @pulumi.getter
    def timeouts(self) -> pulumi.Output[Optional['outputs.PrecisionTimeServiceTimeouts']]:
        return pulumi.get(self, "timeouts")

    @property
    @pulumi.getter
    def type(self) -> pulumi.Output[str]:
        """
        Choose type of Precision Time Service
        """
        return pulumi.get(self, "type")

    @property
    @pulumi.getter
    def uuid(self) -> pulumi.Output[str]:
        """
        Equinix generated id for the Precision Time Service
        """
        return pulumi.get(self, "uuid")

