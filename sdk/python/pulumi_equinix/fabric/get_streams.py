# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetStreamsResult',
    'AwaitableGetStreamsResult',
    'get_streams',
    'get_streams_output',
]

@pulumi.output_type
class GetStreamsResult:
    """
    A collection of values returned by getStreams.
    """
    def __init__(__self__, datas=None, id=None, pagination=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if pagination and not isinstance(pagination, dict):
            raise TypeError("Expected argument 'pagination' to be a dict")
        pulumi.set(__self__, "pagination", pagination)

    @property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.GetStreamsDataResult']:
        """
        Returned list of stream objects
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The unique identifier of the resource
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def pagination(self) -> 'outputs.GetStreamsPaginationResult':
        """
        Pagination details for the returned streams list
        """
        return pulumi.get(self, "pagination")


class AwaitableGetStreamsResult(GetStreamsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetStreamsResult(
            datas=self.datas,
            id=self.id,
            pagination=self.pagination)


def get_streams(pagination: Optional[Union['GetStreamsPaginationArgs', 'GetStreamsPaginationArgsDict']] = None,
                opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetStreamsResult:
    """
    Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Streams with pagination details

    Additional Documentation:
    * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
    * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams

    ## Example Usage

    ```python
    import pulumi
    import pulumi_equinix as equinix

    data_streams = equinix.fabric.get_streams(pagination={
        "limit": 2,
        "offset": 1,
    })
    pulumi.export("numberOfReturnedStreams", len(data_streams.datas))
    ```


    :param Union['GetStreamsPaginationArgs', 'GetStreamsPaginationArgsDict'] pagination: Pagination details for the returned streams list
    """
    __args__ = dict()
    __args__['pagination'] = pagination
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('equinix:fabric/getStreams:getStreams', __args__, opts=opts, typ=GetStreamsResult).value

    return AwaitableGetStreamsResult(
        datas=pulumi.get(__ret__, 'datas'),
        id=pulumi.get(__ret__, 'id'),
        pagination=pulumi.get(__ret__, 'pagination'))
def get_streams_output(pagination: Optional[pulumi.Input[Union['GetStreamsPaginationArgs', 'GetStreamsPaginationArgsDict']]] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetStreamsResult]:
    """
    Fabric V4 API compatible data resource that allow user to fetch Equinix Fabric Streams with pagination details

    Additional Documentation:
    * Getting Started: https://docs.equinix.com/en-us/Content/KnowledgeCenter/Fabric/GettingStarted/Integrating-with-Fabric-V4-APIs/IntegrateWithSink.htm
    * API: https://developer.equinix.com/catalog/fabricv4#tag/Streams

    ## Example Usage

    ```python
    import pulumi
    import pulumi_equinix as equinix

    data_streams = equinix.fabric.get_streams(pagination={
        "limit": 2,
        "offset": 1,
    })
    pulumi.export("numberOfReturnedStreams", len(data_streams.datas))
    ```


    :param Union['GetStreamsPaginationArgs', 'GetStreamsPaginationArgsDict'] pagination: Pagination details for the returned streams list
    """
    __args__ = dict()
    __args__['pagination'] = pagination
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('equinix:fabric/getStreams:getStreams', __args__, opts=opts, typ=GetStreamsResult)
    return __ret__.apply(lambda __response__: GetStreamsResult(
        datas=pulumi.get(__response__, 'datas'),
        id=pulumi.get(__response__, 'id'),
        pagination=pulumi.get(__response__, 'pagination')))
