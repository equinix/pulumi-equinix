# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetServiceProfilesResult',
    'AwaitableGetServiceProfilesResult',
    'get_service_profiles',
    'get_service_profiles_output',
]

@pulumi.output_type
class GetServiceProfilesResult:
    """
    A collection of values returned by getServiceProfiles.
    """
    def __init__(__self__, datas=None, filters=None, id=None, sorts=None):
        if datas and not isinstance(datas, list):
            raise TypeError("Expected argument 'datas' to be a list")
        pulumi.set(__self__, "datas", datas)
        if filters and not isinstance(filters, list):
            raise TypeError("Expected argument 'filters' to be a list")
        pulumi.set(__self__, "filters", filters)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if sorts and not isinstance(sorts, list):
            raise TypeError("Expected argument 'sorts' to be a list")
        pulumi.set(__self__, "sorts", sorts)

    @property
    @pulumi.getter
    def datas(self) -> Sequence['outputs.GetServiceProfilesDataResult']:
        """
        List of  Service Profiles
        """
        return pulumi.get(self, "datas")

    @property
    @pulumi.getter
    def filters(self) -> Optional[Sequence['outputs.GetServiceProfilesFilterResult']]:
        """
        Service Profile Search Filter
        """
        return pulumi.get(self, "filters")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def sorts(self) -> Optional[Sequence['outputs.GetServiceProfilesSortResult']]:
        """
        Service Profile Sort criteria for Search Request response payload
        """
        return pulumi.get(self, "sorts")


class AwaitableGetServiceProfilesResult(GetServiceProfilesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetServiceProfilesResult(
            datas=self.datas,
            filters=self.filters,
            id=self.id,
            sorts=self.sorts)


def get_service_profiles(filters: Optional[Sequence[pulumi.InputType['GetServiceProfilesFilterArgs']]] = None,
                         sorts: Optional[Sequence[pulumi.InputType['GetServiceProfilesSortArgs']]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetServiceProfilesResult:
    """
    Use this data source to access information about an existing resource.

    :param Sequence[pulumi.InputType['GetServiceProfilesFilterArgs']] filters: Service Profile Search Filter
    :param Sequence[pulumi.InputType['GetServiceProfilesSortArgs']] sorts: Service Profile Sort criteria for Search Request response payload
    """
    __args__ = dict()
    __args__['filters'] = filters
    __args__['sorts'] = sorts
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('equinix:fabric/getServiceProfiles:getServiceProfiles', __args__, opts=opts, typ=GetServiceProfilesResult).value

    return AwaitableGetServiceProfilesResult(
        datas=__ret__.datas,
        filters=__ret__.filters,
        id=__ret__.id,
        sorts=__ret__.sorts)


@_utilities.lift_output_func(get_service_profiles)
def get_service_profiles_output(filters: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetServiceProfilesFilterArgs']]]]] = None,
                                sorts: Optional[pulumi.Input[Optional[Sequence[pulumi.InputType['GetServiceProfilesSortArgs']]]]] = None,
                                opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetServiceProfilesResult]:
    """
    Use this data source to access information about an existing resource.

    :param Sequence[pulumi.InputType['GetServiceProfilesFilterArgs']] filters: Service Profile Search Filter
    :param Sequence[pulumi.InputType['GetServiceProfilesSortArgs']] sorts: Service Profile Sort criteria for Search Request response payload
    """
    ...
