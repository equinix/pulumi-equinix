From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Oscar Cobles <oscar.cobles@eu.equinix.com>
Date: Thu, 4 Jul 2024 12:29:16 +0200
Subject: [PATCH] remove provider meta

Signed-off-by: Oscar Cobles <oscar.cobles@eu.equinix.com>

diff --git a/equinix/provider.go b/equinix/provider.go
index b300753..7a4c77b 100644
--- a/equinix/provider.go
+++ b/equinix/provider.go
@@ -138,12 +138,6 @@ func Provider() *schema.Provider {
 			"equinix_metal_bgp_session":          resourceMetalBGPSession(),
 			"equinix_metal_port_vlan_attachment": resourceMetalPortVlanAttachment(),
 		},
-		ProviderMetaSchema: map[string]*schema.Schema{
-			"module_name": {
-				Type:     schema.TypeString,
-				Optional: true,
-			},
-		},
 	}
 
 	provider.ConfigureContextFunc = func(ctx context.Context, d *schema.ResourceData) (interface{}, diag.Diagnostics) {
@@ -152,10 +146,6 @@ func Provider() *schema.Provider {
 	return provider
 }
 
-type providerMeta struct {
-	ModuleName string `cty:"module_name"`
-}
-
 func configureProvider(ctx context.Context, d *schema.ResourceData, p *schema.Provider) (interface{}, diag.Diagnostics) {
 	mrws := d.Get("max_retry_wait_seconds").(int)
 	rt := d.Get("request_timeout").(int)
@@ -171,11 +161,7 @@ func configureProvider(ctx context.Context, d *schema.ResourceData, p *schema.Pr
 		MaxRetries:     d.Get("max_retries").(int),
 		MaxRetryWait:   time.Duration(mrws) * time.Second,
 	}
-	meta := providerMeta{}
 
-	if err := d.GetProviderMeta(&meta); err != nil {
-		return nil, diag.FromErr(err)
-	}
 	config.TerraformVersion = p.TerraformVersion
 	if config.TerraformVersion == "" {
 		// Terraform 0.12 introduced this field to the protocol
diff --git a/internal/config/config.go b/internal/config/config.go
index 5b34288..f8e633e 100644
--- a/internal/config/config.go
+++ b/internal/config/config.go
@@ -36,10 +36,6 @@ const (
 	MetalAuthTokenEnvVar = "METAL_AUTH_TOKEN"
 )
 
-type ProviderMeta struct {
-	ModuleName string `cty:"module_name"`
-}
-
 const (
 	consumerToken = "aZ9GmqHTPtxevvFq9SK3Pi2yr9YCbRzduCSXF2SNem5sjB91mDq7Th3ZwTtRqMWZ"
 	metalBasePath = "/metal/v1/"
@@ -307,16 +303,7 @@ func (c *Config) AddFwModuleToMetalUserAgent(ctx context.Context, meta tfsdk.Con
 	c.Metal.UserAgent = generateFwModuleUserAgentString(ctx, meta, c.metalUserAgent)
 }
 
-func generateFwModuleUserAgentString(ctx context.Context, meta tfsdk.Config, baseUserAgent string) string {
-	var m ProviderMeta
-	diags := meta.Get(ctx, &m)
-	if diags.HasError() {
-		log.Printf("[WARN] error retrieving provider_meta")
-		return baseUserAgent
-	}
-	if m.ModuleName != "" {
-		return strings.Join([]string{m.ModuleName, baseUserAgent}, " ")
-	}
+func generateFwModuleUserAgentString(_ context.Context, _ tfsdk.Config, baseUserAgent string) string {
 	return baseUserAgent
 }
 
@@ -324,24 +311,14 @@ func (c *Config) AddModuleToMetalUserAgent(d *schema.ResourceData) {
 	c.Metal.UserAgent = generateModuleUserAgentString(d, c.metalUserAgent)
 }
 
-func generateModuleUserAgentString(d *schema.ResourceData, baseUserAgent string) string {
-	var m ProviderMeta
-	err := d.GetProviderMeta(&m)
-	if err != nil {
-		log.Printf("[WARN] error retrieving provider_meta")
-		return baseUserAgent
-	}
-
-	if m.ModuleName != "" {
-		return strings.Join([]string{m.ModuleName, baseUserAgent}, " ")
-	}
+func generateModuleUserAgentString(_ *schema.ResourceData, baseUserAgent string) string {
 	return baseUserAgent
 }
 
 func (c *Config) tfSdkUserAgent(suffix string) string {
 	sdkModulePath := "github.com/pulumi/pulumi/pkg/v3"
 	baseUserAgent := fmt.Sprintf("Pulumi/%s (+https://www.pulumi.com) Pulumi Plugin SDK/%s",
-			c.TerraformVersion, moduleVersionFromBuild(sdkModulePath))
+		c.TerraformVersion, moduleVersionFromBuild(sdkModulePath))
 	baseUserAgent = appendUserAgentFromEnv(baseUserAgent)
 	userAgent := fmt.Sprintf("%s pulumi-equinix/%s %s", baseUserAgent, version.ProviderVersion, suffix)
 	return strings.TrimSpace(userAgent)
@@ -350,7 +327,7 @@ func (c *Config) tfSdkUserAgent(suffix string) string {
 func (c *Config) tfFrameworkUserAgent(suffix string) string {
 	frameworkModulePath := "github.com/pulumi/pulumi/pkg/v3"
 	baseUserAgent := fmt.Sprintf("Pulumi/%s (+https://www.pulumi.com) Pulumi Plugin SDK/%s",
-			c.TerraformVersion, moduleVersionFromBuild(frameworkModulePath))
+		c.TerraformVersion, moduleVersionFromBuild(frameworkModulePath))
 	baseUserAgent = appendUserAgentFromEnv(baseUserAgent)
 	userAgent := fmt.Sprintf("%s pulumi-equinix/%s %s", baseUserAgent, version.ProviderVersion, suffix)
 	return strings.TrimSpace(userAgent)
diff --git a/internal/provider/provider.go b/internal/provider/provider.go
index 4e0d186..cd2574b 100644
--- a/internal/provider/provider.go
+++ b/internal/provider/provider.go
@@ -17,7 +17,6 @@ import (
 	"github.com/hashicorp/terraform-plugin-framework-validators/int64validator"
 	"github.com/hashicorp/terraform-plugin-framework/datasource"
 	"github.com/hashicorp/terraform-plugin-framework/provider"
-	"github.com/hashicorp/terraform-plugin-framework/provider/metaschema"
 	"github.com/hashicorp/terraform-plugin-framework/provider/schema"
 	"github.com/hashicorp/terraform-plugin-framework/resource"
 	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
@@ -28,7 +27,7 @@ type FrameworkProvider struct {
 	Meta            *config.Config
 }
 
-func CreateFrameworkProvider(version string) provider.ProviderWithMetaSchema {
+func CreateFrameworkProvider(version string) provider.Provider {
 	return &FrameworkProvider{
 		ProviderVersion: version,
 	}
@@ -98,20 +97,6 @@ func (p *FrameworkProvider) Schema(
 	}
 }
 
-func (p *FrameworkProvider) MetaSchema(
-	ctx context.Context,
-	req provider.MetaSchemaRequest,
-	resp *provider.MetaSchemaResponse,
-) {
-	resp.Schema = metaschema.Schema{
-		Attributes: map[string]metaschema.Attribute{
-			"module_name": schema.StringAttribute{
-				Optional: true,
-			},
-		},
-	}
-}
-
 func (p *FrameworkProvider) Resources(ctx context.Context) []func() resource.Resource {
 	return []func() resource.Resource{
 		metalgateway.NewResource,
